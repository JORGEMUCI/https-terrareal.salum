{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"contracts/Criptomoedaterrareal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract TerraReal {\\n    // Public variables of the token\\n    string public name = \\\"Terra Real\\\";\\n    string public symbol = \\\"TR\\\";\\n    uint8 public decimals = 0;\\n    uint256 public totalSupply;\\n\\n    // Constants\\n    uint256 public constant squareMetersPerToken = 1; // Each token represents 1 square meter of land\\n    uint256 public constant hectares = 2500; // 2,500 hectares\\n    uint256 public constant initialSupply = squareMetersPerToken * hectares * 10000; // Converting hectares to square meters\\n\\n    // Owner of the contract\\n    address public owner;\\n    \\n    // Mapping to hold balances\\n    mapping(address => uint256) public balanceOf;\\n    // Mapping to hold allowances\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    // Events\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    // Constructor\\n    constructor() {\\n        totalSupply = initialSupply;\\n        balanceOf[msg.sender] = initialSupply;\\n        owner = msg.sender;\\n        emit Transfer(address(0), msg.sender, initialSupply);\\n    }\\n\\n    // Modifier to check if the caller is the owner\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner can perform this action\\\");\\n        _;\\n    }\\n\\n    // Transfer function\\n    function transfer(address _to, uint256 _value) public returns (bool success) {\\n        require(_to != address(0), \\\"Invalid address\\\");\\n        require(balanceOf[msg.sender] >= _value, \\\"Insufficient balance\\\");\\n        \\n        balanceOf[msg.sender] -= _value;\\n        balanceOf[_to] += _value;\\n        \\n        emit Transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n\\n    // Approve function\\n    function approve(address _spender, uint256 _value) public returns (bool success) {\\n        allowance[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n\\n    // Transfer from function\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n        require(_from != address(0) && _to != address(0), \\\"Invalid address\\\");\\n        require(balanceOf[_from] >= _value, \\\"Insufficient balance\\\");\\n        require(allowance[_from][msg.sender] >= _value, \\\"Allowance exceeded\\\");\\n\\n        balanceOf[_from] -= _value;\\n        balanceOf[_to] += _value;\\n        allowance[_from][msg.sender] -= _value;\\n\\n        emit Transfer(_from, _to, _value);\\n        return true;\\n    }\\n\\n    // Mint function\\n    function mint(uint256 _amount) public onlyOwner {\\n        totalSupply += _amount;\\n        balanceOf[owner] += _amount;\\n        emit Transfer(address(0), owner, _amount);\\n    }\\n\\n    // Function to transfer ownership to a new address\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        require(newOwner != address(0), \\\"New owner is the zero address\\\");\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "TerraReal",
	"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hectares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"squareMetersPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Criptomoedaterrareal.sol\":\"TerraReal\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Criptomoedaterrareal.sol\":{\"keccak256\":\"0xab5a147e0fe9955d2a2120b051143fbc79efd5be97ebc6703d512ee4ed1cad2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ffb6a3878d21b41bb206ecd422e4356e3e6e0ed21b5945dd8d9b791b320ce5b\",\"dweb:/ipfs/QmWVtBynuyhYJBnHCEaZdQc9tT3w6dsWcKPtZLz52GfVhy\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_89": {
				"entryPoint": null,
				"id": 89,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 1390,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 1405,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_dataslot_t_string_storage": {
				"entryPoint": 651,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 503,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"checked_mul_t_uint256": {
				"entryPoint": 1325,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_t_string_storage": {
				"entryPoint": 936,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"cleanup_t_uint256": {
				"entryPoint": 777,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"clear_storage_range_t_bytes1": {
				"entryPoint": 902,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"convert_t_uint256_to_t_uint256": {
				"entryPoint": 795,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
				"entryPoint": 1073,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"divide_by_32_ceil": {
				"entryPoint": 669,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 603,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": 1046,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"identity": {
				"entryPoint": 786,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"mask_bytes_dynamic": {
				"entryPoint": 1018,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 1280,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x22": {
				"entryPoint": 558,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x41": {
				"entryPoint": 513,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"prepare_store_t_uint256": {
				"entryPoint": 828,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"shift_left_dynamic": {
				"entryPoint": 684,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"shift_right_unsigned_dynamic": {
				"entryPoint": 1006,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"storage_set_to_zero_t_uint256": {
				"entryPoint": 878,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"update_byte_slice_dynamic32": {
				"entryPoint": 696,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"update_storage_value_t_uint256_to_t_uint256": {
				"entryPoint": 837,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"zero_value_for_split_t_uint256": {
				"entryPoint": 874,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:6185:1",
					"nodeType": "YulBlock",
					"src": "0:6185:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "66:40:1",
								"nodeType": "YulBlock",
								"src": "66:40:1",
								"statements": [
									{
										"nativeSrc": "77:22:1",
										"nodeType": "YulAssignment",
										"src": "77:22:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "93:5:1",
													"nodeType": "YulIdentifier",
													"src": "93:5:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "87:5:1",
												"nodeType": "YulIdentifier",
												"src": "87:5:1"
											},
											"nativeSrc": "87:12:1",
											"nodeType": "YulFunctionCall",
											"src": "87:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "77:6:1",
												"nodeType": "YulIdentifier",
												"src": "77:6:1"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nativeSrc": "7:99:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "49:5:1",
									"nodeType": "YulTypedName",
									"src": "49:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "59:6:1",
									"nodeType": "YulTypedName",
									"src": "59:6:1",
									"type": ""
								}
							],
							"src": "7:99:1"
						},
						{
							"body": {
								"nativeSrc": "140:152:1",
								"nodeType": "YulBlock",
								"src": "140:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "157:1:1",
													"nodeType": "YulLiteral",
													"src": "157:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "160:77:1",
													"nodeType": "YulLiteral",
													"src": "160:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "150:6:1",
												"nodeType": "YulIdentifier",
												"src": "150:6:1"
											},
											"nativeSrc": "150:88:1",
											"nodeType": "YulFunctionCall",
											"src": "150:88:1"
										},
										"nativeSrc": "150:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "150:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "254:1:1",
													"nodeType": "YulLiteral",
													"src": "254:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "257:4:1",
													"nodeType": "YulLiteral",
													"src": "257:4:1",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "247:6:1",
												"nodeType": "YulIdentifier",
												"src": "247:6:1"
											},
											"nativeSrc": "247:15:1",
											"nodeType": "YulFunctionCall",
											"src": "247:15:1"
										},
										"nativeSrc": "247:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "247:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "278:1:1",
													"nodeType": "YulLiteral",
													"src": "278:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "281:4:1",
													"nodeType": "YulLiteral",
													"src": "281:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "271:6:1",
												"nodeType": "YulIdentifier",
												"src": "271:6:1"
											},
											"nativeSrc": "271:15:1",
											"nodeType": "YulFunctionCall",
											"src": "271:15:1"
										},
										"nativeSrc": "271:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "271:15:1"
									}
								]
							},
							"name": "panic_error_0x41",
							"nativeSrc": "112:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "112:180:1"
						},
						{
							"body": {
								"nativeSrc": "326:152:1",
								"nodeType": "YulBlock",
								"src": "326:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "343:1:1",
													"nodeType": "YulLiteral",
													"src": "343:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "346:77:1",
													"nodeType": "YulLiteral",
													"src": "346:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "336:6:1",
												"nodeType": "YulIdentifier",
												"src": "336:6:1"
											},
											"nativeSrc": "336:88:1",
											"nodeType": "YulFunctionCall",
											"src": "336:88:1"
										},
										"nativeSrc": "336:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "336:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "440:1:1",
													"nodeType": "YulLiteral",
													"src": "440:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "443:4:1",
													"nodeType": "YulLiteral",
													"src": "443:4:1",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "433:6:1",
												"nodeType": "YulIdentifier",
												"src": "433:6:1"
											},
											"nativeSrc": "433:15:1",
											"nodeType": "YulFunctionCall",
											"src": "433:15:1"
										},
										"nativeSrc": "433:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "433:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "464:1:1",
													"nodeType": "YulLiteral",
													"src": "464:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "467:4:1",
													"nodeType": "YulLiteral",
													"src": "467:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "457:6:1",
												"nodeType": "YulIdentifier",
												"src": "457:6:1"
											},
											"nativeSrc": "457:15:1",
											"nodeType": "YulFunctionCall",
											"src": "457:15:1"
										},
										"nativeSrc": "457:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "457:15:1"
									}
								]
							},
							"name": "panic_error_0x22",
							"nativeSrc": "298:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "298:180:1"
						},
						{
							"body": {
								"nativeSrc": "535:269:1",
								"nodeType": "YulBlock",
								"src": "535:269:1",
								"statements": [
									{
										"nativeSrc": "545:22:1",
										"nodeType": "YulAssignment",
										"src": "545:22:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "559:4:1",
													"nodeType": "YulIdentifier",
													"src": "559:4:1"
												},
												{
													"kind": "number",
													"nativeSrc": "565:1:1",
													"nodeType": "YulLiteral",
													"src": "565:1:1",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "555:3:1",
												"nodeType": "YulIdentifier",
												"src": "555:3:1"
											},
											"nativeSrc": "555:12:1",
											"nodeType": "YulFunctionCall",
											"src": "555:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "545:6:1",
												"nodeType": "YulIdentifier",
												"src": "545:6:1"
											}
										]
									},
									{
										"nativeSrc": "576:38:1",
										"nodeType": "YulVariableDeclaration",
										"src": "576:38:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "606:4:1",
													"nodeType": "YulIdentifier",
													"src": "606:4:1"
												},
												{
													"kind": "number",
													"nativeSrc": "612:1:1",
													"nodeType": "YulLiteral",
													"src": "612:1:1",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "602:3:1",
												"nodeType": "YulIdentifier",
												"src": "602:3:1"
											},
											"nativeSrc": "602:12:1",
											"nodeType": "YulFunctionCall",
											"src": "602:12:1"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "580:18:1",
												"nodeType": "YulTypedName",
												"src": "580:18:1",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "653:51:1",
											"nodeType": "YulBlock",
											"src": "653:51:1",
											"statements": [
												{
													"nativeSrc": "667:27:1",
													"nodeType": "YulAssignment",
													"src": "667:27:1",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "681:6:1",
																"nodeType": "YulIdentifier",
																"src": "681:6:1"
															},
															{
																"kind": "number",
																"nativeSrc": "689:4:1",
																"nodeType": "YulLiteral",
																"src": "689:4:1",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "677:3:1",
															"nodeType": "YulIdentifier",
															"src": "677:3:1"
														},
														"nativeSrc": "677:17:1",
														"nodeType": "YulFunctionCall",
														"src": "677:17:1"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "667:6:1",
															"nodeType": "YulIdentifier",
															"src": "667:6:1"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "633:18:1",
													"nodeType": "YulIdentifier",
													"src": "633:18:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "626:6:1",
												"nodeType": "YulIdentifier",
												"src": "626:6:1"
											},
											"nativeSrc": "626:26:1",
											"nodeType": "YulFunctionCall",
											"src": "626:26:1"
										},
										"nativeSrc": "623:81:1",
										"nodeType": "YulIf",
										"src": "623:81:1"
									},
									{
										"body": {
											"nativeSrc": "756:42:1",
											"nodeType": "YulBlock",
											"src": "756:42:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nativeSrc": "770:16:1",
															"nodeType": "YulIdentifier",
															"src": "770:16:1"
														},
														"nativeSrc": "770:18:1",
														"nodeType": "YulFunctionCall",
														"src": "770:18:1"
													},
													"nativeSrc": "770:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "770:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "720:18:1",
													"nodeType": "YulIdentifier",
													"src": "720:18:1"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "743:6:1",
															"nodeType": "YulIdentifier",
															"src": "743:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "751:2:1",
															"nodeType": "YulLiteral",
															"src": "751:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "740:2:1",
														"nodeType": "YulIdentifier",
														"src": "740:2:1"
													},
													"nativeSrc": "740:14:1",
													"nodeType": "YulFunctionCall",
													"src": "740:14:1"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "717:2:1",
												"nodeType": "YulIdentifier",
												"src": "717:2:1"
											},
											"nativeSrc": "717:38:1",
											"nodeType": "YulFunctionCall",
											"src": "717:38:1"
										},
										"nativeSrc": "714:84:1",
										"nodeType": "YulIf",
										"src": "714:84:1"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "484:320:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "519:4:1",
									"nodeType": "YulTypedName",
									"src": "519:4:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "528:6:1",
									"nodeType": "YulTypedName",
									"src": "528:6:1",
									"type": ""
								}
							],
							"src": "484:320:1"
						},
						{
							"body": {
								"nativeSrc": "864:87:1",
								"nodeType": "YulBlock",
								"src": "864:87:1",
								"statements": [
									{
										"nativeSrc": "874:11:1",
										"nodeType": "YulAssignment",
										"src": "874:11:1",
										"value": {
											"name": "ptr",
											"nativeSrc": "882:3:1",
											"nodeType": "YulIdentifier",
											"src": "882:3:1"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "874:4:1",
												"nodeType": "YulIdentifier",
												"src": "874:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "902:1:1",
													"nodeType": "YulLiteral",
													"src": "902:1:1",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nativeSrc": "905:3:1",
													"nodeType": "YulIdentifier",
													"src": "905:3:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "895:6:1",
												"nodeType": "YulIdentifier",
												"src": "895:6:1"
											},
											"nativeSrc": "895:14:1",
											"nodeType": "YulFunctionCall",
											"src": "895:14:1"
										},
										"nativeSrc": "895:14:1",
										"nodeType": "YulExpressionStatement",
										"src": "895:14:1"
									},
									{
										"nativeSrc": "918:26:1",
										"nodeType": "YulAssignment",
										"src": "918:26:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "936:1:1",
													"nodeType": "YulLiteral",
													"src": "936:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "939:4:1",
													"nodeType": "YulLiteral",
													"src": "939:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nativeSrc": "926:9:1",
												"nodeType": "YulIdentifier",
												"src": "926:9:1"
											},
											"nativeSrc": "926:18:1",
											"nodeType": "YulFunctionCall",
											"src": "926:18:1"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "918:4:1",
												"nodeType": "YulIdentifier",
												"src": "918:4:1"
											}
										]
									}
								]
							},
							"name": "array_dataslot_t_string_storage",
							"nativeSrc": "810:141:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nativeSrc": "851:3:1",
									"nodeType": "YulTypedName",
									"src": "851:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nativeSrc": "859:4:1",
									"nodeType": "YulTypedName",
									"src": "859:4:1",
									"type": ""
								}
							],
							"src": "810:141:1"
						},
						{
							"body": {
								"nativeSrc": "1001:49:1",
								"nodeType": "YulBlock",
								"src": "1001:49:1",
								"statements": [
									{
										"nativeSrc": "1011:33:1",
										"nodeType": "YulAssignment",
										"src": "1011:33:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1029:5:1",
															"nodeType": "YulIdentifier",
															"src": "1029:5:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1036:2:1",
															"nodeType": "YulLiteral",
															"src": "1036:2:1",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1025:3:1",
														"nodeType": "YulIdentifier",
														"src": "1025:3:1"
													},
													"nativeSrc": "1025:14:1",
													"nodeType": "YulFunctionCall",
													"src": "1025:14:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1041:2:1",
													"nodeType": "YulLiteral",
													"src": "1041:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "1021:3:1",
												"nodeType": "YulIdentifier",
												"src": "1021:3:1"
											},
											"nativeSrc": "1021:23:1",
											"nodeType": "YulFunctionCall",
											"src": "1021:23:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "1011:6:1",
												"nodeType": "YulIdentifier",
												"src": "1011:6:1"
											}
										]
									}
								]
							},
							"name": "divide_by_32_ceil",
							"nativeSrc": "957:93:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "984:5:1",
									"nodeType": "YulTypedName",
									"src": "984:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "994:6:1",
									"nodeType": "YulTypedName",
									"src": "994:6:1",
									"type": ""
								}
							],
							"src": "957:93:1"
						},
						{
							"body": {
								"nativeSrc": "1109:54:1",
								"nodeType": "YulBlock",
								"src": "1109:54:1",
								"statements": [
									{
										"nativeSrc": "1119:37:1",
										"nodeType": "YulAssignment",
										"src": "1119:37:1",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nativeSrc": "1144:4:1",
													"nodeType": "YulIdentifier",
													"src": "1144:4:1"
												},
												{
													"name": "value",
													"nativeSrc": "1150:5:1",
													"nodeType": "YulIdentifier",
													"src": "1150:5:1"
												}
											],
											"functionName": {
												"name": "shl",
												"nativeSrc": "1140:3:1",
												"nodeType": "YulIdentifier",
												"src": "1140:3:1"
											},
											"nativeSrc": "1140:16:1",
											"nodeType": "YulFunctionCall",
											"src": "1140:16:1"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "1119:8:1",
												"nodeType": "YulIdentifier",
												"src": "1119:8:1"
											}
										]
									}
								]
							},
							"name": "shift_left_dynamic",
							"nativeSrc": "1056:107:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nativeSrc": "1084:4:1",
									"nodeType": "YulTypedName",
									"src": "1084:4:1",
									"type": ""
								},
								{
									"name": "value",
									"nativeSrc": "1090:5:1",
									"nodeType": "YulTypedName",
									"src": "1090:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "1100:8:1",
									"nodeType": "YulTypedName",
									"src": "1100:8:1",
									"type": ""
								}
							],
							"src": "1056:107:1"
						},
						{
							"body": {
								"nativeSrc": "1245:317:1",
								"nodeType": "YulBlock",
								"src": "1245:317:1",
								"statements": [
									{
										"nativeSrc": "1255:35:1",
										"nodeType": "YulVariableDeclaration",
										"src": "1255:35:1",
										"value": {
											"arguments": [
												{
													"name": "shiftBytes",
													"nativeSrc": "1276:10:1",
													"nodeType": "YulIdentifier",
													"src": "1276:10:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1288:1:1",
													"nodeType": "YulLiteral",
													"src": "1288:1:1",
													"type": "",
													"value": "8"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "1272:3:1",
												"nodeType": "YulIdentifier",
												"src": "1272:3:1"
											},
											"nativeSrc": "1272:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1272:18:1"
										},
										"variables": [
											{
												"name": "shiftBits",
												"nativeSrc": "1259:9:1",
												"nodeType": "YulTypedName",
												"src": "1259:9:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1299:109:1",
										"nodeType": "YulVariableDeclaration",
										"src": "1299:109:1",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nativeSrc": "1330:9:1",
													"nodeType": "YulIdentifier",
													"src": "1330:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1341:66:1",
													"nodeType": "YulLiteral",
													"src": "1341:66:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nativeSrc": "1311:18:1",
												"nodeType": "YulIdentifier",
												"src": "1311:18:1"
											},
											"nativeSrc": "1311:97:1",
											"nodeType": "YulFunctionCall",
											"src": "1311:97:1"
										},
										"variables": [
											{
												"name": "mask",
												"nativeSrc": "1303:4:1",
												"nodeType": "YulTypedName",
												"src": "1303:4:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1417:51:1",
										"nodeType": "YulAssignment",
										"src": "1417:51:1",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nativeSrc": "1448:9:1",
													"nodeType": "YulIdentifier",
													"src": "1448:9:1"
												},
												{
													"name": "toInsert",
													"nativeSrc": "1459:8:1",
													"nodeType": "YulIdentifier",
													"src": "1459:8:1"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nativeSrc": "1429:18:1",
												"nodeType": "YulIdentifier",
												"src": "1429:18:1"
											},
											"nativeSrc": "1429:39:1",
											"nodeType": "YulFunctionCall",
											"src": "1429:39:1"
										},
										"variableNames": [
											{
												"name": "toInsert",
												"nativeSrc": "1417:8:1",
												"nodeType": "YulIdentifier",
												"src": "1417:8:1"
											}
										]
									},
									{
										"nativeSrc": "1477:30:1",
										"nodeType": "YulAssignment",
										"src": "1477:30:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1490:5:1",
													"nodeType": "YulIdentifier",
													"src": "1490:5:1"
												},
												{
													"arguments": [
														{
															"name": "mask",
															"nativeSrc": "1501:4:1",
															"nodeType": "YulIdentifier",
															"src": "1501:4:1"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "1497:3:1",
														"nodeType": "YulIdentifier",
														"src": "1497:3:1"
													},
													"nativeSrc": "1497:9:1",
													"nodeType": "YulFunctionCall",
													"src": "1497:9:1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "1486:3:1",
												"nodeType": "YulIdentifier",
												"src": "1486:3:1"
											},
											"nativeSrc": "1486:21:1",
											"nodeType": "YulFunctionCall",
											"src": "1486:21:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1477:5:1",
												"nodeType": "YulIdentifier",
												"src": "1477:5:1"
											}
										]
									},
									{
										"nativeSrc": "1516:40:1",
										"nodeType": "YulAssignment",
										"src": "1516:40:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1529:5:1",
													"nodeType": "YulIdentifier",
													"src": "1529:5:1"
												},
												{
													"arguments": [
														{
															"name": "toInsert",
															"nativeSrc": "1540:8:1",
															"nodeType": "YulIdentifier",
															"src": "1540:8:1"
														},
														{
															"name": "mask",
															"nativeSrc": "1550:4:1",
															"nodeType": "YulIdentifier",
															"src": "1550:4:1"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "1536:3:1",
														"nodeType": "YulIdentifier",
														"src": "1536:3:1"
													},
													"nativeSrc": "1536:19:1",
													"nodeType": "YulFunctionCall",
													"src": "1536:19:1"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "1526:2:1",
												"nodeType": "YulIdentifier",
												"src": "1526:2:1"
											},
											"nativeSrc": "1526:30:1",
											"nodeType": "YulFunctionCall",
											"src": "1526:30:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "1516:6:1",
												"nodeType": "YulIdentifier",
												"src": "1516:6:1"
											}
										]
									}
								]
							},
							"name": "update_byte_slice_dynamic32",
							"nativeSrc": "1169:393:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1206:5:1",
									"nodeType": "YulTypedName",
									"src": "1206:5:1",
									"type": ""
								},
								{
									"name": "shiftBytes",
									"nativeSrc": "1213:10:1",
									"nodeType": "YulTypedName",
									"src": "1213:10:1",
									"type": ""
								},
								{
									"name": "toInsert",
									"nativeSrc": "1225:8:1",
									"nodeType": "YulTypedName",
									"src": "1225:8:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "1238:6:1",
									"nodeType": "YulTypedName",
									"src": "1238:6:1",
									"type": ""
								}
							],
							"src": "1169:393:1"
						},
						{
							"body": {
								"nativeSrc": "1613:32:1",
								"nodeType": "YulBlock",
								"src": "1613:32:1",
								"statements": [
									{
										"nativeSrc": "1623:16:1",
										"nodeType": "YulAssignment",
										"src": "1623:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "1634:5:1",
											"nodeType": "YulIdentifier",
											"src": "1634:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1623:7:1",
												"nodeType": "YulIdentifier",
												"src": "1623:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "1568:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1595:5:1",
									"nodeType": "YulTypedName",
									"src": "1595:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1605:7:1",
									"nodeType": "YulTypedName",
									"src": "1605:7:1",
									"type": ""
								}
							],
							"src": "1568:77:1"
						},
						{
							"body": {
								"nativeSrc": "1683:28:1",
								"nodeType": "YulBlock",
								"src": "1683:28:1",
								"statements": [
									{
										"nativeSrc": "1693:12:1",
										"nodeType": "YulAssignment",
										"src": "1693:12:1",
										"value": {
											"name": "value",
											"nativeSrc": "1700:5:1",
											"nodeType": "YulIdentifier",
											"src": "1700:5:1"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "1693:3:1",
												"nodeType": "YulIdentifier",
												"src": "1693:3:1"
											}
										]
									}
								]
							},
							"name": "identity",
							"nativeSrc": "1651:60:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1669:5:1",
									"nodeType": "YulTypedName",
									"src": "1669:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "1679:3:1",
									"nodeType": "YulTypedName",
									"src": "1679:3:1",
									"type": ""
								}
							],
							"src": "1651:60:1"
						},
						{
							"body": {
								"nativeSrc": "1777:82:1",
								"nodeType": "YulBlock",
								"src": "1777:82:1",
								"statements": [
									{
										"nativeSrc": "1787:66:1",
										"nodeType": "YulAssignment",
										"src": "1787:66:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1845:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1845:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "1827:17:1",
																"nodeType": "YulIdentifier",
																"src": "1827:17:1"
															},
															"nativeSrc": "1827:24:1",
															"nodeType": "YulFunctionCall",
															"src": "1827:24:1"
														}
													],
													"functionName": {
														"name": "identity",
														"nativeSrc": "1818:8:1",
														"nodeType": "YulIdentifier",
														"src": "1818:8:1"
													},
													"nativeSrc": "1818:34:1",
													"nodeType": "YulFunctionCall",
													"src": "1818:34:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "1800:17:1",
												"nodeType": "YulIdentifier",
												"src": "1800:17:1"
											},
											"nativeSrc": "1800:53:1",
											"nodeType": "YulFunctionCall",
											"src": "1800:53:1"
										},
										"variableNames": [
											{
												"name": "converted",
												"nativeSrc": "1787:9:1",
												"nodeType": "YulIdentifier",
												"src": "1787:9:1"
											}
										]
									}
								]
							},
							"name": "convert_t_uint256_to_t_uint256",
							"nativeSrc": "1717:142:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1757:5:1",
									"nodeType": "YulTypedName",
									"src": "1757:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "converted",
									"nativeSrc": "1767:9:1",
									"nodeType": "YulTypedName",
									"src": "1767:9:1",
									"type": ""
								}
							],
							"src": "1717:142:1"
						},
						{
							"body": {
								"nativeSrc": "1912:28:1",
								"nodeType": "YulBlock",
								"src": "1912:28:1",
								"statements": [
									{
										"nativeSrc": "1922:12:1",
										"nodeType": "YulAssignment",
										"src": "1922:12:1",
										"value": {
											"name": "value",
											"nativeSrc": "1929:5:1",
											"nodeType": "YulIdentifier",
											"src": "1929:5:1"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "1922:3:1",
												"nodeType": "YulIdentifier",
												"src": "1922:3:1"
											}
										]
									}
								]
							},
							"name": "prepare_store_t_uint256",
							"nativeSrc": "1865:75:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1898:5:1",
									"nodeType": "YulTypedName",
									"src": "1898:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "1908:3:1",
									"nodeType": "YulTypedName",
									"src": "1908:3:1",
									"type": ""
								}
							],
							"src": "1865:75:1"
						},
						{
							"body": {
								"nativeSrc": "2022:193:1",
								"nodeType": "YulBlock",
								"src": "2022:193:1",
								"statements": [
									{
										"nativeSrc": "2032:63:1",
										"nodeType": "YulVariableDeclaration",
										"src": "2032:63:1",
										"value": {
											"arguments": [
												{
													"name": "value_0",
													"nativeSrc": "2087:7:1",
													"nodeType": "YulIdentifier",
													"src": "2087:7:1"
												}
											],
											"functionName": {
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2056:30:1",
												"nodeType": "YulIdentifier",
												"src": "2056:30:1"
											},
											"nativeSrc": "2056:39:1",
											"nodeType": "YulFunctionCall",
											"src": "2056:39:1"
										},
										"variables": [
											{
												"name": "convertedValue_0",
												"nativeSrc": "2036:16:1",
												"nodeType": "YulTypedName",
												"src": "2036:16:1",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "2111:4:1",
													"nodeType": "YulIdentifier",
													"src": "2111:4:1"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nativeSrc": "2151:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2151:4:1"
																}
															],
															"functionName": {
																"name": "sload",
																"nativeSrc": "2145:5:1",
																"nodeType": "YulIdentifier",
																"src": "2145:5:1"
															},
															"nativeSrc": "2145:11:1",
															"nodeType": "YulFunctionCall",
															"src": "2145:11:1"
														},
														{
															"name": "offset",
															"nativeSrc": "2158:6:1",
															"nodeType": "YulIdentifier",
															"src": "2158:6:1"
														},
														{
															"arguments": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2190:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "2190:16:1"
																}
															],
															"functionName": {
																"name": "prepare_store_t_uint256",
																"nativeSrc": "2166:23:1",
																"nodeType": "YulIdentifier",
																"src": "2166:23:1"
															},
															"nativeSrc": "2166:41:1",
															"nodeType": "YulFunctionCall",
															"src": "2166:41:1"
														}
													],
													"functionName": {
														"name": "update_byte_slice_dynamic32",
														"nativeSrc": "2117:27:1",
														"nodeType": "YulIdentifier",
														"src": "2117:27:1"
													},
													"nativeSrc": "2117:91:1",
													"nodeType": "YulFunctionCall",
													"src": "2117:91:1"
												}
											],
											"functionName": {
												"name": "sstore",
												"nativeSrc": "2104:6:1",
												"nodeType": "YulIdentifier",
												"src": "2104:6:1"
											},
											"nativeSrc": "2104:105:1",
											"nodeType": "YulFunctionCall",
											"src": "2104:105:1"
										},
										"nativeSrc": "2104:105:1",
										"nodeType": "YulExpressionStatement",
										"src": "2104:105:1"
									}
								]
							},
							"name": "update_storage_value_t_uint256_to_t_uint256",
							"nativeSrc": "1946:269:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "1999:4:1",
									"nodeType": "YulTypedName",
									"src": "1999:4:1",
									"type": ""
								},
								{
									"name": "offset",
									"nativeSrc": "2005:6:1",
									"nodeType": "YulTypedName",
									"src": "2005:6:1",
									"type": ""
								},
								{
									"name": "value_0",
									"nativeSrc": "2013:7:1",
									"nodeType": "YulTypedName",
									"src": "2013:7:1",
									"type": ""
								}
							],
							"src": "1946:269:1"
						},
						{
							"body": {
								"nativeSrc": "2270:24:1",
								"nodeType": "YulBlock",
								"src": "2270:24:1",
								"statements": [
									{
										"nativeSrc": "2280:8:1",
										"nodeType": "YulAssignment",
										"src": "2280:8:1",
										"value": {
											"kind": "number",
											"nativeSrc": "2287:1:1",
											"nodeType": "YulLiteral",
											"src": "2287:1:1",
											"type": "",
											"value": "0"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "2280:3:1",
												"nodeType": "YulIdentifier",
												"src": "2280:3:1"
											}
										]
									}
								]
							},
							"name": "zero_value_for_split_t_uint256",
							"nativeSrc": "2221:73:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "2266:3:1",
									"nodeType": "YulTypedName",
									"src": "2266:3:1",
									"type": ""
								}
							],
							"src": "2221:73:1"
						},
						{
							"body": {
								"nativeSrc": "2353:136:1",
								"nodeType": "YulBlock",
								"src": "2353:136:1",
								"statements": [
									{
										"nativeSrc": "2363:46:1",
										"nodeType": "YulVariableDeclaration",
										"src": "2363:46:1",
										"value": {
											"arguments": [],
											"functionName": {
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2377:30:1",
												"nodeType": "YulIdentifier",
												"src": "2377:30:1"
											},
											"nativeSrc": "2377:32:1",
											"nodeType": "YulFunctionCall",
											"src": "2377:32:1"
										},
										"variables": [
											{
												"name": "zero_0",
												"nativeSrc": "2367:6:1",
												"nodeType": "YulTypedName",
												"src": "2367:6:1",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "2462:4:1",
													"nodeType": "YulIdentifier",
													"src": "2462:4:1"
												},
												{
													"name": "offset",
													"nativeSrc": "2468:6:1",
													"nodeType": "YulIdentifier",
													"src": "2468:6:1"
												},
												{
													"name": "zero_0",
													"nativeSrc": "2476:6:1",
													"nodeType": "YulIdentifier",
													"src": "2476:6:1"
												}
											],
											"functionName": {
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2418:43:1",
												"nodeType": "YulIdentifier",
												"src": "2418:43:1"
											},
											"nativeSrc": "2418:65:1",
											"nodeType": "YulFunctionCall",
											"src": "2418:65:1"
										},
										"nativeSrc": "2418:65:1",
										"nodeType": "YulExpressionStatement",
										"src": "2418:65:1"
									}
								]
							},
							"name": "storage_set_to_zero_t_uint256",
							"nativeSrc": "2300:189:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "2339:4:1",
									"nodeType": "YulTypedName",
									"src": "2339:4:1",
									"type": ""
								},
								{
									"name": "offset",
									"nativeSrc": "2345:6:1",
									"nodeType": "YulTypedName",
									"src": "2345:6:1",
									"type": ""
								}
							],
							"src": "2300:189:1"
						},
						{
							"body": {
								"nativeSrc": "2545:136:1",
								"nodeType": "YulBlock",
								"src": "2545:136:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2612:63:1",
											"nodeType": "YulBlock",
											"src": "2612:63:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "2656:5:1",
																"nodeType": "YulIdentifier",
																"src": "2656:5:1"
															},
															{
																"kind": "number",
																"nativeSrc": "2663:1:1",
																"nodeType": "YulLiteral",
																"src": "2663:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "storage_set_to_zero_t_uint256",
															"nativeSrc": "2626:29:1",
															"nodeType": "YulIdentifier",
															"src": "2626:29:1"
														},
														"nativeSrc": "2626:39:1",
														"nodeType": "YulFunctionCall",
														"src": "2626:39:1"
													},
													"nativeSrc": "2626:39:1",
													"nodeType": "YulExpressionStatement",
													"src": "2626:39:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "start",
													"nativeSrc": "2565:5:1",
													"nodeType": "YulIdentifier",
													"src": "2565:5:1"
												},
												{
													"name": "end",
													"nativeSrc": "2572:3:1",
													"nodeType": "YulIdentifier",
													"src": "2572:3:1"
												}
											],
											"functionName": {
												"name": "lt",
												"nativeSrc": "2562:2:1",
												"nodeType": "YulIdentifier",
												"src": "2562:2:1"
											},
											"nativeSrc": "2562:14:1",
											"nodeType": "YulFunctionCall",
											"src": "2562:14:1"
										},
										"nativeSrc": "2555:120:1",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "2577:26:1",
											"nodeType": "YulBlock",
											"src": "2577:26:1",
											"statements": [
												{
													"nativeSrc": "2579:22:1",
													"nodeType": "YulAssignment",
													"src": "2579:22:1",
													"value": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "2592:5:1",
																"nodeType": "YulIdentifier",
																"src": "2592:5:1"
															},
															{
																"kind": "number",
																"nativeSrc": "2599:1:1",
																"nodeType": "YulLiteral",
																"src": "2599:1:1",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "2588:3:1",
															"nodeType": "YulIdentifier",
															"src": "2588:3:1"
														},
														"nativeSrc": "2588:13:1",
														"nodeType": "YulFunctionCall",
														"src": "2588:13:1"
													},
													"variableNames": [
														{
															"name": "start",
															"nativeSrc": "2579:5:1",
															"nodeType": "YulIdentifier",
															"src": "2579:5:1"
														}
													]
												}
											]
										},
										"pre": {
											"nativeSrc": "2559:2:1",
											"nodeType": "YulBlock",
											"src": "2559:2:1",
											"statements": []
										},
										"src": "2555:120:1"
									}
								]
							},
							"name": "clear_storage_range_t_bytes1",
							"nativeSrc": "2495:186:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "start",
									"nativeSrc": "2533:5:1",
									"nodeType": "YulTypedName",
									"src": "2533:5:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2540:3:1",
									"nodeType": "YulTypedName",
									"src": "2540:3:1",
									"type": ""
								}
							],
							"src": "2495:186:1"
						},
						{
							"body": {
								"nativeSrc": "2766:464:1",
								"nodeType": "YulBlock",
								"src": "2766:464:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2792:431:1",
											"nodeType": "YulBlock",
											"src": "2792:431:1",
											"statements": [
												{
													"nativeSrc": "2806:54:1",
													"nodeType": "YulVariableDeclaration",
													"src": "2806:54:1",
													"value": {
														"arguments": [
															{
																"name": "array",
																"nativeSrc": "2854:5:1",
																"nodeType": "YulIdentifier",
																"src": "2854:5:1"
															}
														],
														"functionName": {
															"name": "array_dataslot_t_string_storage",
															"nativeSrc": "2822:31:1",
															"nodeType": "YulIdentifier",
															"src": "2822:31:1"
														},
														"nativeSrc": "2822:38:1",
														"nodeType": "YulFunctionCall",
														"src": "2822:38:1"
													},
													"variables": [
														{
															"name": "dataArea",
															"nativeSrc": "2810:8:1",
															"nodeType": "YulTypedName",
															"src": "2810:8:1",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "2873:63:1",
													"nodeType": "YulVariableDeclaration",
													"src": "2873:63:1",
													"value": {
														"arguments": [
															{
																"name": "dataArea",
																"nativeSrc": "2896:8:1",
																"nodeType": "YulIdentifier",
																"src": "2896:8:1"
															},
															{
																"arguments": [
																	{
																		"name": "startIndex",
																		"nativeSrc": "2924:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2924:10:1"
																	}
																],
																"functionName": {
																	"name": "divide_by_32_ceil",
																	"nativeSrc": "2906:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2906:17:1"
																},
																"nativeSrc": "2906:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2906:29:1"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "2892:3:1",
															"nodeType": "YulIdentifier",
															"src": "2892:3:1"
														},
														"nativeSrc": "2892:44:1",
														"nodeType": "YulFunctionCall",
														"src": "2892:44:1"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nativeSrc": "2877:11:1",
															"nodeType": "YulTypedName",
															"src": "2877:11:1",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "3093:27:1",
														"nodeType": "YulBlock",
														"src": "3093:27:1",
														"statements": [
															{
																"nativeSrc": "3095:23:1",
																"nodeType": "YulAssignment",
																"src": "3095:23:1",
																"value": {
																	"name": "dataArea",
																	"nativeSrc": "3110:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3110:8:1"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nativeSrc": "3095:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "3095:11:1"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nativeSrc": "3077:10:1",
																"nodeType": "YulIdentifier",
																"src": "3077:10:1"
															},
															{
																"kind": "number",
																"nativeSrc": "3089:2:1",
																"nodeType": "YulLiteral",
																"src": "3089:2:1",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "3074:2:1",
															"nodeType": "YulIdentifier",
															"src": "3074:2:1"
														},
														"nativeSrc": "3074:18:1",
														"nodeType": "YulFunctionCall",
														"src": "3074:18:1"
													},
													"nativeSrc": "3071:49:1",
													"nodeType": "YulIf",
													"src": "3071:49:1"
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "deleteStart",
																"nativeSrc": "3162:11:1",
																"nodeType": "YulIdentifier",
																"src": "3162:11:1"
															},
															{
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "3179:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3179:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nativeSrc": "3207:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3207:3:1"
																			}
																		],
																		"functionName": {
																			"name": "divide_by_32_ceil",
																			"nativeSrc": "3189:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3189:17:1"
																		},
																		"nativeSrc": "3189:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:22:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3175:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3175:3:1"
																},
																"nativeSrc": "3175:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3175:37:1"
															}
														],
														"functionName": {
															"name": "clear_storage_range_t_bytes1",
															"nativeSrc": "3133:28:1",
															"nodeType": "YulIdentifier",
															"src": "3133:28:1"
														},
														"nativeSrc": "3133:80:1",
														"nodeType": "YulFunctionCall",
														"src": "3133:80:1"
													},
													"nativeSrc": "3133:80:1",
													"nodeType": "YulExpressionStatement",
													"src": "3133:80:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "2783:3:1",
													"nodeType": "YulIdentifier",
													"src": "2783:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2788:2:1",
													"nodeType": "YulLiteral",
													"src": "2788:2:1",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2780:2:1",
												"nodeType": "YulIdentifier",
												"src": "2780:2:1"
											},
											"nativeSrc": "2780:11:1",
											"nodeType": "YulFunctionCall",
											"src": "2780:11:1"
										},
										"nativeSrc": "2777:446:1",
										"nodeType": "YulIf",
										"src": "2777:446:1"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_t_string_storage",
							"nativeSrc": "2687:543:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nativeSrc": "2742:5:1",
									"nodeType": "YulTypedName",
									"src": "2742:5:1",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "2749:3:1",
									"nodeType": "YulTypedName",
									"src": "2749:3:1",
									"type": ""
								},
								{
									"name": "startIndex",
									"nativeSrc": "2754:10:1",
									"nodeType": "YulTypedName",
									"src": "2754:10:1",
									"type": ""
								}
							],
							"src": "2687:543:1"
						},
						{
							"body": {
								"nativeSrc": "3299:54:1",
								"nodeType": "YulBlock",
								"src": "3299:54:1",
								"statements": [
									{
										"nativeSrc": "3309:37:1",
										"nodeType": "YulAssignment",
										"src": "3309:37:1",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nativeSrc": "3334:4:1",
													"nodeType": "YulIdentifier",
													"src": "3334:4:1"
												},
												{
													"name": "value",
													"nativeSrc": "3340:5:1",
													"nodeType": "YulIdentifier",
													"src": "3340:5:1"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "3330:3:1",
												"nodeType": "YulIdentifier",
												"src": "3330:3:1"
											},
											"nativeSrc": "3330:16:1",
											"nodeType": "YulFunctionCall",
											"src": "3330:16:1"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "3309:8:1",
												"nodeType": "YulIdentifier",
												"src": "3309:8:1"
											}
										]
									}
								]
							},
							"name": "shift_right_unsigned_dynamic",
							"nativeSrc": "3236:117:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nativeSrc": "3274:4:1",
									"nodeType": "YulTypedName",
									"src": "3274:4:1",
									"type": ""
								},
								{
									"name": "value",
									"nativeSrc": "3280:5:1",
									"nodeType": "YulTypedName",
									"src": "3280:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "3290:8:1",
									"nodeType": "YulTypedName",
									"src": "3290:8:1",
									"type": ""
								}
							],
							"src": "3236:117:1"
						},
						{
							"body": {
								"nativeSrc": "3410:118:1",
								"nodeType": "YulBlock",
								"src": "3410:118:1",
								"statements": [
									{
										"nativeSrc": "3420:68:1",
										"nodeType": "YulVariableDeclaration",
										"src": "3420:68:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "3469:1:1",
																	"nodeType": "YulLiteral",
																	"src": "3469:1:1",
																	"type": "",
																	"value": "8"
																},
																{
																	"name": "bytes",
																	"nativeSrc": "3472:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:1"
																}
															],
															"functionName": {
																"name": "mul",
																"nativeSrc": "3465:3:1",
																"nodeType": "YulIdentifier",
																"src": "3465:3:1"
															},
															"nativeSrc": "3465:13:1",
															"nodeType": "YulFunctionCall",
															"src": "3465:13:1"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "3484:1:1",
																	"nodeType": "YulLiteral",
																	"src": "3484:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "not",
																"nativeSrc": "3480:3:1",
																"nodeType": "YulIdentifier",
																"src": "3480:3:1"
															},
															"nativeSrc": "3480:6:1",
															"nodeType": "YulFunctionCall",
															"src": "3480:6:1"
														}
													],
													"functionName": {
														"name": "shift_right_unsigned_dynamic",
														"nativeSrc": "3436:28:1",
														"nodeType": "YulIdentifier",
														"src": "3436:28:1"
													},
													"nativeSrc": "3436:51:1",
													"nodeType": "YulFunctionCall",
													"src": "3436:51:1"
												}
											],
											"functionName": {
												"name": "not",
												"nativeSrc": "3432:3:1",
												"nodeType": "YulIdentifier",
												"src": "3432:3:1"
											},
											"nativeSrc": "3432:56:1",
											"nodeType": "YulFunctionCall",
											"src": "3432:56:1"
										},
										"variables": [
											{
												"name": "mask",
												"nativeSrc": "3424:4:1",
												"nodeType": "YulTypedName",
												"src": "3424:4:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "3497:25:1",
										"nodeType": "YulAssignment",
										"src": "3497:25:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3511:4:1",
													"nodeType": "YulIdentifier",
													"src": "3511:4:1"
												},
												{
													"name": "mask",
													"nativeSrc": "3517:4:1",
													"nodeType": "YulIdentifier",
													"src": "3517:4:1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "3507:3:1",
												"nodeType": "YulIdentifier",
												"src": "3507:3:1"
											},
											"nativeSrc": "3507:15:1",
											"nodeType": "YulFunctionCall",
											"src": "3507:15:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "3497:6:1",
												"nodeType": "YulIdentifier",
												"src": "3497:6:1"
											}
										]
									}
								]
							},
							"name": "mask_bytes_dynamic",
							"nativeSrc": "3359:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "3387:4:1",
									"nodeType": "YulTypedName",
									"src": "3387:4:1",
									"type": ""
								},
								{
									"name": "bytes",
									"nativeSrc": "3393:5:1",
									"nodeType": "YulTypedName",
									"src": "3393:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "3403:6:1",
									"nodeType": "YulTypedName",
									"src": "3403:6:1",
									"type": ""
								}
							],
							"src": "3359:169:1"
						},
						{
							"body": {
								"nativeSrc": "3614:214:1",
								"nodeType": "YulBlock",
								"src": "3614:214:1",
								"statements": [
									{
										"nativeSrc": "3747:37:1",
										"nodeType": "YulAssignment",
										"src": "3747:37:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3774:4:1",
													"nodeType": "YulIdentifier",
													"src": "3774:4:1"
												},
												{
													"name": "len",
													"nativeSrc": "3780:3:1",
													"nodeType": "YulIdentifier",
													"src": "3780:3:1"
												}
											],
											"functionName": {
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3755:18:1",
												"nodeType": "YulIdentifier",
												"src": "3755:18:1"
											},
											"nativeSrc": "3755:29:1",
											"nodeType": "YulFunctionCall",
											"src": "3755:29:1"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "3747:4:1",
												"nodeType": "YulIdentifier",
												"src": "3747:4:1"
											}
										]
									},
									{
										"nativeSrc": "3793:29:1",
										"nodeType": "YulAssignment",
										"src": "3793:29:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3804:4:1",
													"nodeType": "YulIdentifier",
													"src": "3804:4:1"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "3814:1:1",
															"nodeType": "YulLiteral",
															"src": "3814:1:1",
															"type": "",
															"value": "2"
														},
														{
															"name": "len",
															"nativeSrc": "3817:3:1",
															"nodeType": "YulIdentifier",
															"src": "3817:3:1"
														}
													],
													"functionName": {
														"name": "mul",
														"nativeSrc": "3810:3:1",
														"nodeType": "YulIdentifier",
														"src": "3810:3:1"
													},
													"nativeSrc": "3810:11:1",
													"nodeType": "YulFunctionCall",
													"src": "3810:11:1"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "3801:2:1",
												"nodeType": "YulIdentifier",
												"src": "3801:2:1"
											},
											"nativeSrc": "3801:21:1",
											"nodeType": "YulFunctionCall",
											"src": "3801:21:1"
										},
										"variableNames": [
											{
												"name": "used",
												"nativeSrc": "3793:4:1",
												"nodeType": "YulIdentifier",
												"src": "3793:4:1"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nativeSrc": "3533:295:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "3595:4:1",
									"nodeType": "YulTypedName",
									"src": "3595:4:1",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "3601:3:1",
									"nodeType": "YulTypedName",
									"src": "3601:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nativeSrc": "3609:4:1",
									"nodeType": "YulTypedName",
									"src": "3609:4:1",
									"type": ""
								}
							],
							"src": "3533:295:1"
						},
						{
							"body": {
								"nativeSrc": "3925:1303:1",
								"nodeType": "YulBlock",
								"src": "3925:1303:1",
								"statements": [
									{
										"nativeSrc": "3936:51:1",
										"nodeType": "YulVariableDeclaration",
										"src": "3936:51:1",
										"value": {
											"arguments": [
												{
													"name": "src",
													"nativeSrc": "3983:3:1",
													"nodeType": "YulIdentifier",
													"src": "3983:3:1"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3950:32:1",
												"nodeType": "YulIdentifier",
												"src": "3950:32:1"
											},
											"nativeSrc": "3950:37:1",
											"nodeType": "YulFunctionCall",
											"src": "3950:37:1"
										},
										"variables": [
											{
												"name": "newLen",
												"nativeSrc": "3940:6:1",
												"nodeType": "YulTypedName",
												"src": "3940:6:1",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "4072:22:1",
											"nodeType": "YulBlock",
											"src": "4072:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "4074:16:1",
															"nodeType": "YulIdentifier",
															"src": "4074:16:1"
														},
														"nativeSrc": "4074:18:1",
														"nodeType": "YulFunctionCall",
														"src": "4074:18:1"
													},
													"nativeSrc": "4074:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "4074:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "4044:6:1",
													"nodeType": "YulIdentifier",
													"src": "4044:6:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4052:18:1",
													"nodeType": "YulLiteral",
													"src": "4052:18:1",
													"type": "",
													"value": "0xffffffffffffffff"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "4041:2:1",
												"nodeType": "YulIdentifier",
												"src": "4041:2:1"
											},
											"nativeSrc": "4041:30:1",
											"nodeType": "YulFunctionCall",
											"src": "4041:30:1"
										},
										"nativeSrc": "4038:56:1",
										"nodeType": "YulIf",
										"src": "4038:56:1"
									},
									{
										"nativeSrc": "4104:52:1",
										"nodeType": "YulVariableDeclaration",
										"src": "4104:52:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "slot",
															"nativeSrc": "4150:4:1",
															"nodeType": "YulIdentifier",
															"src": "4150:4:1"
														}
													],
													"functionName": {
														"name": "sload",
														"nativeSrc": "4144:5:1",
														"nodeType": "YulIdentifier",
														"src": "4144:5:1"
													},
													"nativeSrc": "4144:11:1",
													"nodeType": "YulFunctionCall",
													"src": "4144:11:1"
												}
											],
											"functionName": {
												"name": "extract_byte_array_length",
												"nativeSrc": "4118:25:1",
												"nodeType": "YulIdentifier",
												"src": "4118:25:1"
											},
											"nativeSrc": "4118:38:1",
											"nodeType": "YulFunctionCall",
											"src": "4118:38:1"
										},
										"variables": [
											{
												"name": "oldLen",
												"nativeSrc": "4108:6:1",
												"nodeType": "YulTypedName",
												"src": "4108:6:1",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "4249:4:1",
													"nodeType": "YulIdentifier",
													"src": "4249:4:1"
												},
												{
													"name": "oldLen",
													"nativeSrc": "4255:6:1",
													"nodeType": "YulIdentifier",
													"src": "4255:6:1"
												},
												{
													"name": "newLen",
													"nativeSrc": "4263:6:1",
													"nodeType": "YulIdentifier",
													"src": "4263:6:1"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4203:45:1",
												"nodeType": "YulIdentifier",
												"src": "4203:45:1"
											},
											"nativeSrc": "4203:67:1",
											"nodeType": "YulFunctionCall",
											"src": "4203:67:1"
										},
										"nativeSrc": "4203:67:1",
										"nodeType": "YulExpressionStatement",
										"src": "4203:67:1"
									},
									{
										"nativeSrc": "4280:18:1",
										"nodeType": "YulVariableDeclaration",
										"src": "4280:18:1",
										"value": {
											"kind": "number",
											"nativeSrc": "4297:1:1",
											"nodeType": "YulLiteral",
											"src": "4297:1:1",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nativeSrc": "4284:9:1",
												"nodeType": "YulTypedName",
												"src": "4284:9:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "4308:17:1",
										"nodeType": "YulAssignment",
										"src": "4308:17:1",
										"value": {
											"kind": "number",
											"nativeSrc": "4321:4:1",
											"nodeType": "YulLiteral",
											"src": "4321:4:1",
											"type": "",
											"value": "0x20"
										},
										"variableNames": [
											{
												"name": "srcOffset",
												"nativeSrc": "4308:9:1",
												"nodeType": "YulIdentifier",
												"src": "4308:9:1"
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "4372:611:1",
													"nodeType": "YulBlock",
													"src": "4372:611:1",
													"statements": [
														{
															"nativeSrc": "4386:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4386:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4405:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4405:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4417:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4417:4:1",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4413:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:1"
																		},
																		"nativeSrc": "4413:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4413:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4401:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:1"
																},
																"nativeSrc": "4401:22:1",
																"nodeType": "YulFunctionCall",
																"src": "4401:22:1"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nativeSrc": "4390:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4390:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4437:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4437:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4483:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4483:4:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_string_storage",
																	"nativeSrc": "4451:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "4451:31:1"
																},
																"nativeSrc": "4451:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4451:37:1"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nativeSrc": "4441:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4441:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4501:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4501:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4510:1:1",
																"nodeType": "YulLiteral",
																"src": "4510:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4505:1:1",
																	"nodeType": "YulTypedName",
																	"src": "4505:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4569:163:1",
																"nodeType": "YulBlock",
																"src": "4569:163:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4594:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4594:6:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4612:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4612:3:1"
																								},
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4617:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4617:9:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4608:3:1"
																							},
																							"nativeSrc": "4608:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4608:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4602:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4602:5:1"
																					},
																					"nativeSrc": "4602:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4602:26:1"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "4587:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4587:6:1"
																			},
																			"nativeSrc": "4587:42:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4587:42:1"
																		},
																		"nativeSrc": "4587:42:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:42:1"
																	},
																	{
																		"nativeSrc": "4646:24:1",
																		"nodeType": "YulAssignment",
																		"src": "4646:24:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4660:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4668:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4668:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4656:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4656:3:1"
																			},
																			"nativeSrc": "4656:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4656:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nativeSrc": "4646:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4687:31:1",
																		"nodeType": "YulAssignment",
																		"src": "4687:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nativeSrc": "4704:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "4704:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4715:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4715:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4700:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4700:3:1"
																			},
																			"nativeSrc": "4700:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4700:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nativeSrc": "4687:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4535:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:1:1"
																	},
																	{
																		"name": "loopEnd",
																		"nativeSrc": "4538:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4538:7:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4532:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4532:2:1"
																},
																"nativeSrc": "4532:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4532:14:1"
															},
															"nativeSrc": "4524:208:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4547:21:1",
																"nodeType": "YulBlock",
																"src": "4547:21:1",
																"statements": [
																	{
																		"nativeSrc": "4549:17:1",
																		"nodeType": "YulAssignment",
																		"src": "4549:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4558:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "4558:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4561:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4561:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4554:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4554:3:1"
																			},
																			"nativeSrc": "4554:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4554:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4549:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4549:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4528:3:1",
																"nodeType": "YulBlock",
																"src": "4528:3:1",
																"statements": []
															},
															"src": "4524:208:1"
														},
														{
															"body": {
																"nativeSrc": "4768:156:1",
																"nodeType": "YulBlock",
																"src": "4768:156:1",
																"statements": [
																	{
																		"nativeSrc": "4786:43:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4786:43:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "4813:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4813:3:1"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "4818:9:1",
																							"nodeType": "YulIdentifier",
																							"src": "4818:9:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4809:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4809:3:1"
																					},
																					"nativeSrc": "4809:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4809:19:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4803:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4803:5:1"
																			},
																			"nativeSrc": "4803:26:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4803:26:1"
																		},
																		"variables": [
																			{
																				"name": "lastValue",
																				"nativeSrc": "4790:9:1",
																				"nodeType": "YulTypedName",
																				"src": "4790:9:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4853:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4853:6:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "lastValue",
																							"nativeSrc": "4880:9:1",
																							"nodeType": "YulIdentifier",
																							"src": "4880:9:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "newLen",
																									"nativeSrc": "4895:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4895:6:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4903:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4903:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "4891:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4891:3:1"
																							},
																							"nativeSrc": "4891:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4891:17:1"
																						}
																					],
																					"functionName": {
																						"name": "mask_bytes_dynamic",
																						"nativeSrc": "4861:18:1",
																						"nodeType": "YulIdentifier",
																						"src": "4861:18:1"
																					},
																					"nativeSrc": "4861:48:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4861:48:1"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "4846:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4846:6:1"
																			},
																			"nativeSrc": "4846:64:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4846:64:1"
																		},
																		"nativeSrc": "4846:64:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4846:64:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nativeSrc": "4751:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4751:7:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4760:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4748:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4748:2:1"
																},
																"nativeSrc": "4748:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4748:19:1"
															},
															"nativeSrc": "4745:179:1",
															"nodeType": "YulIf",
															"src": "4745:179:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4944:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4944:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "newLen",
																						"nativeSrc": "4958:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4958:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4966:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4966:1:1",
																						"type": "",
																						"value": "2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4954:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4954:3:1"
																				},
																				"nativeSrc": "4954:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4954:14:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4970:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4970:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4950:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:1"
																		},
																		"nativeSrc": "4950:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4950:22:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4937:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:1"
																},
																"nativeSrc": "4937:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4937:36:1"
															},
															"nativeSrc": "4937:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4937:36:1"
														}
													]
												},
												"nativeSrc": "4365:618:1",
												"nodeType": "YulCase",
												"src": "4365:618:1",
												"value": {
													"kind": "number",
													"nativeSrc": "4370:1:1",
													"nodeType": "YulLiteral",
													"src": "4370:1:1",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "5000:222:1",
													"nodeType": "YulBlock",
													"src": "5000:222:1",
													"statements": [
														{
															"nativeSrc": "5014:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5014:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5027:1:1",
																"nodeType": "YulLiteral",
																"src": "5027:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5018:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5018:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5051:67:1",
																"nodeType": "YulBlock",
																"src": "5051:67:1",
																"statements": [
																	{
																		"nativeSrc": "5069:35:1",
																		"nodeType": "YulAssignment",
																		"src": "5069:35:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "5088:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5088:3:1"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "5093:9:1",
																							"nodeType": "YulIdentifier",
																							"src": "5093:9:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5084:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5084:3:1"
																					},
																					"nativeSrc": "5084:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5084:19:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5078:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5078:5:1"
																			},
																			"nativeSrc": "5078:26:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5078:26:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "5069:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5069:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "newLen",
																"nativeSrc": "5044:6:1",
																"nodeType": "YulIdentifier",
																"src": "5044:6:1"
															},
															"nativeSrc": "5041:77:1",
															"nodeType": "YulIf",
															"src": "5041:77:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5138:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5138:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5197:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5197:5:1"
																			},
																			{
																				"name": "newLen",
																				"nativeSrc": "5204:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5204:6:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nativeSrc": "5144:52:1",
																			"nodeType": "YulIdentifier",
																			"src": "5144:52:1"
																		},
																		"nativeSrc": "5144:67:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5144:67:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5131:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:1"
																},
																"nativeSrc": "5131:81:1",
																"nodeType": "YulFunctionCall",
																"src": "5131:81:1"
															},
															"nativeSrc": "5131:81:1",
															"nodeType": "YulExpressionStatement",
															"src": "5131:81:1"
														}
													]
												},
												"nativeSrc": "4992:230:1",
												"nodeType": "YulCase",
												"src": "4992:230:1",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "4345:6:1",
													"nodeType": "YulIdentifier",
													"src": "4345:6:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4353:2:1",
													"nodeType": "YulLiteral",
													"src": "4353:2:1",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "4342:2:1",
												"nodeType": "YulIdentifier",
												"src": "4342:2:1"
											},
											"nativeSrc": "4342:14:1",
											"nodeType": "YulFunctionCall",
											"src": "4342:14:1"
										},
										"nativeSrc": "4335:887:1",
										"nodeType": "YulSwitch",
										"src": "4335:887:1"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
							"nativeSrc": "3833:1395:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "3914:4:1",
									"nodeType": "YulTypedName",
									"src": "3914:4:1",
									"type": ""
								},
								{
									"name": "src",
									"nativeSrc": "3920:3:1",
									"nodeType": "YulTypedName",
									"src": "3920:3:1",
									"type": ""
								}
							],
							"src": "3833:1395:1"
						},
						{
							"body": {
								"nativeSrc": "5262:152:1",
								"nodeType": "YulBlock",
								"src": "5262:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5279:1:1",
													"nodeType": "YulLiteral",
													"src": "5279:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "5282:77:1",
													"nodeType": "YulLiteral",
													"src": "5282:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5272:6:1",
												"nodeType": "YulIdentifier",
												"src": "5272:6:1"
											},
											"nativeSrc": "5272:88:1",
											"nodeType": "YulFunctionCall",
											"src": "5272:88:1"
										},
										"nativeSrc": "5272:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "5272:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5376:1:1",
													"nodeType": "YulLiteral",
													"src": "5376:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "5379:4:1",
													"nodeType": "YulLiteral",
													"src": "5379:4:1",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5369:6:1",
												"nodeType": "YulIdentifier",
												"src": "5369:6:1"
											},
											"nativeSrc": "5369:15:1",
											"nodeType": "YulFunctionCall",
											"src": "5369:15:1"
										},
										"nativeSrc": "5369:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "5369:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5400:1:1",
													"nodeType": "YulLiteral",
													"src": "5400:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "5403:4:1",
													"nodeType": "YulLiteral",
													"src": "5403:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "5393:6:1",
												"nodeType": "YulIdentifier",
												"src": "5393:6:1"
											},
											"nativeSrc": "5393:15:1",
											"nodeType": "YulFunctionCall",
											"src": "5393:15:1"
										},
										"nativeSrc": "5393:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "5393:15:1"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "5234:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "5234:180:1"
						},
						{
							"body": {
								"nativeSrc": "5468:362:1",
								"nodeType": "YulBlock",
								"src": "5468:362:1",
								"statements": [
									{
										"nativeSrc": "5478:25:1",
										"nodeType": "YulAssignment",
										"src": "5478:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "5501:1:1",
													"nodeType": "YulIdentifier",
													"src": "5501:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "5483:17:1",
												"nodeType": "YulIdentifier",
												"src": "5483:17:1"
											},
											"nativeSrc": "5483:20:1",
											"nodeType": "YulFunctionCall",
											"src": "5483:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "5478:1:1",
												"nodeType": "YulIdentifier",
												"src": "5478:1:1"
											}
										]
									},
									{
										"nativeSrc": "5512:25:1",
										"nodeType": "YulAssignment",
										"src": "5512:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "5535:1:1",
													"nodeType": "YulIdentifier",
													"src": "5535:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "5517:17:1",
												"nodeType": "YulIdentifier",
												"src": "5517:17:1"
											},
											"nativeSrc": "5517:20:1",
											"nodeType": "YulFunctionCall",
											"src": "5517:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "5512:1:1",
												"nodeType": "YulIdentifier",
												"src": "5512:1:1"
											}
										]
									},
									{
										"nativeSrc": "5546:28:1",
										"nodeType": "YulVariableDeclaration",
										"src": "5546:28:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "5569:1:1",
													"nodeType": "YulIdentifier",
													"src": "5569:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "5572:1:1",
													"nodeType": "YulIdentifier",
													"src": "5572:1:1"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "5565:3:1",
												"nodeType": "YulIdentifier",
												"src": "5565:3:1"
											},
											"nativeSrc": "5565:9:1",
											"nodeType": "YulFunctionCall",
											"src": "5565:9:1"
										},
										"variables": [
											{
												"name": "product_raw",
												"nativeSrc": "5550:11:1",
												"nodeType": "YulTypedName",
												"src": "5550:11:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "5583:41:1",
										"nodeType": "YulAssignment",
										"src": "5583:41:1",
										"value": {
											"arguments": [
												{
													"name": "product_raw",
													"nativeSrc": "5612:11:1",
													"nodeType": "YulIdentifier",
													"src": "5612:11:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "5594:17:1",
												"nodeType": "YulIdentifier",
												"src": "5594:17:1"
											},
											"nativeSrc": "5594:30:1",
											"nodeType": "YulFunctionCall",
											"src": "5594:30:1"
										},
										"variableNames": [
											{
												"name": "product",
												"nativeSrc": "5583:7:1",
												"nodeType": "YulIdentifier",
												"src": "5583:7:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "5801:22:1",
											"nodeType": "YulBlock",
											"src": "5801:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "5803:16:1",
															"nodeType": "YulIdentifier",
															"src": "5803:16:1"
														},
														"nativeSrc": "5803:18:1",
														"nodeType": "YulFunctionCall",
														"src": "5803:18:1"
													},
													"nativeSrc": "5803:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "5803:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "x",
																	"nativeSrc": "5734:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5734:1:1"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "5727:6:1",
																"nodeType": "YulIdentifier",
																"src": "5727:6:1"
															},
															"nativeSrc": "5727:9:1",
															"nodeType": "YulFunctionCall",
															"src": "5727:9:1"
														},
														{
															"arguments": [
																{
																	"name": "y",
																	"nativeSrc": "5757:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5757:1:1"
																},
																{
																	"arguments": [
																		{
																			"name": "product",
																			"nativeSrc": "5764:7:1",
																			"nodeType": "YulIdentifier",
																			"src": "5764:7:1"
																		},
																		{
																			"name": "x",
																			"nativeSrc": "5773:1:1",
																			"nodeType": "YulIdentifier",
																			"src": "5773:1:1"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nativeSrc": "5760:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5760:3:1"
																	},
																	"nativeSrc": "5760:15:1",
																	"nodeType": "YulFunctionCall",
																	"src": "5760:15:1"
																}
															],
															"functionName": {
																"name": "eq",
																"nativeSrc": "5754:2:1",
																"nodeType": "YulIdentifier",
																"src": "5754:2:1"
															},
															"nativeSrc": "5754:22:1",
															"nodeType": "YulFunctionCall",
															"src": "5754:22:1"
														}
													],
													"functionName": {
														"name": "or",
														"nativeSrc": "5707:2:1",
														"nodeType": "YulIdentifier",
														"src": "5707:2:1"
													},
													"nativeSrc": "5707:83:1",
													"nodeType": "YulFunctionCall",
													"src": "5707:83:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "5687:6:1",
												"nodeType": "YulIdentifier",
												"src": "5687:6:1"
											},
											"nativeSrc": "5687:113:1",
											"nodeType": "YulFunctionCall",
											"src": "5687:113:1"
										},
										"nativeSrc": "5684:139:1",
										"nodeType": "YulIf",
										"src": "5684:139:1"
									}
								]
							},
							"name": "checked_mul_t_uint256",
							"nativeSrc": "5420:410:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "5451:1:1",
									"nodeType": "YulTypedName",
									"src": "5451:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "5454:1:1",
									"nodeType": "YulTypedName",
									"src": "5454:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "product",
									"nativeSrc": "5460:7:1",
									"nodeType": "YulTypedName",
									"src": "5460:7:1",
									"type": ""
								}
							],
							"src": "5420:410:1"
						},
						{
							"body": {
								"nativeSrc": "5901:53:1",
								"nodeType": "YulBlock",
								"src": "5901:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5918:3:1",
													"nodeType": "YulIdentifier",
													"src": "5918:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5941:5:1",
															"nodeType": "YulIdentifier",
															"src": "5941:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "5923:17:1",
														"nodeType": "YulIdentifier",
														"src": "5923:17:1"
													},
													"nativeSrc": "5923:24:1",
													"nodeType": "YulFunctionCall",
													"src": "5923:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5911:6:1",
												"nodeType": "YulIdentifier",
												"src": "5911:6:1"
											},
											"nativeSrc": "5911:37:1",
											"nodeType": "YulFunctionCall",
											"src": "5911:37:1"
										},
										"nativeSrc": "5911:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "5911:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "5836:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5889:5:1",
									"nodeType": "YulTypedName",
									"src": "5889:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5896:3:1",
									"nodeType": "YulTypedName",
									"src": "5896:3:1",
									"type": ""
								}
							],
							"src": "5836:118:1"
						},
						{
							"body": {
								"nativeSrc": "6058:124:1",
								"nodeType": "YulBlock",
								"src": "6058:124:1",
								"statements": [
									{
										"nativeSrc": "6068:26:1",
										"nodeType": "YulAssignment",
										"src": "6068:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6080:9:1",
													"nodeType": "YulIdentifier",
													"src": "6080:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6091:2:1",
													"nodeType": "YulLiteral",
													"src": "6091:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6076:3:1",
												"nodeType": "YulIdentifier",
												"src": "6076:3:1"
											},
											"nativeSrc": "6076:18:1",
											"nodeType": "YulFunctionCall",
											"src": "6076:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "6068:4:1",
												"nodeType": "YulIdentifier",
												"src": "6068:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "6148:6:1",
													"nodeType": "YulIdentifier",
													"src": "6148:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "6161:9:1",
															"nodeType": "YulIdentifier",
															"src": "6161:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6172:1:1",
															"nodeType": "YulLiteral",
															"src": "6172:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6157:3:1",
														"nodeType": "YulIdentifier",
														"src": "6157:3:1"
													},
													"nativeSrc": "6157:17:1",
													"nodeType": "YulFunctionCall",
													"src": "6157:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6104:43:1",
												"nodeType": "YulIdentifier",
												"src": "6104:43:1"
											},
											"nativeSrc": "6104:71:1",
											"nodeType": "YulFunctionCall",
											"src": "6104:71:1"
										},
										"nativeSrc": "6104:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "6104:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "5960:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6030:9:1",
									"nodeType": "YulTypedName",
									"src": "6030:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "6042:6:1",
									"nodeType": "YulTypedName",
									"src": "6042:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "6053:4:1",
									"nodeType": "YulTypedName",
									"src": "6053:4:1",
									"type": ""
								}
							],
							"src": "5960:222:1"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "60806040526040518060400160405280600a81526020017f5465727261205265616c000000000000000000000000000000000000000000008152505f90816100479190610431565b506040518060400160405280600281526020017f54520000000000000000000000000000000000000000000000000000000000008152506001908161008c9190610431565b505f60025f6101000a81548160ff021916908360ff1602179055503480156100b2575f80fd5b506127106109c460016100c5919061052d565b6100cf919061052d565b6003819055506127106109c460016100e7919061052d565b6100f1919061052d565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6127106109c460016101d3919061052d565b6101dd919061052d565b6040516101ea919061057d565b60405180910390a3610596565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061027257607f821691505b6020821081036102855761028461022e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ac565b6102f186836102ac565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61033561033061032b84610309565b610312565b610309565b9050919050565b5f819050919050565b61034e8361031b565b61036261035a8261033c565b8484546102b8565b825550505050565b5f90565b61037661036a565b610381818484610345565b505050565b5b818110156103a4576103995f8261036e565b600181019050610387565b5050565b601f8211156103e9576103ba8161028b565b6103c38461029d565b810160208510156103d2578190505b6103e66103de8561029d565b830182610386565b50505b505050565b5f82821c905092915050565b5f6104095f19846008026103ee565b1980831691505092915050565b5f61042183836103fa565b9150826002028217905092915050565b61043a826101f7565b67ffffffffffffffff81111561045357610452610201565b5b61045d825461025b565b6104688282856103a8565b5f60209050601f831160018114610499575f8415610487578287015190505b6104918582610416565b8655506104f8565b601f1984166104a78661028b565b5f5b828110156104ce578489015182556001820191506020850194506020810190506104a9565b868310156104eb57848901516104e7601f8916826103fa565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61053782610309565b915061054283610309565b925082820261055081610309565b9150828204841483151761056757610566610500565b5b5092915050565b61057781610309565b82525050565b5f6020820190506105905f83018461056e565b92915050565b611528806105a35f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80638da5cb5b11610095578063dd62ed3e11610064578063dd62ed3e14610287578063ee2bdd48146102b7578063f2fde38b146102d5578063f3e00728146102f1576100f3565b80638da5cb5b146101ff57806395d89b411461021d578063a0712d681461023b578063a9059cbb14610257576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce56714610193578063378dc3dc146101b157806370a08231146101cf576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f80fd5b6100ff61030f565b60405161010c9190610f09565b60405180910390f35b61012f600480360381019061012a9190610fba565b61039a565b60405161013c9190611012565b60405180910390f35b61014d610487565b60405161015a919061103a565b60405180910390f35b61017d60048036038101906101789190611053565b61048d565b60405161018a9190611012565b60405180910390f35b61019b610814565b6040516101a891906110be565b60405180910390f35b6101b9610826565b6040516101c6919061103a565b60405180910390f35b6101e960048036038101906101e491906110d7565b610845565b6040516101f6919061103a565b60405180910390f35b61020761085a565b6040516102149190611111565b60405180910390f35b61022561087f565b6040516102329190610f09565b60405180910390f35b6102556004803603810190610250919061112a565b61090b565b005b610271600480360381019061026c9190610fba565b610aaf565b60405161027e9190611012565b60405180910390f35b6102a1600480360381019061029c9190611155565b610cb3565b6040516102ae919061103a565b60405180910390f35b6102bf610cd3565b6040516102cc919061103a565b60405180910390f35b6102ef60048036038101906102ea91906110d7565b610cd9565b005b6102f9610e94565b604051610306919061103a565b60405180910390f35b5f805461031b906111c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906111c0565b80156103925780601f1061036957610100808354040283529160200191610392565b820191905f5260205f20905b81548152906001019060200180831161037557829003601f168201915b505050505081565b5f8160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610475919061103a565b60405180910390a36001905092915050565b60035481565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156104f657505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052c9061123a565b60405180910390fd5b8160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac906112a2565b60405180910390fd5b8160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610670576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106679061130a565b60405180910390fd5b8160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106bc9190611355565b925050819055508160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461070f9190611388565b925050819055508160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461079d9190611355565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610801919061103a565b60405180910390a3600190509392505050565b60025f9054906101000a900460ff1681565b6127106109c4600161083891906113bb565b61084291906113bb565b81565b6005602052805f5260405f205f915090505481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461088c906111c0565b80601f01602080910402602001604051908101604052809291908181526020018280546108b8906111c0565b80156109035780601f106108da57610100808354040283529160200191610903565b820191905f5260205f20905b8154815290600101906020018083116108e657829003601f168201915b505050505081565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461099a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109919061146c565b60405180910390fd5b8060035f8282546109ab9190611388565b925050819055508060055f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a1f9190611388565b9250508190555060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610aa4919061103a565b60405180910390a350565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b159061123a565b60405180910390fd5b8160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906112a2565b60405180910390fd5b8160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bea9190611355565b925050819055508160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c3d9190611388565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ca1919061103a565b60405180910390a36001905092915050565b6006602052815f5260405f20602052805f5260405f205f91509150505481565b6109c481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5f9061146c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd906114d4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600181565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610edb82610e99565b610ee58185610ea3565b9350610ef5818560208601610eb3565b610efe81610ec1565b840191505092915050565b5f6020820190508181035f830152610f218184610ed1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f5682610f2d565b9050919050565b610f6681610f4c565b8114610f70575f80fd5b50565b5f81359050610f8181610f5d565b92915050565b5f819050919050565b610f9981610f87565b8114610fa3575f80fd5b50565b5f81359050610fb481610f90565b92915050565b5f8060408385031215610fd057610fcf610f29565b5b5f610fdd85828601610f73565b9250506020610fee85828601610fa6565b9150509250929050565b5f8115159050919050565b61100c81610ff8565b82525050565b5f6020820190506110255f830184611003565b92915050565b61103481610f87565b82525050565b5f60208201905061104d5f83018461102b565b92915050565b5f805f6060848603121561106a57611069610f29565b5b5f61107786828701610f73565b935050602061108886828701610f73565b925050604061109986828701610fa6565b9150509250925092565b5f60ff82169050919050565b6110b8816110a3565b82525050565b5f6020820190506110d15f8301846110af565b92915050565b5f602082840312156110ec576110eb610f29565b5b5f6110f984828501610f73565b91505092915050565b61110b81610f4c565b82525050565b5f6020820190506111245f830184611102565b92915050565b5f6020828403121561113f5761113e610f29565b5b5f61114c84828501610fa6565b91505092915050565b5f806040838503121561116b5761116a610f29565b5b5f61117885828601610f73565b925050602061118985828601610f73565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806111d757607f821691505b6020821081036111ea576111e9611193565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611224600f83610ea3565b915061122f826111f0565b602082019050919050565b5f6020820190508181035f83015261125181611218565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61128c601483610ea3565b915061129782611258565b602082019050919050565b5f6020820190508181035f8301526112b981611280565b9050919050565b7f416c6c6f77616e636520657863656564656400000000000000000000000000005f82015250565b5f6112f4601283610ea3565b91506112ff826112c0565b602082019050919050565b5f6020820190508181035f830152611321816112e8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61135f82610f87565b915061136a83610f87565b925082820390508181111561138257611381611328565b5b92915050565b5f61139282610f87565b915061139d83610f87565b92508282019050808211156113b5576113b4611328565b5b92915050565b5f6113c582610f87565b91506113d083610f87565b92508282026113de81610f87565b915082820484148315176113f5576113f4611328565b5b5092915050565b7f4f6e6c79206f776e65722063616e20706572666f726d207468697320616374695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f611456602283610ea3565b9150611461826113fc565b604082019050919050565b5f6020820190508181035f8301526114838161144a565b9050919050565b7f4e6577206f776e657220697320746865207a65726f20616464726573730000005f82015250565b5f6114be601d83610ea3565b91506114c98261148a565b602082019050919050565b5f6020820190508181035f8301526114eb816114b2565b905091905056fea26469706673582212201b16fae3c543f988f91a2e619b16024fa4bc412b56d011ece019961dedb1b02c64736f6c634300081a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465727261205265616C00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH0 SWAP1 DUP2 PUSH2 0x47 SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5452000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2710 PUSH2 0x9C4 PUSH1 0x1 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x2710 PUSH2 0x9C4 PUSH1 0x1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x2710 PUSH2 0x9C4 PUSH1 0x1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x596 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x272 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x285 JUMPI PUSH2 0x284 PUSH2 0x22E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x2F1 DUP7 DUP4 PUSH2 0x2AC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x335 PUSH2 0x330 PUSH2 0x32B DUP5 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x312 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E DUP4 PUSH2 0x31B JUMP JUMPDEST PUSH2 0x362 PUSH2 0x35A DUP3 PUSH2 0x33C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x376 PUSH2 0x36A JUMP JUMPDEST PUSH2 0x381 DUP2 DUP5 DUP5 PUSH2 0x345 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH2 0x399 PUSH0 DUP3 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x387 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x3BA DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x3C3 DUP5 PUSH2 0x29D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3D2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E6 PUSH2 0x3DE DUP6 PUSH2 0x29D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x386 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x409 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x421 DUP4 DUP4 PUSH2 0x3FA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43A DUP3 PUSH2 0x1F7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453 JUMPI PUSH2 0x452 PUSH2 0x201 JUMP JUMPDEST JUMPDEST PUSH2 0x45D DUP3 SLOAD PUSH2 0x25B JUMP JUMPDEST PUSH2 0x468 DUP3 DUP3 DUP6 PUSH2 0x3A8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x499 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x487 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x491 DUP6 DUP3 PUSH2 0x416 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A7 DUP7 PUSH2 0x28B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4CE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4EB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3FA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x537 DUP3 PUSH2 0x309 JUMP JUMPDEST SWAP2 POP PUSH2 0x542 DUP4 PUSH2 0x309 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x550 DUP2 PUSH2 0x309 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x500 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x590 PUSH0 DUP4 ADD DUP5 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1528 DUP1 PUSH2 0x5A3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xEE2BDD48 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF3E00728 EQ PUSH2 0x2F1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x347 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x392 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x375 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x9C4 PUSH1 0x1 PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x842 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x88C SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B8 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x903 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x903 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x991 SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA4 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9C4 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEDB DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xEE5 DUP2 DUP6 PUSH2 0xEA3 JUMP JUMPDEST SWAP4 POP PUSH2 0xEF5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF21 DUP2 DUP5 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF56 DUP3 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF66 DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP2 EQ PUSH2 0xF70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF81 DUP2 PUSH2 0xF5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF99 DUP2 PUSH2 0xF87 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB4 DUP2 PUSH2 0xF90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDD DUP6 DUP3 DUP7 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFEE DUP6 DUP3 DUP7 ADD PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100C DUP2 PUSH2 0xFF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH0 DUP4 ADD DUP5 PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1034 DUP2 PUSH2 0xF87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104D PUSH0 DUP4 ADD DUP5 PUSH2 0x102B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x106A JUMPI PUSH2 0x1069 PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1077 DUP7 DUP3 DUP8 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1088 DUP7 DUP3 DUP8 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1099 DUP7 DUP3 DUP8 ADD PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B8 DUP2 PUSH2 0x10A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x10AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EC JUMPI PUSH2 0x10EB PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F9 DUP5 DUP3 DUP6 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x110B DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1124 PUSH0 DUP4 ADD DUP5 PUSH2 0x1102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x114C DUP5 DUP3 DUP6 ADD PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116B JUMPI PUSH2 0x116A PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1178 DUP6 DUP3 DUP7 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1189 DUP6 DUP3 DUP7 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11EA JUMPI PUSH2 0x11E9 PUSH2 0x1193 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 PUSH1 0xF DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x122F DUP3 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1251 DUP2 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128C PUSH1 0x14 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1297 DUP3 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12B9 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E63652065786365656465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F4 PUSH1 0x12 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x135F DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP PUSH2 0x136A DUP4 PUSH2 0xF87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x1328 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1392 DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP PUSH2 0x139D DUP4 PUSH2 0xF87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x1328 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13C5 DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP4 PUSH2 0xF87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13DE DUP2 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x13F5 JUMPI PUSH2 0x13F4 PUSH2 0x1328 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20706572666F726D20746869732061637469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1456 PUSH1 0x22 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1461 DUP3 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1483 DUP2 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206F776E657220697320746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE PUSH1 0x1D DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C9 DUP3 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EB DUP2 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL AND STATICCALL 0xE3 0xC5 NUMBER 0xF9 DUP9 0xF9 BYTE 0x2E PUSH2 0x9B16 MUL 0x4F LOG4 0xBC COINBASE 0x2B JUMP 0xD0 GT 0xEC 0xE0 NOT SWAP7 SAR 0xED 0xB1 0xB0 0x2C PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
		"sourceMap": "57:3087:0:-:0;;;119:33;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;158:27;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;215:1;191:25;;;;;;;;;;;;;;;;;;;;1093:195;;;;;;;;;;511:5;409:4;319:1;477:31;;;;:::i;:::-;:39;;;;:::i;:::-;1117:11;:27;;;;511:5;409:4;319:1;477:31;;;;:::i;:::-;:39;;;;:::i;:::-;1154:9;:21;1164:10;1154:21;;;;;;;;;;;;;;;:37;;;;1209:10;1201:5;;:18;;;;;;;;;;;;;;;;;;1255:10;1234:47;;1251:1;1234:47;;;511:5;409:4;319:1;477:31;;;;:::i;:::-;:39;;;;:::i;:::-;1234:47;;;;;;:::i;:::-;;;;;;;;57:3087;;7:99:1;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:410;5460:7;5483:20;5501:1;5483:20;:::i;:::-;5478:25;;5517:20;5535:1;5517:20;:::i;:::-;5512:25;;5572:1;5569;5565:9;5594:30;5612:11;5594:30;:::i;:::-;5583:41;;5773:1;5764:7;5760:15;5757:1;5754:22;5734:1;5727:9;5707:83;5684:139;;5803:18;;:::i;:::-;5684:139;5468:362;5420:410;;;;:::o;5836:118::-;5923:24;5941:5;5923:24;:::i;:::-;5918:3;5911:37;5836:118;;:::o;5960:222::-;6053:4;6091:2;6080:9;6076:18;6068:26;;6104:71;6172:1;6161:9;6157:17;6148:6;6104:71;:::i;:::-;5960:222;;;;:::o;57:3087:0:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "success",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "hectares",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "initialSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_amount",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "squareMetersPerToken",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "success",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "success",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 4,
				"contract": "contracts/Criptomoedaterrareal.sol:TerraReal",
				"label": "name",
				"offset": 0,
				"slot": "0",
				"type": "t_string_storage"
			},
			{
				"astId": 7,
				"contract": "contracts/Criptomoedaterrareal.sol:TerraReal",
				"label": "symbol",
				"offset": 0,
				"slot": "1",
				"type": "t_string_storage"
			},
			{
				"astId": 10,
				"contract": "contracts/Criptomoedaterrareal.sol:TerraReal",
				"label": "decimals",
				"offset": 0,
				"slot": "2",
				"type": "t_uint8"
			},
			{
				"astId": 12,
				"contract": "contracts/Criptomoedaterrareal.sol:TerraReal",
				"label": "totalSupply",
				"offset": 0,
				"slot": "3",
				"type": "t_uint256"
			},
			{
				"astId": 27,
				"contract": "contracts/Criptomoedaterrareal.sol:TerraReal",
				"label": "owner",
				"offset": 0,
				"slot": "4",
				"type": "t_address"
			},
			{
				"astId": 31,
				"contract": "contracts/Criptomoedaterrareal.sol:TerraReal",
				"label": "balanceOf",
				"offset": 0,
				"slot": "5",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 37,
				"contract": "contracts/Criptomoedaterrareal.sol:TerraReal",
				"label": "allowance",
				"offset": 0,
				"slot": "6",
				"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => uint256))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_uint256)"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			},
			"t_uint8": {
				"encoding": "inplace",
				"label": "uint8",
				"numberOfBytes": "1"
			}
		}
	},
	"web3Deploy": "var terrarealContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hectares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"squareMetersPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar terrareal = terrarealContract.deploy({\n     data: '0x60806040526040518060400160405280600a81526020017f5465727261205265616c000000000000000000000000000000000000000000008152505f90816100479190610431565b506040518060400160405280600281526020017f54520000000000000000000000000000000000000000000000000000000000008152506001908161008c9190610431565b505f60025f6101000a81548160ff021916908360ff1602179055503480156100b2575f80fd5b506127106109c460016100c5919061052d565b6100cf919061052d565b6003819055506127106109c460016100e7919061052d565b6100f1919061052d565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6127106109c460016101d3919061052d565b6101dd919061052d565b6040516101ea919061057d565b60405180910390a3610596565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061027257607f821691505b6020821081036102855761028461022e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ac565b6102f186836102ac565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61033561033061032b84610309565b610312565b610309565b9050919050565b5f819050919050565b61034e8361031b565b61036261035a8261033c565b8484546102b8565b825550505050565b5f90565b61037661036a565b610381818484610345565b505050565b5b818110156103a4576103995f8261036e565b600181019050610387565b5050565b601f8211156103e9576103ba8161028b565b6103c38461029d565b810160208510156103d2578190505b6103e66103de8561029d565b830182610386565b50505b505050565b5f82821c905092915050565b5f6104095f19846008026103ee565b1980831691505092915050565b5f61042183836103fa565b9150826002028217905092915050565b61043a826101f7565b67ffffffffffffffff81111561045357610452610201565b5b61045d825461025b565b6104688282856103a8565b5f60209050601f831160018114610499575f8415610487578287015190505b6104918582610416565b8655506104f8565b601f1984166104a78661028b565b5f5b828110156104ce578489015182556001820191506020850194506020810190506104a9565b868310156104eb57848901516104e7601f8916826103fa565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61053782610309565b915061054283610309565b925082820261055081610309565b9150828204841483151761056757610566610500565b5b5092915050565b61057781610309565b82525050565b5f6020820190506105905f83018461056e565b92915050565b611528806105a35f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80638da5cb5b11610095578063dd62ed3e11610064578063dd62ed3e14610287578063ee2bdd48146102b7578063f2fde38b146102d5578063f3e00728146102f1576100f3565b80638da5cb5b146101ff57806395d89b411461021d578063a0712d681461023b578063a9059cbb14610257576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce56714610193578063378dc3dc146101b157806370a08231146101cf576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f80fd5b6100ff61030f565b60405161010c9190610f09565b60405180910390f35b61012f600480360381019061012a9190610fba565b61039a565b60405161013c9190611012565b60405180910390f35b61014d610487565b60405161015a919061103a565b60405180910390f35b61017d60048036038101906101789190611053565b61048d565b60405161018a9190611012565b60405180910390f35b61019b610814565b6040516101a891906110be565b60405180910390f35b6101b9610826565b6040516101c6919061103a565b60405180910390f35b6101e960048036038101906101e491906110d7565b610845565b6040516101f6919061103a565b60405180910390f35b61020761085a565b6040516102149190611111565b60405180910390f35b61022561087f565b6040516102329190610f09565b60405180910390f35b6102556004803603810190610250919061112a565b61090b565b005b610271600480360381019061026c9190610fba565b610aaf565b60405161027e9190611012565b60405180910390f35b6102a1600480360381019061029c9190611155565b610cb3565b6040516102ae919061103a565b60405180910390f35b6102bf610cd3565b6040516102cc919061103a565b60405180910390f35b6102ef60048036038101906102ea91906110d7565b610cd9565b005b6102f9610e94565b604051610306919061103a565b60405180910390f35b5f805461031b906111c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610347906111c0565b80156103925780601f1061036957610100808354040283529160200191610392565b820191905f5260205f20905b81548152906001019060200180831161037557829003601f168201915b505050505081565b5f8160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610475919061103a565b60405180910390a36001905092915050565b60035481565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156104f657505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052c9061123a565b60405180910390fd5b8160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac906112a2565b60405180910390fd5b8160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610670576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106679061130a565b60405180910390fd5b8160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106bc9190611355565b925050819055508160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461070f9190611388565b925050819055508160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461079d9190611355565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610801919061103a565b60405180910390a3600190509392505050565b60025f9054906101000a900460ff1681565b6127106109c4600161083891906113bb565b61084291906113bb565b81565b6005602052805f5260405f205f915090505481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461088c906111c0565b80601f01602080910402602001604051908101604052809291908181526020018280546108b8906111c0565b80156109035780601f106108da57610100808354040283529160200191610903565b820191905f5260205f20905b8154815290600101906020018083116108e657829003601f168201915b505050505081565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461099a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109919061146c565b60405180910390fd5b8060035f8282546109ab9190611388565b925050819055508060055f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a1f9190611388565b9250508190555060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610aa4919061103a565b60405180910390a350565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b159061123a565b60405180910390fd5b8160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906112a2565b60405180910390fd5b8160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bea9190611355565b925050819055508160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c3d9190611388565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ca1919061103a565b60405180910390a36001905092915050565b6006602052815f5260405f20602052805f5260405f205f91509150505481565b6109c481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5f9061146c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd906114d4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600181565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610edb82610e99565b610ee58185610ea3565b9350610ef5818560208601610eb3565b610efe81610ec1565b840191505092915050565b5f6020820190508181035f830152610f218184610ed1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f5682610f2d565b9050919050565b610f6681610f4c565b8114610f70575f80fd5b50565b5f81359050610f8181610f5d565b92915050565b5f819050919050565b610f9981610f87565b8114610fa3575f80fd5b50565b5f81359050610fb481610f90565b92915050565b5f8060408385031215610fd057610fcf610f29565b5b5f610fdd85828601610f73565b9250506020610fee85828601610fa6565b9150509250929050565b5f8115159050919050565b61100c81610ff8565b82525050565b5f6020820190506110255f830184611003565b92915050565b61103481610f87565b82525050565b5f60208201905061104d5f83018461102b565b92915050565b5f805f6060848603121561106a57611069610f29565b5b5f61107786828701610f73565b935050602061108886828701610f73565b925050604061109986828701610fa6565b9150509250925092565b5f60ff82169050919050565b6110b8816110a3565b82525050565b5f6020820190506110d15f8301846110af565b92915050565b5f602082840312156110ec576110eb610f29565b5b5f6110f984828501610f73565b91505092915050565b61110b81610f4c565b82525050565b5f6020820190506111245f830184611102565b92915050565b5f6020828403121561113f5761113e610f29565b5b5f61114c84828501610fa6565b91505092915050565b5f806040838503121561116b5761116a610f29565b5b5f61117885828601610f73565b925050602061118985828601610f73565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806111d757607f821691505b6020821081036111ea576111e9611193565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611224600f83610ea3565b915061122f826111f0565b602082019050919050565b5f6020820190508181035f83015261125181611218565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61128c601483610ea3565b915061129782611258565b602082019050919050565b5f6020820190508181035f8301526112b981611280565b9050919050565b7f416c6c6f77616e636520657863656564656400000000000000000000000000005f82015250565b5f6112f4601283610ea3565b91506112ff826112c0565b602082019050919050565b5f6020820190508181035f830152611321816112e8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61135f82610f87565b915061136a83610f87565b925082820390508181111561138257611381611328565b5b92915050565b5f61139282610f87565b915061139d83610f87565b92508282019050808211156113b5576113b4611328565b5b92915050565b5f6113c582610f87565b91506113d083610f87565b92508282026113de81610f87565b915082820484148315176113f5576113f4611328565b5b5092915050565b7f4f6e6c79206f776e65722063616e20706572666f726d207468697320616374695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f611456602283610ea3565b9150611461826113fc565b604082019050919050565b5f6020820190508181035f8301526114838161144a565b9050919050565b7f4e6577206f776e657220697320746865207a65726f20616464726573730000005f82015250565b5f6114be601d83610ea3565b91506114c98261148a565b602082019050919050565b5f6020820190508181035f8301526114eb816114b2565b905091905056fea26469706673582212201b16fae3c543f988f91a2e619b16024fa4bc412b56d011ece019961dedb1b02c64736f6c634300081a0033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"dd62ed3e": "allowance(address,address)",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"313ce567": "decimals()",
		"ee2bdd48": "hectares()",
		"378dc3dc": "initialSupply()",
		"a0712d68": "mint(uint256)",
		"06fdde03": "name()",
		"8da5cb5b": "owner()",
		"f3e00728": "squareMetersPerToken()",
		"95d89b41": "symbol()",
		"18160ddd": "totalSupply()",
		"a9059cbb": "transfer(address,uint256)",
		"23b872dd": "transferFrom(address,address,uint256)",
		"f2fde38b": "transferOwnership(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "1083200",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"allowance(address,address)": "infinite",
			"approve(address,uint256)": "infinite",
			"balanceOf(address)": "2891",
			"decimals()": "2511",
			"hectares()": "369",
			"initialSupply()": "infinite",
			"mint(uint256)": "infinite",
			"name()": "infinite",
			"owner()": "2531",
			"squareMetersPerToken()": "413",
			"symbol()": "infinite",
			"totalSupply()": "2493",
			"transfer(address,uint256)": "infinite",
			"transferFrom(address,address,uint256)": "infinite",
			"transferOwnership(address)": "30664"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@allowance_37": {
				"entryPoint": 3251,
				"id": 37,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@approve_181": {
				"entryPoint": 922,
				"id": 181,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@balanceOf_31": {
				"entryPoint": 2117,
				"id": 31,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@decimals_10": {
				"entryPoint": 2068,
				"id": 10,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@hectares_18": {
				"entryPoint": 3283,
				"id": 18,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@initialSupply_25": {
				"entryPoint": 2086,
				"id": 25,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@mint_287": {
				"entryPoint": 2315,
				"id": 287,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@name_4": {
				"entryPoint": 783,
				"id": 4,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@owner_27": {
				"entryPoint": 2138,
				"id": 27,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@squareMetersPerToken_15": {
				"entryPoint": 3732,
				"id": 15,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@symbol_7": {
				"entryPoint": 2175,
				"id": 7,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@totalSupply_12": {
				"entryPoint": 1159,
				"id": 12,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@transferFrom_260": {
				"entryPoint": 1165,
				"id": 260,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@transferOwnership_314": {
				"entryPoint": 3289,
				"id": 314,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@transfer_153": {
				"entryPoint": 2735,
				"id": 153,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_address": {
				"entryPoint": 3955,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256": {
				"entryPoint": 4006,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 4311,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 4437,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 4179,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 4026,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 4394,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 4354,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_bool_to_t_bool_fromStack": {
				"entryPoint": 4099,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 3793,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4840,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4632,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4736,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5298,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5194,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 4139,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_uint8_to_t_uint8_fromStack": {
				"entryPoint": 4271,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 4369,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": 4114,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 3849,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4874,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4666,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4770,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5332,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5228,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 4154,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
				"entryPoint": 4286,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 3737,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 3747,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 5000,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_mul_t_uint256": {
				"entryPoint": 5051,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 4949,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 3916,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_bool": {
				"entryPoint": 4088,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 3885,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 3975,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint8": {
				"entryPoint": 4259,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_memory_to_memory_with_cleanup": {
				"entryPoint": 3763,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"extract_byte_array_length": {
				"entryPoint": 4544,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 4904,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x22": {
				"entryPoint": 4499,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 3881,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"round_up_to_mul_of_32": {
				"entryPoint": 3777,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"store_literal_in_memory_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027": {
				"entryPoint": 4800,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
				"entryPoint": 4592,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
				"entryPoint": 4696,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940": {
				"entryPoint": 5258,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a": {
				"entryPoint": 5116,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 3933,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 3984,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:12674:1",
					"nodeType": "YulBlock",
					"src": "0:12674:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "66:40:1",
								"nodeType": "YulBlock",
								"src": "66:40:1",
								"statements": [
									{
										"nativeSrc": "77:22:1",
										"nodeType": "YulAssignment",
										"src": "77:22:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "93:5:1",
													"nodeType": "YulIdentifier",
													"src": "93:5:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "87:5:1",
												"nodeType": "YulIdentifier",
												"src": "87:5:1"
											},
											"nativeSrc": "87:12:1",
											"nodeType": "YulFunctionCall",
											"src": "87:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "77:6:1",
												"nodeType": "YulIdentifier",
												"src": "77:6:1"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nativeSrc": "7:99:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "49:5:1",
									"nodeType": "YulTypedName",
									"src": "49:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "59:6:1",
									"nodeType": "YulTypedName",
									"src": "59:6:1",
									"type": ""
								}
							],
							"src": "7:99:1"
						},
						{
							"body": {
								"nativeSrc": "208:73:1",
								"nodeType": "YulBlock",
								"src": "208:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "225:3:1",
													"nodeType": "YulIdentifier",
													"src": "225:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "230:6:1",
													"nodeType": "YulIdentifier",
													"src": "230:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "218:6:1",
												"nodeType": "YulIdentifier",
												"src": "218:6:1"
											},
											"nativeSrc": "218:19:1",
											"nodeType": "YulFunctionCall",
											"src": "218:19:1"
										},
										"nativeSrc": "218:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "218:19:1"
									},
									{
										"nativeSrc": "246:29:1",
										"nodeType": "YulAssignment",
										"src": "246:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "265:3:1",
													"nodeType": "YulIdentifier",
													"src": "265:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "270:4:1",
													"nodeType": "YulLiteral",
													"src": "270:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "261:3:1",
												"nodeType": "YulIdentifier",
												"src": "261:3:1"
											},
											"nativeSrc": "261:14:1",
											"nodeType": "YulFunctionCall",
											"src": "261:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "246:11:1",
												"nodeType": "YulIdentifier",
												"src": "246:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "112:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "180:3:1",
									"nodeType": "YulTypedName",
									"src": "180:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "185:6:1",
									"nodeType": "YulTypedName",
									"src": "185:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "196:11:1",
									"nodeType": "YulTypedName",
									"src": "196:11:1",
									"type": ""
								}
							],
							"src": "112:169:1"
						},
						{
							"body": {
								"nativeSrc": "349:77:1",
								"nodeType": "YulBlock",
								"src": "349:77:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "dst",
													"nativeSrc": "366:3:1",
													"nodeType": "YulIdentifier",
													"src": "366:3:1"
												},
												{
													"name": "src",
													"nativeSrc": "371:3:1",
													"nodeType": "YulIdentifier",
													"src": "371:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "376:6:1",
													"nodeType": "YulIdentifier",
													"src": "376:6:1"
												}
											],
											"functionName": {
												"name": "mcopy",
												"nativeSrc": "360:5:1",
												"nodeType": "YulIdentifier",
												"src": "360:5:1"
											},
											"nativeSrc": "360:23:1",
											"nodeType": "YulFunctionCall",
											"src": "360:23:1"
										},
										"nativeSrc": "360:23:1",
										"nodeType": "YulExpressionStatement",
										"src": "360:23:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dst",
															"nativeSrc": "403:3:1",
															"nodeType": "YulIdentifier",
															"src": "403:3:1"
														},
														{
															"name": "length",
															"nativeSrc": "408:6:1",
															"nodeType": "YulIdentifier",
															"src": "408:6:1"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "399:3:1",
														"nodeType": "YulIdentifier",
														"src": "399:3:1"
													},
													"nativeSrc": "399:16:1",
													"nodeType": "YulFunctionCall",
													"src": "399:16:1"
												},
												{
													"kind": "number",
													"nativeSrc": "417:1:1",
													"nodeType": "YulLiteral",
													"src": "417:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "392:6:1",
												"nodeType": "YulIdentifier",
												"src": "392:6:1"
											},
											"nativeSrc": "392:27:1",
											"nodeType": "YulFunctionCall",
											"src": "392:27:1"
										},
										"nativeSrc": "392:27:1",
										"nodeType": "YulExpressionStatement",
										"src": "392:27:1"
									}
								]
							},
							"name": "copy_memory_to_memory_with_cleanup",
							"nativeSrc": "287:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "src",
									"nativeSrc": "331:3:1",
									"nodeType": "YulTypedName",
									"src": "331:3:1",
									"type": ""
								},
								{
									"name": "dst",
									"nativeSrc": "336:3:1",
									"nodeType": "YulTypedName",
									"src": "336:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "341:6:1",
									"nodeType": "YulTypedName",
									"src": "341:6:1",
									"type": ""
								}
							],
							"src": "287:139:1"
						},
						{
							"body": {
								"nativeSrc": "480:54:1",
								"nodeType": "YulBlock",
								"src": "480:54:1",
								"statements": [
									{
										"nativeSrc": "490:38:1",
										"nodeType": "YulAssignment",
										"src": "490:38:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "508:5:1",
															"nodeType": "YulIdentifier",
															"src": "508:5:1"
														},
														{
															"kind": "number",
															"nativeSrc": "515:2:1",
															"nodeType": "YulLiteral",
															"src": "515:2:1",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "504:3:1",
														"nodeType": "YulIdentifier",
														"src": "504:3:1"
													},
													"nativeSrc": "504:14:1",
													"nodeType": "YulFunctionCall",
													"src": "504:14:1"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "524:2:1",
															"nodeType": "YulLiteral",
															"src": "524:2:1",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "520:3:1",
														"nodeType": "YulIdentifier",
														"src": "520:3:1"
													},
													"nativeSrc": "520:7:1",
													"nodeType": "YulFunctionCall",
													"src": "520:7:1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "500:3:1",
												"nodeType": "YulIdentifier",
												"src": "500:3:1"
											},
											"nativeSrc": "500:28:1",
											"nodeType": "YulFunctionCall",
											"src": "500:28:1"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "490:6:1",
												"nodeType": "YulIdentifier",
												"src": "490:6:1"
											}
										]
									}
								]
							},
							"name": "round_up_to_mul_of_32",
							"nativeSrc": "432:102:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "463:5:1",
									"nodeType": "YulTypedName",
									"src": "463:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "473:6:1",
									"nodeType": "YulTypedName",
									"src": "473:6:1",
									"type": ""
								}
							],
							"src": "432:102:1"
						},
						{
							"body": {
								"nativeSrc": "632:285:1",
								"nodeType": "YulBlock",
								"src": "632:285:1",
								"statements": [
									{
										"nativeSrc": "642:53:1",
										"nodeType": "YulVariableDeclaration",
										"src": "642:53:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "689:5:1",
													"nodeType": "YulIdentifier",
													"src": "689:5:1"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "656:32:1",
												"nodeType": "YulIdentifier",
												"src": "656:32:1"
											},
											"nativeSrc": "656:39:1",
											"nodeType": "YulFunctionCall",
											"src": "656:39:1"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "646:6:1",
												"nodeType": "YulTypedName",
												"src": "646:6:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "704:78:1",
										"nodeType": "YulAssignment",
										"src": "704:78:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "770:3:1",
													"nodeType": "YulIdentifier",
													"src": "770:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "775:6:1",
													"nodeType": "YulIdentifier",
													"src": "775:6:1"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "711:58:1",
												"nodeType": "YulIdentifier",
												"src": "711:58:1"
											},
											"nativeSrc": "711:71:1",
											"nodeType": "YulFunctionCall",
											"src": "711:71:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "704:3:1",
												"nodeType": "YulIdentifier",
												"src": "704:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "830:5:1",
															"nodeType": "YulIdentifier",
															"src": "830:5:1"
														},
														{
															"kind": "number",
															"nativeSrc": "837:4:1",
															"nodeType": "YulLiteral",
															"src": "837:4:1",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "826:3:1",
														"nodeType": "YulIdentifier",
														"src": "826:3:1"
													},
													"nativeSrc": "826:16:1",
													"nodeType": "YulFunctionCall",
													"src": "826:16:1"
												},
												{
													"name": "pos",
													"nativeSrc": "844:3:1",
													"nodeType": "YulIdentifier",
													"src": "844:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "849:6:1",
													"nodeType": "YulIdentifier",
													"src": "849:6:1"
												}
											],
											"functionName": {
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "791:34:1",
												"nodeType": "YulIdentifier",
												"src": "791:34:1"
											},
											"nativeSrc": "791:65:1",
											"nodeType": "YulFunctionCall",
											"src": "791:65:1"
										},
										"nativeSrc": "791:65:1",
										"nodeType": "YulExpressionStatement",
										"src": "791:65:1"
									},
									{
										"nativeSrc": "865:46:1",
										"nodeType": "YulAssignment",
										"src": "865:46:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "876:3:1",
													"nodeType": "YulIdentifier",
													"src": "876:3:1"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "903:6:1",
															"nodeType": "YulIdentifier",
															"src": "903:6:1"
														}
													],
													"functionName": {
														"name": "round_up_to_mul_of_32",
														"nativeSrc": "881:21:1",
														"nodeType": "YulIdentifier",
														"src": "881:21:1"
													},
													"nativeSrc": "881:29:1",
													"nodeType": "YulFunctionCall",
													"src": "881:29:1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "872:3:1",
												"nodeType": "YulIdentifier",
												"src": "872:3:1"
											},
											"nativeSrc": "872:39:1",
											"nodeType": "YulFunctionCall",
											"src": "872:39:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "865:3:1",
												"nodeType": "YulIdentifier",
												"src": "865:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "540:377:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "613:5:1",
									"nodeType": "YulTypedName",
									"src": "613:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "620:3:1",
									"nodeType": "YulTypedName",
									"src": "620:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "628:3:1",
									"nodeType": "YulTypedName",
									"src": "628:3:1",
									"type": ""
								}
							],
							"src": "540:377:1"
						},
						{
							"body": {
								"nativeSrc": "1041:195:1",
								"nodeType": "YulBlock",
								"src": "1041:195:1",
								"statements": [
									{
										"nativeSrc": "1051:26:1",
										"nodeType": "YulAssignment",
										"src": "1051:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1063:9:1",
													"nodeType": "YulIdentifier",
													"src": "1063:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1074:2:1",
													"nodeType": "YulLiteral",
													"src": "1074:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1059:3:1",
												"nodeType": "YulIdentifier",
												"src": "1059:3:1"
											},
											"nativeSrc": "1059:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1059:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1051:4:1",
												"nodeType": "YulIdentifier",
												"src": "1051:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1098:9:1",
															"nodeType": "YulIdentifier",
															"src": "1098:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1109:1:1",
															"nodeType": "YulLiteral",
															"src": "1109:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1094:3:1",
														"nodeType": "YulIdentifier",
														"src": "1094:3:1"
													},
													"nativeSrc": "1094:17:1",
													"nodeType": "YulFunctionCall",
													"src": "1094:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "1117:4:1",
															"nodeType": "YulIdentifier",
															"src": "1117:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "1123:9:1",
															"nodeType": "YulIdentifier",
															"src": "1123:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1113:3:1",
														"nodeType": "YulIdentifier",
														"src": "1113:3:1"
													},
													"nativeSrc": "1113:20:1",
													"nodeType": "YulFunctionCall",
													"src": "1113:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1087:6:1",
												"nodeType": "YulIdentifier",
												"src": "1087:6:1"
											},
											"nativeSrc": "1087:47:1",
											"nodeType": "YulFunctionCall",
											"src": "1087:47:1"
										},
										"nativeSrc": "1087:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "1087:47:1"
									},
									{
										"nativeSrc": "1143:86:1",
										"nodeType": "YulAssignment",
										"src": "1143:86:1",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1215:6:1",
													"nodeType": "YulIdentifier",
													"src": "1215:6:1"
												},
												{
													"name": "tail",
													"nativeSrc": "1224:4:1",
													"nodeType": "YulIdentifier",
													"src": "1224:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1151:63:1",
												"nodeType": "YulIdentifier",
												"src": "1151:63:1"
											},
											"nativeSrc": "1151:78:1",
											"nodeType": "YulFunctionCall",
											"src": "1151:78:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1143:4:1",
												"nodeType": "YulIdentifier",
												"src": "1143:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "923:313:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1013:9:1",
									"nodeType": "YulTypedName",
									"src": "1013:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1025:6:1",
									"nodeType": "YulTypedName",
									"src": "1025:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1036:4:1",
									"nodeType": "YulTypedName",
									"src": "1036:4:1",
									"type": ""
								}
							],
							"src": "923:313:1"
						},
						{
							"body": {
								"nativeSrc": "1282:35:1",
								"nodeType": "YulBlock",
								"src": "1282:35:1",
								"statements": [
									{
										"nativeSrc": "1292:19:1",
										"nodeType": "YulAssignment",
										"src": "1292:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1308:2:1",
													"nodeType": "YulLiteral",
													"src": "1308:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "1302:5:1",
												"nodeType": "YulIdentifier",
												"src": "1302:5:1"
											},
											"nativeSrc": "1302:9:1",
											"nodeType": "YulFunctionCall",
											"src": "1302:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "1292:6:1",
												"nodeType": "YulIdentifier",
												"src": "1292:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "1242:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "1275:6:1",
									"nodeType": "YulTypedName",
									"src": "1275:6:1",
									"type": ""
								}
							],
							"src": "1242:75:1"
						},
						{
							"body": {
								"nativeSrc": "1412:28:1",
								"nodeType": "YulBlock",
								"src": "1412:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1429:1:1",
													"nodeType": "YulLiteral",
													"src": "1429:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1432:1:1",
													"nodeType": "YulLiteral",
													"src": "1432:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1422:6:1",
												"nodeType": "YulIdentifier",
												"src": "1422:6:1"
											},
											"nativeSrc": "1422:12:1",
											"nodeType": "YulFunctionCall",
											"src": "1422:12:1"
										},
										"nativeSrc": "1422:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "1422:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "1323:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "1323:117:1"
						},
						{
							"body": {
								"nativeSrc": "1535:28:1",
								"nodeType": "YulBlock",
								"src": "1535:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1552:1:1",
													"nodeType": "YulLiteral",
													"src": "1552:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1555:1:1",
													"nodeType": "YulLiteral",
													"src": "1555:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1545:6:1",
												"nodeType": "YulIdentifier",
												"src": "1545:6:1"
											},
											"nativeSrc": "1545:12:1",
											"nodeType": "YulFunctionCall",
											"src": "1545:12:1"
										},
										"nativeSrc": "1545:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "1545:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "1446:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "1446:117:1"
						},
						{
							"body": {
								"nativeSrc": "1614:81:1",
								"nodeType": "YulBlock",
								"src": "1614:81:1",
								"statements": [
									{
										"nativeSrc": "1624:65:1",
										"nodeType": "YulAssignment",
										"src": "1624:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1639:5:1",
													"nodeType": "YulIdentifier",
													"src": "1639:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1646:42:1",
													"nodeType": "YulLiteral",
													"src": "1646:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "1635:3:1",
												"nodeType": "YulIdentifier",
												"src": "1635:3:1"
											},
											"nativeSrc": "1635:54:1",
											"nodeType": "YulFunctionCall",
											"src": "1635:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1624:7:1",
												"nodeType": "YulIdentifier",
												"src": "1624:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "1569:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1596:5:1",
									"nodeType": "YulTypedName",
									"src": "1596:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1606:7:1",
									"nodeType": "YulTypedName",
									"src": "1606:7:1",
									"type": ""
								}
							],
							"src": "1569:126:1"
						},
						{
							"body": {
								"nativeSrc": "1746:51:1",
								"nodeType": "YulBlock",
								"src": "1746:51:1",
								"statements": [
									{
										"nativeSrc": "1756:35:1",
										"nodeType": "YulAssignment",
										"src": "1756:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1785:5:1",
													"nodeType": "YulIdentifier",
													"src": "1785:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "1767:17:1",
												"nodeType": "YulIdentifier",
												"src": "1767:17:1"
											},
											"nativeSrc": "1767:24:1",
											"nodeType": "YulFunctionCall",
											"src": "1767:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1756:7:1",
												"nodeType": "YulIdentifier",
												"src": "1756:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "1701:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1728:5:1",
									"nodeType": "YulTypedName",
									"src": "1728:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1738:7:1",
									"nodeType": "YulTypedName",
									"src": "1738:7:1",
									"type": ""
								}
							],
							"src": "1701:96:1"
						},
						{
							"body": {
								"nativeSrc": "1846:79:1",
								"nodeType": "YulBlock",
								"src": "1846:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1903:16:1",
											"nodeType": "YulBlock",
											"src": "1903:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1912:1:1",
																"nodeType": "YulLiteral",
																"src": "1912:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1915:1:1",
																"nodeType": "YulLiteral",
																"src": "1915:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1905:6:1",
															"nodeType": "YulIdentifier",
															"src": "1905:6:1"
														},
														"nativeSrc": "1905:12:1",
														"nodeType": "YulFunctionCall",
														"src": "1905:12:1"
													},
													"nativeSrc": "1905:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "1905:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1869:5:1",
															"nodeType": "YulIdentifier",
															"src": "1869:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1894:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1894:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "1876:17:1",
																"nodeType": "YulIdentifier",
																"src": "1876:17:1"
															},
															"nativeSrc": "1876:24:1",
															"nodeType": "YulFunctionCall",
															"src": "1876:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "1866:2:1",
														"nodeType": "YulIdentifier",
														"src": "1866:2:1"
													},
													"nativeSrc": "1866:35:1",
													"nodeType": "YulFunctionCall",
													"src": "1866:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "1859:6:1",
												"nodeType": "YulIdentifier",
												"src": "1859:6:1"
											},
											"nativeSrc": "1859:43:1",
											"nodeType": "YulFunctionCall",
											"src": "1859:43:1"
										},
										"nativeSrc": "1856:63:1",
										"nodeType": "YulIf",
										"src": "1856:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "1803:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1839:5:1",
									"nodeType": "YulTypedName",
									"src": "1839:5:1",
									"type": ""
								}
							],
							"src": "1803:122:1"
						},
						{
							"body": {
								"nativeSrc": "1983:87:1",
								"nodeType": "YulBlock",
								"src": "1983:87:1",
								"statements": [
									{
										"nativeSrc": "1993:29:1",
										"nodeType": "YulAssignment",
										"src": "1993:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2015:6:1",
													"nodeType": "YulIdentifier",
													"src": "2015:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2002:12:1",
												"nodeType": "YulIdentifier",
												"src": "2002:12:1"
											},
											"nativeSrc": "2002:20:1",
											"nodeType": "YulFunctionCall",
											"src": "2002:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1993:5:1",
												"nodeType": "YulIdentifier",
												"src": "1993:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "2058:5:1",
													"nodeType": "YulIdentifier",
													"src": "2058:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "2031:26:1",
												"nodeType": "YulIdentifier",
												"src": "2031:26:1"
											},
											"nativeSrc": "2031:33:1",
											"nodeType": "YulFunctionCall",
											"src": "2031:33:1"
										},
										"nativeSrc": "2031:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "2031:33:1"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "1931:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "1961:6:1",
									"nodeType": "YulTypedName",
									"src": "1961:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "1969:3:1",
									"nodeType": "YulTypedName",
									"src": "1969:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "1977:5:1",
									"nodeType": "YulTypedName",
									"src": "1977:5:1",
									"type": ""
								}
							],
							"src": "1931:139:1"
						},
						{
							"body": {
								"nativeSrc": "2121:32:1",
								"nodeType": "YulBlock",
								"src": "2121:32:1",
								"statements": [
									{
										"nativeSrc": "2131:16:1",
										"nodeType": "YulAssignment",
										"src": "2131:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "2142:5:1",
											"nodeType": "YulIdentifier",
											"src": "2142:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "2131:7:1",
												"nodeType": "YulIdentifier",
												"src": "2131:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "2076:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2103:5:1",
									"nodeType": "YulTypedName",
									"src": "2103:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "2113:7:1",
									"nodeType": "YulTypedName",
									"src": "2113:7:1",
									"type": ""
								}
							],
							"src": "2076:77:1"
						},
						{
							"body": {
								"nativeSrc": "2202:79:1",
								"nodeType": "YulBlock",
								"src": "2202:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2259:16:1",
											"nodeType": "YulBlock",
											"src": "2259:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2268:1:1",
																"nodeType": "YulLiteral",
																"src": "2268:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2271:1:1",
																"nodeType": "YulLiteral",
																"src": "2271:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2261:6:1",
															"nodeType": "YulIdentifier",
															"src": "2261:6:1"
														},
														"nativeSrc": "2261:12:1",
														"nodeType": "YulFunctionCall",
														"src": "2261:12:1"
													},
													"nativeSrc": "2261:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "2261:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "2225:5:1",
															"nodeType": "YulIdentifier",
															"src": "2225:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "2250:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2250:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "2232:17:1",
																"nodeType": "YulIdentifier",
																"src": "2232:17:1"
															},
															"nativeSrc": "2232:24:1",
															"nodeType": "YulFunctionCall",
															"src": "2232:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "2222:2:1",
														"nodeType": "YulIdentifier",
														"src": "2222:2:1"
													},
													"nativeSrc": "2222:35:1",
													"nodeType": "YulFunctionCall",
													"src": "2222:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2215:6:1",
												"nodeType": "YulIdentifier",
												"src": "2215:6:1"
											},
											"nativeSrc": "2215:43:1",
											"nodeType": "YulFunctionCall",
											"src": "2215:43:1"
										},
										"nativeSrc": "2212:63:1",
										"nodeType": "YulIf",
										"src": "2212:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "2159:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2195:5:1",
									"nodeType": "YulTypedName",
									"src": "2195:5:1",
									"type": ""
								}
							],
							"src": "2159:122:1"
						},
						{
							"body": {
								"nativeSrc": "2339:87:1",
								"nodeType": "YulBlock",
								"src": "2339:87:1",
								"statements": [
									{
										"nativeSrc": "2349:29:1",
										"nodeType": "YulAssignment",
										"src": "2349:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2371:6:1",
													"nodeType": "YulIdentifier",
													"src": "2371:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2358:12:1",
												"nodeType": "YulIdentifier",
												"src": "2358:12:1"
											},
											"nativeSrc": "2358:20:1",
											"nodeType": "YulFunctionCall",
											"src": "2358:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "2349:5:1",
												"nodeType": "YulIdentifier",
												"src": "2349:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "2414:5:1",
													"nodeType": "YulIdentifier",
													"src": "2414:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2387:26:1",
												"nodeType": "YulIdentifier",
												"src": "2387:26:1"
											},
											"nativeSrc": "2387:33:1",
											"nodeType": "YulFunctionCall",
											"src": "2387:33:1"
										},
										"nativeSrc": "2387:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "2387:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256",
							"nativeSrc": "2287:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "2317:6:1",
									"nodeType": "YulTypedName",
									"src": "2317:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2325:3:1",
									"nodeType": "YulTypedName",
									"src": "2325:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "2333:5:1",
									"nodeType": "YulTypedName",
									"src": "2333:5:1",
									"type": ""
								}
							],
							"src": "2287:139:1"
						},
						{
							"body": {
								"nativeSrc": "2515:391:1",
								"nodeType": "YulBlock",
								"src": "2515:391:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2561:83:1",
											"nodeType": "YulBlock",
											"src": "2561:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "2563:77:1",
															"nodeType": "YulIdentifier",
															"src": "2563:77:1"
														},
														"nativeSrc": "2563:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2563:79:1"
													},
													"nativeSrc": "2563:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2563:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2536:7:1",
															"nodeType": "YulIdentifier",
															"src": "2536:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "2545:9:1",
															"nodeType": "YulIdentifier",
															"src": "2545:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2532:3:1",
														"nodeType": "YulIdentifier",
														"src": "2532:3:1"
													},
													"nativeSrc": "2532:23:1",
													"nodeType": "YulFunctionCall",
													"src": "2532:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2557:2:1",
													"nodeType": "YulLiteral",
													"src": "2557:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2528:3:1",
												"nodeType": "YulIdentifier",
												"src": "2528:3:1"
											},
											"nativeSrc": "2528:32:1",
											"nodeType": "YulFunctionCall",
											"src": "2528:32:1"
										},
										"nativeSrc": "2525:119:1",
										"nodeType": "YulIf",
										"src": "2525:119:1"
									},
									{
										"nativeSrc": "2654:117:1",
										"nodeType": "YulBlock",
										"src": "2654:117:1",
										"statements": [
											{
												"nativeSrc": "2669:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "2669:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "2683:1:1",
													"nodeType": "YulLiteral",
													"src": "2683:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2673:6:1",
														"nodeType": "YulTypedName",
														"src": "2673:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2698:63:1",
												"nodeType": "YulAssignment",
												"src": "2698:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2733:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2733:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2744:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2729:3:1",
																"nodeType": "YulIdentifier",
																"src": "2729:3:1"
															},
															"nativeSrc": "2729:22:1",
															"nodeType": "YulFunctionCall",
															"src": "2729:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2753:7:1",
															"nodeType": "YulIdentifier",
															"src": "2753:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "2708:20:1",
														"nodeType": "YulIdentifier",
														"src": "2708:20:1"
													},
													"nativeSrc": "2708:53:1",
													"nodeType": "YulFunctionCall",
													"src": "2708:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "2698:6:1",
														"nodeType": "YulIdentifier",
														"src": "2698:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "2781:118:1",
										"nodeType": "YulBlock",
										"src": "2781:118:1",
										"statements": [
											{
												"nativeSrc": "2796:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "2796:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "2810:2:1",
													"nodeType": "YulLiteral",
													"src": "2810:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2800:6:1",
														"nodeType": "YulTypedName",
														"src": "2800:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2826:63:1",
												"nodeType": "YulAssignment",
												"src": "2826:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2861:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2861:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2872:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2857:3:1",
																"nodeType": "YulIdentifier",
																"src": "2857:3:1"
															},
															"nativeSrc": "2857:22:1",
															"nodeType": "YulFunctionCall",
															"src": "2857:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2881:7:1",
															"nodeType": "YulIdentifier",
															"src": "2881:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "2836:20:1",
														"nodeType": "YulIdentifier",
														"src": "2836:20:1"
													},
													"nativeSrc": "2836:53:1",
													"nodeType": "YulFunctionCall",
													"src": "2836:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "2826:6:1",
														"nodeType": "YulIdentifier",
														"src": "2826:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nativeSrc": "2432:474:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2477:9:1",
									"nodeType": "YulTypedName",
									"src": "2477:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2488:7:1",
									"nodeType": "YulTypedName",
									"src": "2488:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2500:6:1",
									"nodeType": "YulTypedName",
									"src": "2500:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "2508:6:1",
									"nodeType": "YulTypedName",
									"src": "2508:6:1",
									"type": ""
								}
							],
							"src": "2432:474:1"
						},
						{
							"body": {
								"nativeSrc": "2954:48:1",
								"nodeType": "YulBlock",
								"src": "2954:48:1",
								"statements": [
									{
										"nativeSrc": "2964:32:1",
										"nodeType": "YulAssignment",
										"src": "2964:32:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "2989:5:1",
															"nodeType": "YulIdentifier",
															"src": "2989:5:1"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "2982:6:1",
														"nodeType": "YulIdentifier",
														"src": "2982:6:1"
													},
													"nativeSrc": "2982:13:1",
													"nodeType": "YulFunctionCall",
													"src": "2982:13:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2975:6:1",
												"nodeType": "YulIdentifier",
												"src": "2975:6:1"
											},
											"nativeSrc": "2975:21:1",
											"nodeType": "YulFunctionCall",
											"src": "2975:21:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "2964:7:1",
												"nodeType": "YulIdentifier",
												"src": "2964:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_bool",
							"nativeSrc": "2912:90:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2936:5:1",
									"nodeType": "YulTypedName",
									"src": "2936:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "2946:7:1",
									"nodeType": "YulTypedName",
									"src": "2946:7:1",
									"type": ""
								}
							],
							"src": "2912:90:1"
						},
						{
							"body": {
								"nativeSrc": "3067:50:1",
								"nodeType": "YulBlock",
								"src": "3067:50:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3084:3:1",
													"nodeType": "YulIdentifier",
													"src": "3084:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "3104:5:1",
															"nodeType": "YulIdentifier",
															"src": "3104:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_bool",
														"nativeSrc": "3089:14:1",
														"nodeType": "YulIdentifier",
														"src": "3089:14:1"
													},
													"nativeSrc": "3089:21:1",
													"nodeType": "YulFunctionCall",
													"src": "3089:21:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3077:6:1",
												"nodeType": "YulIdentifier",
												"src": "3077:6:1"
											},
											"nativeSrc": "3077:34:1",
											"nodeType": "YulFunctionCall",
											"src": "3077:34:1"
										},
										"nativeSrc": "3077:34:1",
										"nodeType": "YulExpressionStatement",
										"src": "3077:34:1"
									}
								]
							},
							"name": "abi_encode_t_bool_to_t_bool_fromStack",
							"nativeSrc": "3008:109:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "3055:5:1",
									"nodeType": "YulTypedName",
									"src": "3055:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "3062:3:1",
									"nodeType": "YulTypedName",
									"src": "3062:3:1",
									"type": ""
								}
							],
							"src": "3008:109:1"
						},
						{
							"body": {
								"nativeSrc": "3215:118:1",
								"nodeType": "YulBlock",
								"src": "3215:118:1",
								"statements": [
									{
										"nativeSrc": "3225:26:1",
										"nodeType": "YulAssignment",
										"src": "3225:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3237:9:1",
													"nodeType": "YulIdentifier",
													"src": "3237:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3248:2:1",
													"nodeType": "YulLiteral",
													"src": "3248:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3233:3:1",
												"nodeType": "YulIdentifier",
												"src": "3233:3:1"
											},
											"nativeSrc": "3233:18:1",
											"nodeType": "YulFunctionCall",
											"src": "3233:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3225:4:1",
												"nodeType": "YulIdentifier",
												"src": "3225:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "3299:6:1",
													"nodeType": "YulIdentifier",
													"src": "3299:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3312:9:1",
															"nodeType": "YulIdentifier",
															"src": "3312:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3323:1:1",
															"nodeType": "YulLiteral",
															"src": "3323:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3308:3:1",
														"nodeType": "YulIdentifier",
														"src": "3308:3:1"
													},
													"nativeSrc": "3308:17:1",
													"nodeType": "YulFunctionCall",
													"src": "3308:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3261:37:1",
												"nodeType": "YulIdentifier",
												"src": "3261:37:1"
											},
											"nativeSrc": "3261:65:1",
											"nodeType": "YulFunctionCall",
											"src": "3261:65:1"
										},
										"nativeSrc": "3261:65:1",
										"nodeType": "YulExpressionStatement",
										"src": "3261:65:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nativeSrc": "3123:210:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3187:9:1",
									"nodeType": "YulTypedName",
									"src": "3187:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3199:6:1",
									"nodeType": "YulTypedName",
									"src": "3199:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3210:4:1",
									"nodeType": "YulTypedName",
									"src": "3210:4:1",
									"type": ""
								}
							],
							"src": "3123:210:1"
						},
						{
							"body": {
								"nativeSrc": "3404:53:1",
								"nodeType": "YulBlock",
								"src": "3404:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3421:3:1",
													"nodeType": "YulIdentifier",
													"src": "3421:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "3444:5:1",
															"nodeType": "YulIdentifier",
															"src": "3444:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "3426:17:1",
														"nodeType": "YulIdentifier",
														"src": "3426:17:1"
													},
													"nativeSrc": "3426:24:1",
													"nodeType": "YulFunctionCall",
													"src": "3426:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3414:6:1",
												"nodeType": "YulIdentifier",
												"src": "3414:6:1"
											},
											"nativeSrc": "3414:37:1",
											"nodeType": "YulFunctionCall",
											"src": "3414:37:1"
										},
										"nativeSrc": "3414:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "3414:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "3339:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "3392:5:1",
									"nodeType": "YulTypedName",
									"src": "3392:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "3399:3:1",
									"nodeType": "YulTypedName",
									"src": "3399:3:1",
									"type": ""
								}
							],
							"src": "3339:118:1"
						},
						{
							"body": {
								"nativeSrc": "3561:124:1",
								"nodeType": "YulBlock",
								"src": "3561:124:1",
								"statements": [
									{
										"nativeSrc": "3571:26:1",
										"nodeType": "YulAssignment",
										"src": "3571:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3583:9:1",
													"nodeType": "YulIdentifier",
													"src": "3583:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3594:2:1",
													"nodeType": "YulLiteral",
													"src": "3594:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3579:3:1",
												"nodeType": "YulIdentifier",
												"src": "3579:3:1"
											},
											"nativeSrc": "3579:18:1",
											"nodeType": "YulFunctionCall",
											"src": "3579:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3571:4:1",
												"nodeType": "YulIdentifier",
												"src": "3571:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "3651:6:1",
													"nodeType": "YulIdentifier",
													"src": "3651:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3664:9:1",
															"nodeType": "YulIdentifier",
															"src": "3664:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3675:1:1",
															"nodeType": "YulLiteral",
															"src": "3675:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3660:3:1",
														"nodeType": "YulIdentifier",
														"src": "3660:3:1"
													},
													"nativeSrc": "3660:17:1",
													"nodeType": "YulFunctionCall",
													"src": "3660:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3607:43:1",
												"nodeType": "YulIdentifier",
												"src": "3607:43:1"
											},
											"nativeSrc": "3607:71:1",
											"nodeType": "YulFunctionCall",
											"src": "3607:71:1"
										},
										"nativeSrc": "3607:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "3607:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "3463:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3533:9:1",
									"nodeType": "YulTypedName",
									"src": "3533:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3545:6:1",
									"nodeType": "YulTypedName",
									"src": "3545:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3556:4:1",
									"nodeType": "YulTypedName",
									"src": "3556:4:1",
									"type": ""
								}
							],
							"src": "3463:222:1"
						},
						{
							"body": {
								"nativeSrc": "3791:519:1",
								"nodeType": "YulBlock",
								"src": "3791:519:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "3837:83:1",
											"nodeType": "YulBlock",
											"src": "3837:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "3839:77:1",
															"nodeType": "YulIdentifier",
															"src": "3839:77:1"
														},
														"nativeSrc": "3839:79:1",
														"nodeType": "YulFunctionCall",
														"src": "3839:79:1"
													},
													"nativeSrc": "3839:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "3839:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "3812:7:1",
															"nodeType": "YulIdentifier",
															"src": "3812:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3821:9:1",
															"nodeType": "YulIdentifier",
															"src": "3821:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3808:3:1",
														"nodeType": "YulIdentifier",
														"src": "3808:3:1"
													},
													"nativeSrc": "3808:23:1",
													"nodeType": "YulFunctionCall",
													"src": "3808:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3833:2:1",
													"nodeType": "YulLiteral",
													"src": "3833:2:1",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "3804:3:1",
												"nodeType": "YulIdentifier",
												"src": "3804:3:1"
											},
											"nativeSrc": "3804:32:1",
											"nodeType": "YulFunctionCall",
											"src": "3804:32:1"
										},
										"nativeSrc": "3801:119:1",
										"nodeType": "YulIf",
										"src": "3801:119:1"
									},
									{
										"nativeSrc": "3930:117:1",
										"nodeType": "YulBlock",
										"src": "3930:117:1",
										"statements": [
											{
												"nativeSrc": "3945:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "3945:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "3959:1:1",
													"nodeType": "YulLiteral",
													"src": "3959:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "3949:6:1",
														"nodeType": "YulTypedName",
														"src": "3949:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "3974:63:1",
												"nodeType": "YulAssignment",
												"src": "3974:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4009:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4009:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4020:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4005:3:1",
																"nodeType": "YulIdentifier",
																"src": "4005:3:1"
															},
															"nativeSrc": "4005:22:1",
															"nodeType": "YulFunctionCall",
															"src": "4005:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4029:7:1",
															"nodeType": "YulIdentifier",
															"src": "4029:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "3984:20:1",
														"nodeType": "YulIdentifier",
														"src": "3984:20:1"
													},
													"nativeSrc": "3984:53:1",
													"nodeType": "YulFunctionCall",
													"src": "3984:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "3974:6:1",
														"nodeType": "YulIdentifier",
														"src": "3974:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "4057:118:1",
										"nodeType": "YulBlock",
										"src": "4057:118:1",
										"statements": [
											{
												"nativeSrc": "4072:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "4072:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "4086:2:1",
													"nodeType": "YulLiteral",
													"src": "4086:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4076:6:1",
														"nodeType": "YulTypedName",
														"src": "4076:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "4102:63:1",
												"nodeType": "YulAssignment",
												"src": "4102:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4137:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4137:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4148:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4133:3:1",
																"nodeType": "YulIdentifier",
																"src": "4133:3:1"
															},
															"nativeSrc": "4133:22:1",
															"nodeType": "YulFunctionCall",
															"src": "4133:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4157:7:1",
															"nodeType": "YulIdentifier",
															"src": "4157:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "4112:20:1",
														"nodeType": "YulIdentifier",
														"src": "4112:20:1"
													},
													"nativeSrc": "4112:53:1",
													"nodeType": "YulFunctionCall",
													"src": "4112:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "4102:6:1",
														"nodeType": "YulIdentifier",
														"src": "4102:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "4185:118:1",
										"nodeType": "YulBlock",
										"src": "4185:118:1",
										"statements": [
											{
												"nativeSrc": "4200:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "4200:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "4214:2:1",
													"nodeType": "YulLiteral",
													"src": "4214:2:1",
													"type": "",
													"value": "64"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4204:6:1",
														"nodeType": "YulTypedName",
														"src": "4204:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "4230:63:1",
												"nodeType": "YulAssignment",
												"src": "4230:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4265:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4265:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4276:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4261:3:1",
																"nodeType": "YulIdentifier",
																"src": "4261:3:1"
															},
															"nativeSrc": "4261:22:1",
															"nodeType": "YulFunctionCall",
															"src": "4261:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4285:7:1",
															"nodeType": "YulIdentifier",
															"src": "4285:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "4240:20:1",
														"nodeType": "YulIdentifier",
														"src": "4240:20:1"
													},
													"nativeSrc": "4240:53:1",
													"nodeType": "YulFunctionCall",
													"src": "4240:53:1"
												},
												"variableNames": [
													{
														"name": "value2",
														"nativeSrc": "4230:6:1",
														"nodeType": "YulIdentifier",
														"src": "4230:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nativeSrc": "3691:619:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3745:9:1",
									"nodeType": "YulTypedName",
									"src": "3745:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "3756:7:1",
									"nodeType": "YulTypedName",
									"src": "3756:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "3768:6:1",
									"nodeType": "YulTypedName",
									"src": "3768:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3776:6:1",
									"nodeType": "YulTypedName",
									"src": "3776:6:1",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "3784:6:1",
									"nodeType": "YulTypedName",
									"src": "3784:6:1",
									"type": ""
								}
							],
							"src": "3691:619:1"
						},
						{
							"body": {
								"nativeSrc": "4359:43:1",
								"nodeType": "YulBlock",
								"src": "4359:43:1",
								"statements": [
									{
										"nativeSrc": "4369:27:1",
										"nodeType": "YulAssignment",
										"src": "4369:27:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "4384:5:1",
													"nodeType": "YulIdentifier",
													"src": "4384:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4391:4:1",
													"nodeType": "YulLiteral",
													"src": "4391:4:1",
													"type": "",
													"value": "0xff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "4380:3:1",
												"nodeType": "YulIdentifier",
												"src": "4380:3:1"
											},
											"nativeSrc": "4380:16:1",
											"nodeType": "YulFunctionCall",
											"src": "4380:16:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "4369:7:1",
												"nodeType": "YulIdentifier",
												"src": "4369:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint8",
							"nativeSrc": "4316:86:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "4341:5:1",
									"nodeType": "YulTypedName",
									"src": "4341:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "4351:7:1",
									"nodeType": "YulTypedName",
									"src": "4351:7:1",
									"type": ""
								}
							],
							"src": "4316:86:1"
						},
						{
							"body": {
								"nativeSrc": "4469:51:1",
								"nodeType": "YulBlock",
								"src": "4469:51:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4486:3:1",
													"nodeType": "YulIdentifier",
													"src": "4486:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "4507:5:1",
															"nodeType": "YulIdentifier",
															"src": "4507:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint8",
														"nativeSrc": "4491:15:1",
														"nodeType": "YulIdentifier",
														"src": "4491:15:1"
													},
													"nativeSrc": "4491:22:1",
													"nodeType": "YulFunctionCall",
													"src": "4491:22:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4479:6:1",
												"nodeType": "YulIdentifier",
												"src": "4479:6:1"
											},
											"nativeSrc": "4479:35:1",
											"nodeType": "YulFunctionCall",
											"src": "4479:35:1"
										},
										"nativeSrc": "4479:35:1",
										"nodeType": "YulExpressionStatement",
										"src": "4479:35:1"
									}
								]
							},
							"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
							"nativeSrc": "4408:112:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "4457:5:1",
									"nodeType": "YulTypedName",
									"src": "4457:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "4464:3:1",
									"nodeType": "YulTypedName",
									"src": "4464:3:1",
									"type": ""
								}
							],
							"src": "4408:112:1"
						},
						{
							"body": {
								"nativeSrc": "4620:120:1",
								"nodeType": "YulBlock",
								"src": "4620:120:1",
								"statements": [
									{
										"nativeSrc": "4630:26:1",
										"nodeType": "YulAssignment",
										"src": "4630:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4642:9:1",
													"nodeType": "YulIdentifier",
													"src": "4642:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4653:2:1",
													"nodeType": "YulLiteral",
													"src": "4653:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4638:3:1",
												"nodeType": "YulIdentifier",
												"src": "4638:3:1"
											},
											"nativeSrc": "4638:18:1",
											"nodeType": "YulFunctionCall",
											"src": "4638:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4630:4:1",
												"nodeType": "YulIdentifier",
												"src": "4630:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "4706:6:1",
													"nodeType": "YulIdentifier",
													"src": "4706:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "4719:9:1",
															"nodeType": "YulIdentifier",
															"src": "4719:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "4730:1:1",
															"nodeType": "YulLiteral",
															"src": "4730:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "4715:3:1",
														"nodeType": "YulIdentifier",
														"src": "4715:3:1"
													},
													"nativeSrc": "4715:17:1",
													"nodeType": "YulFunctionCall",
													"src": "4715:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4666:39:1",
												"nodeType": "YulIdentifier",
												"src": "4666:39:1"
											},
											"nativeSrc": "4666:67:1",
											"nodeType": "YulFunctionCall",
											"src": "4666:67:1"
										},
										"nativeSrc": "4666:67:1",
										"nodeType": "YulExpressionStatement",
										"src": "4666:67:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
							"nativeSrc": "4526:214:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4592:9:1",
									"nodeType": "YulTypedName",
									"src": "4592:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "4604:6:1",
									"nodeType": "YulTypedName",
									"src": "4604:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4615:4:1",
									"nodeType": "YulTypedName",
									"src": "4615:4:1",
									"type": ""
								}
							],
							"src": "4526:214:1"
						},
						{
							"body": {
								"nativeSrc": "4812:263:1",
								"nodeType": "YulBlock",
								"src": "4812:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "4858:83:1",
											"nodeType": "YulBlock",
											"src": "4858:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "4860:77:1",
															"nodeType": "YulIdentifier",
															"src": "4860:77:1"
														},
														"nativeSrc": "4860:79:1",
														"nodeType": "YulFunctionCall",
														"src": "4860:79:1"
													},
													"nativeSrc": "4860:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "4860:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "4833:7:1",
															"nodeType": "YulIdentifier",
															"src": "4833:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "4842:9:1",
															"nodeType": "YulIdentifier",
															"src": "4842:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4829:3:1",
														"nodeType": "YulIdentifier",
														"src": "4829:3:1"
													},
													"nativeSrc": "4829:23:1",
													"nodeType": "YulFunctionCall",
													"src": "4829:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4854:2:1",
													"nodeType": "YulLiteral",
													"src": "4854:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "4825:3:1",
												"nodeType": "YulIdentifier",
												"src": "4825:3:1"
											},
											"nativeSrc": "4825:32:1",
											"nodeType": "YulFunctionCall",
											"src": "4825:32:1"
										},
										"nativeSrc": "4822:119:1",
										"nodeType": "YulIf",
										"src": "4822:119:1"
									},
									{
										"nativeSrc": "4951:117:1",
										"nodeType": "YulBlock",
										"src": "4951:117:1",
										"statements": [
											{
												"nativeSrc": "4966:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "4966:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "4980:1:1",
													"nodeType": "YulLiteral",
													"src": "4980:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4970:6:1",
														"nodeType": "YulTypedName",
														"src": "4970:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "4995:63:1",
												"nodeType": "YulAssignment",
												"src": "4995:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5030:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5030:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5041:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5026:3:1",
																"nodeType": "YulIdentifier",
																"src": "5026:3:1"
															},
															"nativeSrc": "5026:22:1",
															"nodeType": "YulFunctionCall",
															"src": "5026:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5050:7:1",
															"nodeType": "YulIdentifier",
															"src": "5050:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "5005:20:1",
														"nodeType": "YulIdentifier",
														"src": "5005:20:1"
													},
													"nativeSrc": "5005:53:1",
													"nodeType": "YulFunctionCall",
													"src": "5005:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "4995:6:1",
														"nodeType": "YulIdentifier",
														"src": "4995:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "4746:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4782:9:1",
									"nodeType": "YulTypedName",
									"src": "4782:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "4793:7:1",
									"nodeType": "YulTypedName",
									"src": "4793:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "4805:6:1",
									"nodeType": "YulTypedName",
									"src": "4805:6:1",
									"type": ""
								}
							],
							"src": "4746:329:1"
						},
						{
							"body": {
								"nativeSrc": "5146:53:1",
								"nodeType": "YulBlock",
								"src": "5146:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5163:3:1",
													"nodeType": "YulIdentifier",
													"src": "5163:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5186:5:1",
															"nodeType": "YulIdentifier",
															"src": "5186:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nativeSrc": "5168:17:1",
														"nodeType": "YulIdentifier",
														"src": "5168:17:1"
													},
													"nativeSrc": "5168:24:1",
													"nodeType": "YulFunctionCall",
													"src": "5168:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5156:6:1",
												"nodeType": "YulIdentifier",
												"src": "5156:6:1"
											},
											"nativeSrc": "5156:37:1",
											"nodeType": "YulFunctionCall",
											"src": "5156:37:1"
										},
										"nativeSrc": "5156:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "5156:37:1"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nativeSrc": "5081:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5134:5:1",
									"nodeType": "YulTypedName",
									"src": "5134:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5141:3:1",
									"nodeType": "YulTypedName",
									"src": "5141:3:1",
									"type": ""
								}
							],
							"src": "5081:118:1"
						},
						{
							"body": {
								"nativeSrc": "5303:124:1",
								"nodeType": "YulBlock",
								"src": "5303:124:1",
								"statements": [
									{
										"nativeSrc": "5313:26:1",
										"nodeType": "YulAssignment",
										"src": "5313:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5325:9:1",
													"nodeType": "YulIdentifier",
													"src": "5325:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "5336:2:1",
													"nodeType": "YulLiteral",
													"src": "5336:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5321:3:1",
												"nodeType": "YulIdentifier",
												"src": "5321:3:1"
											},
											"nativeSrc": "5321:18:1",
											"nodeType": "YulFunctionCall",
											"src": "5321:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "5313:4:1",
												"nodeType": "YulIdentifier",
												"src": "5313:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "5393:6:1",
													"nodeType": "YulIdentifier",
													"src": "5393:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "5406:9:1",
															"nodeType": "YulIdentifier",
															"src": "5406:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "5417:1:1",
															"nodeType": "YulLiteral",
															"src": "5417:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5402:3:1",
														"nodeType": "YulIdentifier",
														"src": "5402:3:1"
													},
													"nativeSrc": "5402:17:1",
													"nodeType": "YulFunctionCall",
													"src": "5402:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5349:43:1",
												"nodeType": "YulIdentifier",
												"src": "5349:43:1"
											},
											"nativeSrc": "5349:71:1",
											"nodeType": "YulFunctionCall",
											"src": "5349:71:1"
										},
										"nativeSrc": "5349:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "5349:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "5205:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5275:9:1",
									"nodeType": "YulTypedName",
									"src": "5275:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "5287:6:1",
									"nodeType": "YulTypedName",
									"src": "5287:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "5298:4:1",
									"nodeType": "YulTypedName",
									"src": "5298:4:1",
									"type": ""
								}
							],
							"src": "5205:222:1"
						},
						{
							"body": {
								"nativeSrc": "5499:263:1",
								"nodeType": "YulBlock",
								"src": "5499:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "5545:83:1",
											"nodeType": "YulBlock",
											"src": "5545:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "5547:77:1",
															"nodeType": "YulIdentifier",
															"src": "5547:77:1"
														},
														"nativeSrc": "5547:79:1",
														"nodeType": "YulFunctionCall",
														"src": "5547:79:1"
													},
													"nativeSrc": "5547:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "5547:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "5520:7:1",
															"nodeType": "YulIdentifier",
															"src": "5520:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "5529:9:1",
															"nodeType": "YulIdentifier",
															"src": "5529:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "5516:3:1",
														"nodeType": "YulIdentifier",
														"src": "5516:3:1"
													},
													"nativeSrc": "5516:23:1",
													"nodeType": "YulFunctionCall",
													"src": "5516:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "5541:2:1",
													"nodeType": "YulLiteral",
													"src": "5541:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "5512:3:1",
												"nodeType": "YulIdentifier",
												"src": "5512:3:1"
											},
											"nativeSrc": "5512:32:1",
											"nodeType": "YulFunctionCall",
											"src": "5512:32:1"
										},
										"nativeSrc": "5509:119:1",
										"nodeType": "YulIf",
										"src": "5509:119:1"
									},
									{
										"nativeSrc": "5638:117:1",
										"nodeType": "YulBlock",
										"src": "5638:117:1",
										"statements": [
											{
												"nativeSrc": "5653:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "5653:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "5667:1:1",
													"nodeType": "YulLiteral",
													"src": "5667:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "5657:6:1",
														"nodeType": "YulTypedName",
														"src": "5657:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "5682:63:1",
												"nodeType": "YulAssignment",
												"src": "5682:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5717:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5717:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5728:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5728:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5713:3:1",
																"nodeType": "YulIdentifier",
																"src": "5713:3:1"
															},
															"nativeSrc": "5713:22:1",
															"nodeType": "YulFunctionCall",
															"src": "5713:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5737:7:1",
															"nodeType": "YulIdentifier",
															"src": "5737:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "5692:20:1",
														"nodeType": "YulIdentifier",
														"src": "5692:20:1"
													},
													"nativeSrc": "5692:53:1",
													"nodeType": "YulFunctionCall",
													"src": "5692:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "5682:6:1",
														"nodeType": "YulIdentifier",
														"src": "5682:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nativeSrc": "5433:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5469:9:1",
									"nodeType": "YulTypedName",
									"src": "5469:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "5480:7:1",
									"nodeType": "YulTypedName",
									"src": "5480:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "5492:6:1",
									"nodeType": "YulTypedName",
									"src": "5492:6:1",
									"type": ""
								}
							],
							"src": "5433:329:1"
						},
						{
							"body": {
								"nativeSrc": "5851:391:1",
								"nodeType": "YulBlock",
								"src": "5851:391:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "5897:83:1",
											"nodeType": "YulBlock",
											"src": "5897:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "5899:77:1",
															"nodeType": "YulIdentifier",
															"src": "5899:77:1"
														},
														"nativeSrc": "5899:79:1",
														"nodeType": "YulFunctionCall",
														"src": "5899:79:1"
													},
													"nativeSrc": "5899:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "5899:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "5872:7:1",
															"nodeType": "YulIdentifier",
															"src": "5872:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "5881:9:1",
															"nodeType": "YulIdentifier",
															"src": "5881:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "5868:3:1",
														"nodeType": "YulIdentifier",
														"src": "5868:3:1"
													},
													"nativeSrc": "5868:23:1",
													"nodeType": "YulFunctionCall",
													"src": "5868:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "5893:2:1",
													"nodeType": "YulLiteral",
													"src": "5893:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "5864:3:1",
												"nodeType": "YulIdentifier",
												"src": "5864:3:1"
											},
											"nativeSrc": "5864:32:1",
											"nodeType": "YulFunctionCall",
											"src": "5864:32:1"
										},
										"nativeSrc": "5861:119:1",
										"nodeType": "YulIf",
										"src": "5861:119:1"
									},
									{
										"nativeSrc": "5990:117:1",
										"nodeType": "YulBlock",
										"src": "5990:117:1",
										"statements": [
											{
												"nativeSrc": "6005:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "6005:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "6019:1:1",
													"nodeType": "YulLiteral",
													"src": "6019:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6009:6:1",
														"nodeType": "YulTypedName",
														"src": "6009:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6034:63:1",
												"nodeType": "YulAssignment",
												"src": "6034:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6069:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6069:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6080:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6080:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6065:3:1",
																"nodeType": "YulIdentifier",
																"src": "6065:3:1"
															},
															"nativeSrc": "6065:22:1",
															"nodeType": "YulFunctionCall",
															"src": "6065:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6089:7:1",
															"nodeType": "YulIdentifier",
															"src": "6089:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "6044:20:1",
														"nodeType": "YulIdentifier",
														"src": "6044:20:1"
													},
													"nativeSrc": "6044:53:1",
													"nodeType": "YulFunctionCall",
													"src": "6044:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "6034:6:1",
														"nodeType": "YulIdentifier",
														"src": "6034:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "6117:118:1",
										"nodeType": "YulBlock",
										"src": "6117:118:1",
										"statements": [
											{
												"nativeSrc": "6132:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "6132:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "6146:2:1",
													"nodeType": "YulLiteral",
													"src": "6146:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6136:6:1",
														"nodeType": "YulTypedName",
														"src": "6136:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6162:63:1",
												"nodeType": "YulAssignment",
												"src": "6162:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6197:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6197:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6208:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6193:3:1",
																"nodeType": "YulIdentifier",
																"src": "6193:3:1"
															},
															"nativeSrc": "6193:22:1",
															"nodeType": "YulFunctionCall",
															"src": "6193:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6217:7:1",
															"nodeType": "YulIdentifier",
															"src": "6217:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "6172:20:1",
														"nodeType": "YulIdentifier",
														"src": "6172:20:1"
													},
													"nativeSrc": "6172:53:1",
													"nodeType": "YulFunctionCall",
													"src": "6172:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "6162:6:1",
														"nodeType": "YulIdentifier",
														"src": "6162:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nativeSrc": "5768:474:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5813:9:1",
									"nodeType": "YulTypedName",
									"src": "5813:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "5824:7:1",
									"nodeType": "YulTypedName",
									"src": "5824:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "5836:6:1",
									"nodeType": "YulTypedName",
									"src": "5836:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "5844:6:1",
									"nodeType": "YulTypedName",
									"src": "5844:6:1",
									"type": ""
								}
							],
							"src": "5768:474:1"
						},
						{
							"body": {
								"nativeSrc": "6276:152:1",
								"nodeType": "YulBlock",
								"src": "6276:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6293:1:1",
													"nodeType": "YulLiteral",
													"src": "6293:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "6296:77:1",
													"nodeType": "YulLiteral",
													"src": "6296:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6286:6:1",
												"nodeType": "YulIdentifier",
												"src": "6286:6:1"
											},
											"nativeSrc": "6286:88:1",
											"nodeType": "YulFunctionCall",
											"src": "6286:88:1"
										},
										"nativeSrc": "6286:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "6286:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6390:1:1",
													"nodeType": "YulLiteral",
													"src": "6390:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "6393:4:1",
													"nodeType": "YulLiteral",
													"src": "6393:4:1",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6383:6:1",
												"nodeType": "YulIdentifier",
												"src": "6383:6:1"
											},
											"nativeSrc": "6383:15:1",
											"nodeType": "YulFunctionCall",
											"src": "6383:15:1"
										},
										"nativeSrc": "6383:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "6383:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6414:1:1",
													"nodeType": "YulLiteral",
													"src": "6414:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "6417:4:1",
													"nodeType": "YulLiteral",
													"src": "6417:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "6407:6:1",
												"nodeType": "YulIdentifier",
												"src": "6407:6:1"
											},
											"nativeSrc": "6407:15:1",
											"nodeType": "YulFunctionCall",
											"src": "6407:15:1"
										},
										"nativeSrc": "6407:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "6407:15:1"
									}
								]
							},
							"name": "panic_error_0x22",
							"nativeSrc": "6248:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "6248:180:1"
						},
						{
							"body": {
								"nativeSrc": "6485:269:1",
								"nodeType": "YulBlock",
								"src": "6485:269:1",
								"statements": [
									{
										"nativeSrc": "6495:22:1",
										"nodeType": "YulAssignment",
										"src": "6495:22:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "6509:4:1",
													"nodeType": "YulIdentifier",
													"src": "6509:4:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6515:1:1",
													"nodeType": "YulLiteral",
													"src": "6515:1:1",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "6505:3:1",
												"nodeType": "YulIdentifier",
												"src": "6505:3:1"
											},
											"nativeSrc": "6505:12:1",
											"nodeType": "YulFunctionCall",
											"src": "6505:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "6495:6:1",
												"nodeType": "YulIdentifier",
												"src": "6495:6:1"
											}
										]
									},
									{
										"nativeSrc": "6526:38:1",
										"nodeType": "YulVariableDeclaration",
										"src": "6526:38:1",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "6556:4:1",
													"nodeType": "YulIdentifier",
													"src": "6556:4:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6562:1:1",
													"nodeType": "YulLiteral",
													"src": "6562:1:1",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "6552:3:1",
												"nodeType": "YulIdentifier",
												"src": "6552:3:1"
											},
											"nativeSrc": "6552:12:1",
											"nodeType": "YulFunctionCall",
											"src": "6552:12:1"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "6530:18:1",
												"nodeType": "YulTypedName",
												"src": "6530:18:1",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "6603:51:1",
											"nodeType": "YulBlock",
											"src": "6603:51:1",
											"statements": [
												{
													"nativeSrc": "6617:27:1",
													"nodeType": "YulAssignment",
													"src": "6617:27:1",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "6631:6:1",
																"nodeType": "YulIdentifier",
																"src": "6631:6:1"
															},
															{
																"kind": "number",
																"nativeSrc": "6639:4:1",
																"nodeType": "YulLiteral",
																"src": "6639:4:1",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "6627:3:1",
															"nodeType": "YulIdentifier",
															"src": "6627:3:1"
														},
														"nativeSrc": "6627:17:1",
														"nodeType": "YulFunctionCall",
														"src": "6627:17:1"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "6617:6:1",
															"nodeType": "YulIdentifier",
															"src": "6617:6:1"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "6583:18:1",
													"nodeType": "YulIdentifier",
													"src": "6583:18:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "6576:6:1",
												"nodeType": "YulIdentifier",
												"src": "6576:6:1"
											},
											"nativeSrc": "6576:26:1",
											"nodeType": "YulFunctionCall",
											"src": "6576:26:1"
										},
										"nativeSrc": "6573:81:1",
										"nodeType": "YulIf",
										"src": "6573:81:1"
									},
									{
										"body": {
											"nativeSrc": "6706:42:1",
											"nodeType": "YulBlock",
											"src": "6706:42:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nativeSrc": "6720:16:1",
															"nodeType": "YulIdentifier",
															"src": "6720:16:1"
														},
														"nativeSrc": "6720:18:1",
														"nodeType": "YulFunctionCall",
														"src": "6720:18:1"
													},
													"nativeSrc": "6720:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "6720:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "6670:18:1",
													"nodeType": "YulIdentifier",
													"src": "6670:18:1"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "6693:6:1",
															"nodeType": "YulIdentifier",
															"src": "6693:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6701:2:1",
															"nodeType": "YulLiteral",
															"src": "6701:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "6690:2:1",
														"nodeType": "YulIdentifier",
														"src": "6690:2:1"
													},
													"nativeSrc": "6690:14:1",
													"nodeType": "YulFunctionCall",
													"src": "6690:14:1"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "6667:2:1",
												"nodeType": "YulIdentifier",
												"src": "6667:2:1"
											},
											"nativeSrc": "6667:38:1",
											"nodeType": "YulFunctionCall",
											"src": "6667:38:1"
										},
										"nativeSrc": "6664:84:1",
										"nodeType": "YulIf",
										"src": "6664:84:1"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "6434:320:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "6469:4:1",
									"nodeType": "YulTypedName",
									"src": "6469:4:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "6478:6:1",
									"nodeType": "YulTypedName",
									"src": "6478:6:1",
									"type": ""
								}
							],
							"src": "6434:320:1"
						},
						{
							"body": {
								"nativeSrc": "6866:59:1",
								"nodeType": "YulBlock",
								"src": "6866:59:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "6888:6:1",
															"nodeType": "YulIdentifier",
															"src": "6888:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6896:1:1",
															"nodeType": "YulLiteral",
															"src": "6896:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6884:3:1",
														"nodeType": "YulIdentifier",
														"src": "6884:3:1"
													},
													"nativeSrc": "6884:14:1",
													"nodeType": "YulFunctionCall",
													"src": "6884:14:1"
												},
												{
													"hexValue": "496e76616c69642061646472657373",
													"kind": "string",
													"nativeSrc": "6900:17:1",
													"nodeType": "YulLiteral",
													"src": "6900:17:1",
													"type": "",
													"value": "Invalid address"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6877:6:1",
												"nodeType": "YulIdentifier",
												"src": "6877:6:1"
											},
											"nativeSrc": "6877:41:1",
											"nodeType": "YulFunctionCall",
											"src": "6877:41:1"
										},
										"nativeSrc": "6877:41:1",
										"nodeType": "YulExpressionStatement",
										"src": "6877:41:1"
									}
								]
							},
							"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
							"nativeSrc": "6760:165:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "6858:6:1",
									"nodeType": "YulTypedName",
									"src": "6858:6:1",
									"type": ""
								}
							],
							"src": "6760:165:1"
						},
						{
							"body": {
								"nativeSrc": "7077:220:1",
								"nodeType": "YulBlock",
								"src": "7077:220:1",
								"statements": [
									{
										"nativeSrc": "7087:74:1",
										"nodeType": "YulAssignment",
										"src": "7087:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "7153:3:1",
													"nodeType": "YulIdentifier",
													"src": "7153:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "7158:2:1",
													"nodeType": "YulLiteral",
													"src": "7158:2:1",
													"type": "",
													"value": "15"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7094:58:1",
												"nodeType": "YulIdentifier",
												"src": "7094:58:1"
											},
											"nativeSrc": "7094:67:1",
											"nodeType": "YulFunctionCall",
											"src": "7094:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "7087:3:1",
												"nodeType": "YulIdentifier",
												"src": "7087:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "7259:3:1",
													"nodeType": "YulIdentifier",
													"src": "7259:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "7170:88:1",
												"nodeType": "YulIdentifier",
												"src": "7170:88:1"
											},
											"nativeSrc": "7170:93:1",
											"nodeType": "YulFunctionCall",
											"src": "7170:93:1"
										},
										"nativeSrc": "7170:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "7170:93:1"
									},
									{
										"nativeSrc": "7272:19:1",
										"nodeType": "YulAssignment",
										"src": "7272:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "7283:3:1",
													"nodeType": "YulIdentifier",
													"src": "7283:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "7288:2:1",
													"nodeType": "YulLiteral",
													"src": "7288:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7279:3:1",
												"nodeType": "YulIdentifier",
												"src": "7279:3:1"
											},
											"nativeSrc": "7279:12:1",
											"nodeType": "YulFunctionCall",
											"src": "7279:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "7272:3:1",
												"nodeType": "YulIdentifier",
												"src": "7272:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "6931:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "7065:3:1",
									"nodeType": "YulTypedName",
									"src": "7065:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "7073:3:1",
									"nodeType": "YulTypedName",
									"src": "7073:3:1",
									"type": ""
								}
							],
							"src": "6931:366:1"
						},
						{
							"body": {
								"nativeSrc": "7474:248:1",
								"nodeType": "YulBlock",
								"src": "7474:248:1",
								"statements": [
									{
										"nativeSrc": "7484:26:1",
										"nodeType": "YulAssignment",
										"src": "7484:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "7496:9:1",
													"nodeType": "YulIdentifier",
													"src": "7496:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "7507:2:1",
													"nodeType": "YulLiteral",
													"src": "7507:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7492:3:1",
												"nodeType": "YulIdentifier",
												"src": "7492:3:1"
											},
											"nativeSrc": "7492:18:1",
											"nodeType": "YulFunctionCall",
											"src": "7492:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "7484:4:1",
												"nodeType": "YulIdentifier",
												"src": "7484:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "7531:9:1",
															"nodeType": "YulIdentifier",
															"src": "7531:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "7542:1:1",
															"nodeType": "YulLiteral",
															"src": "7542:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7527:3:1",
														"nodeType": "YulIdentifier",
														"src": "7527:3:1"
													},
													"nativeSrc": "7527:17:1",
													"nodeType": "YulFunctionCall",
													"src": "7527:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "7550:4:1",
															"nodeType": "YulIdentifier",
															"src": "7550:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "7556:9:1",
															"nodeType": "YulIdentifier",
															"src": "7556:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "7546:3:1",
														"nodeType": "YulIdentifier",
														"src": "7546:3:1"
													},
													"nativeSrc": "7546:20:1",
													"nodeType": "YulFunctionCall",
													"src": "7546:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7520:6:1",
												"nodeType": "YulIdentifier",
												"src": "7520:6:1"
											},
											"nativeSrc": "7520:47:1",
											"nodeType": "YulFunctionCall",
											"src": "7520:47:1"
										},
										"nativeSrc": "7520:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "7520:47:1"
									},
									{
										"nativeSrc": "7576:139:1",
										"nodeType": "YulAssignment",
										"src": "7576:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "7710:4:1",
													"nodeType": "YulIdentifier",
													"src": "7710:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7584:124:1",
												"nodeType": "YulIdentifier",
												"src": "7584:124:1"
											},
											"nativeSrc": "7584:131:1",
											"nodeType": "YulFunctionCall",
											"src": "7584:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "7576:4:1",
												"nodeType": "YulIdentifier",
												"src": "7576:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "7303:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "7454:9:1",
									"nodeType": "YulTypedName",
									"src": "7454:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "7469:4:1",
									"nodeType": "YulTypedName",
									"src": "7469:4:1",
									"type": ""
								}
							],
							"src": "7303:419:1"
						},
						{
							"body": {
								"nativeSrc": "7834:64:1",
								"nodeType": "YulBlock",
								"src": "7834:64:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "7856:6:1",
															"nodeType": "YulIdentifier",
															"src": "7856:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "7864:1:1",
															"nodeType": "YulLiteral",
															"src": "7864:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7852:3:1",
														"nodeType": "YulIdentifier",
														"src": "7852:3:1"
													},
													"nativeSrc": "7852:14:1",
													"nodeType": "YulFunctionCall",
													"src": "7852:14:1"
												},
												{
													"hexValue": "496e73756666696369656e742062616c616e6365",
													"kind": "string",
													"nativeSrc": "7868:22:1",
													"nodeType": "YulLiteral",
													"src": "7868:22:1",
													"type": "",
													"value": "Insufficient balance"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7845:6:1",
												"nodeType": "YulIdentifier",
												"src": "7845:6:1"
											},
											"nativeSrc": "7845:46:1",
											"nodeType": "YulFunctionCall",
											"src": "7845:46:1"
										},
										"nativeSrc": "7845:46:1",
										"nodeType": "YulExpressionStatement",
										"src": "7845:46:1"
									}
								]
							},
							"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
							"nativeSrc": "7728:170:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "7826:6:1",
									"nodeType": "YulTypedName",
									"src": "7826:6:1",
									"type": ""
								}
							],
							"src": "7728:170:1"
						},
						{
							"body": {
								"nativeSrc": "8050:220:1",
								"nodeType": "YulBlock",
								"src": "8050:220:1",
								"statements": [
									{
										"nativeSrc": "8060:74:1",
										"nodeType": "YulAssignment",
										"src": "8060:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8126:3:1",
													"nodeType": "YulIdentifier",
													"src": "8126:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8131:2:1",
													"nodeType": "YulLiteral",
													"src": "8131:2:1",
													"type": "",
													"value": "20"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8067:58:1",
												"nodeType": "YulIdentifier",
												"src": "8067:58:1"
											},
											"nativeSrc": "8067:67:1",
											"nodeType": "YulFunctionCall",
											"src": "8067:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "8060:3:1",
												"nodeType": "YulIdentifier",
												"src": "8060:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8232:3:1",
													"nodeType": "YulIdentifier",
													"src": "8232:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "8143:88:1",
												"nodeType": "YulIdentifier",
												"src": "8143:88:1"
											},
											"nativeSrc": "8143:93:1",
											"nodeType": "YulFunctionCall",
											"src": "8143:93:1"
										},
										"nativeSrc": "8143:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "8143:93:1"
									},
									{
										"nativeSrc": "8245:19:1",
										"nodeType": "YulAssignment",
										"src": "8245:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8256:3:1",
													"nodeType": "YulIdentifier",
													"src": "8256:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8261:2:1",
													"nodeType": "YulLiteral",
													"src": "8261:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8252:3:1",
												"nodeType": "YulIdentifier",
												"src": "8252:3:1"
											},
											"nativeSrc": "8252:12:1",
											"nodeType": "YulFunctionCall",
											"src": "8252:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "8245:3:1",
												"nodeType": "YulIdentifier",
												"src": "8245:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "7904:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "8038:3:1",
									"nodeType": "YulTypedName",
									"src": "8038:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "8046:3:1",
									"nodeType": "YulTypedName",
									"src": "8046:3:1",
									"type": ""
								}
							],
							"src": "7904:366:1"
						},
						{
							"body": {
								"nativeSrc": "8447:248:1",
								"nodeType": "YulBlock",
								"src": "8447:248:1",
								"statements": [
									{
										"nativeSrc": "8457:26:1",
										"nodeType": "YulAssignment",
										"src": "8457:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "8469:9:1",
													"nodeType": "YulIdentifier",
													"src": "8469:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8480:2:1",
													"nodeType": "YulLiteral",
													"src": "8480:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8465:3:1",
												"nodeType": "YulIdentifier",
												"src": "8465:3:1"
											},
											"nativeSrc": "8465:18:1",
											"nodeType": "YulFunctionCall",
											"src": "8465:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "8457:4:1",
												"nodeType": "YulIdentifier",
												"src": "8457:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8504:9:1",
															"nodeType": "YulIdentifier",
															"src": "8504:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "8515:1:1",
															"nodeType": "YulLiteral",
															"src": "8515:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8500:3:1",
														"nodeType": "YulIdentifier",
														"src": "8500:3:1"
													},
													"nativeSrc": "8500:17:1",
													"nodeType": "YulFunctionCall",
													"src": "8500:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "8523:4:1",
															"nodeType": "YulIdentifier",
															"src": "8523:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "8529:9:1",
															"nodeType": "YulIdentifier",
															"src": "8529:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "8519:3:1",
														"nodeType": "YulIdentifier",
														"src": "8519:3:1"
													},
													"nativeSrc": "8519:20:1",
													"nodeType": "YulFunctionCall",
													"src": "8519:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8493:6:1",
												"nodeType": "YulIdentifier",
												"src": "8493:6:1"
											},
											"nativeSrc": "8493:47:1",
											"nodeType": "YulFunctionCall",
											"src": "8493:47:1"
										},
										"nativeSrc": "8493:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "8493:47:1"
									},
									{
										"nativeSrc": "8549:139:1",
										"nodeType": "YulAssignment",
										"src": "8549:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "8683:4:1",
													"nodeType": "YulIdentifier",
													"src": "8683:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8557:124:1",
												"nodeType": "YulIdentifier",
												"src": "8557:124:1"
											},
											"nativeSrc": "8557:131:1",
											"nodeType": "YulFunctionCall",
											"src": "8557:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "8549:4:1",
												"nodeType": "YulIdentifier",
												"src": "8549:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "8276:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "8427:9:1",
									"nodeType": "YulTypedName",
									"src": "8427:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "8442:4:1",
									"nodeType": "YulTypedName",
									"src": "8442:4:1",
									"type": ""
								}
							],
							"src": "8276:419:1"
						},
						{
							"body": {
								"nativeSrc": "8807:62:1",
								"nodeType": "YulBlock",
								"src": "8807:62:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "8829:6:1",
															"nodeType": "YulIdentifier",
															"src": "8829:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "8837:1:1",
															"nodeType": "YulLiteral",
															"src": "8837:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8825:3:1",
														"nodeType": "YulIdentifier",
														"src": "8825:3:1"
													},
													"nativeSrc": "8825:14:1",
													"nodeType": "YulFunctionCall",
													"src": "8825:14:1"
												},
												{
													"hexValue": "416c6c6f77616e6365206578636565646564",
													"kind": "string",
													"nativeSrc": "8841:20:1",
													"nodeType": "YulLiteral",
													"src": "8841:20:1",
													"type": "",
													"value": "Allowance exceeded"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8818:6:1",
												"nodeType": "YulIdentifier",
												"src": "8818:6:1"
											},
											"nativeSrc": "8818:44:1",
											"nodeType": "YulFunctionCall",
											"src": "8818:44:1"
										},
										"nativeSrc": "8818:44:1",
										"nodeType": "YulExpressionStatement",
										"src": "8818:44:1"
									}
								]
							},
							"name": "store_literal_in_memory_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027",
							"nativeSrc": "8701:168:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "8799:6:1",
									"nodeType": "YulTypedName",
									"src": "8799:6:1",
									"type": ""
								}
							],
							"src": "8701:168:1"
						},
						{
							"body": {
								"nativeSrc": "9021:220:1",
								"nodeType": "YulBlock",
								"src": "9021:220:1",
								"statements": [
									{
										"nativeSrc": "9031:74:1",
										"nodeType": "YulAssignment",
										"src": "9031:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9097:3:1",
													"nodeType": "YulIdentifier",
													"src": "9097:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9102:2:1",
													"nodeType": "YulLiteral",
													"src": "9102:2:1",
													"type": "",
													"value": "18"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9038:58:1",
												"nodeType": "YulIdentifier",
												"src": "9038:58:1"
											},
											"nativeSrc": "9038:67:1",
											"nodeType": "YulFunctionCall",
											"src": "9038:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "9031:3:1",
												"nodeType": "YulIdentifier",
												"src": "9031:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9203:3:1",
													"nodeType": "YulIdentifier",
													"src": "9203:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027",
												"nativeSrc": "9114:88:1",
												"nodeType": "YulIdentifier",
												"src": "9114:88:1"
											},
											"nativeSrc": "9114:93:1",
											"nodeType": "YulFunctionCall",
											"src": "9114:93:1"
										},
										"nativeSrc": "9114:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "9114:93:1"
									},
									{
										"nativeSrc": "9216:19:1",
										"nodeType": "YulAssignment",
										"src": "9216:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9227:3:1",
													"nodeType": "YulIdentifier",
													"src": "9227:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9232:2:1",
													"nodeType": "YulLiteral",
													"src": "9232:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9223:3:1",
												"nodeType": "YulIdentifier",
												"src": "9223:3:1"
											},
											"nativeSrc": "9223:12:1",
											"nodeType": "YulFunctionCall",
											"src": "9223:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "9216:3:1",
												"nodeType": "YulIdentifier",
												"src": "9216:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "8875:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "9009:3:1",
									"nodeType": "YulTypedName",
									"src": "9009:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "9017:3:1",
									"nodeType": "YulTypedName",
									"src": "9017:3:1",
									"type": ""
								}
							],
							"src": "8875:366:1"
						},
						{
							"body": {
								"nativeSrc": "9418:248:1",
								"nodeType": "YulBlock",
								"src": "9418:248:1",
								"statements": [
									{
										"nativeSrc": "9428:26:1",
										"nodeType": "YulAssignment",
										"src": "9428:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9440:9:1",
													"nodeType": "YulIdentifier",
													"src": "9440:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9451:2:1",
													"nodeType": "YulLiteral",
													"src": "9451:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9436:3:1",
												"nodeType": "YulIdentifier",
												"src": "9436:3:1"
											},
											"nativeSrc": "9436:18:1",
											"nodeType": "YulFunctionCall",
											"src": "9436:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9428:4:1",
												"nodeType": "YulIdentifier",
												"src": "9428:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9475:9:1",
															"nodeType": "YulIdentifier",
															"src": "9475:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "9486:1:1",
															"nodeType": "YulLiteral",
															"src": "9486:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9471:3:1",
														"nodeType": "YulIdentifier",
														"src": "9471:3:1"
													},
													"nativeSrc": "9471:17:1",
													"nodeType": "YulFunctionCall",
													"src": "9471:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "9494:4:1",
															"nodeType": "YulIdentifier",
															"src": "9494:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "9500:9:1",
															"nodeType": "YulIdentifier",
															"src": "9500:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "9490:3:1",
														"nodeType": "YulIdentifier",
														"src": "9490:3:1"
													},
													"nativeSrc": "9490:20:1",
													"nodeType": "YulFunctionCall",
													"src": "9490:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9464:6:1",
												"nodeType": "YulIdentifier",
												"src": "9464:6:1"
											},
											"nativeSrc": "9464:47:1",
											"nodeType": "YulFunctionCall",
											"src": "9464:47:1"
										},
										"nativeSrc": "9464:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "9464:47:1"
									},
									{
										"nativeSrc": "9520:139:1",
										"nodeType": "YulAssignment",
										"src": "9520:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "9654:4:1",
													"nodeType": "YulIdentifier",
													"src": "9654:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9528:124:1",
												"nodeType": "YulIdentifier",
												"src": "9528:124:1"
											},
											"nativeSrc": "9528:131:1",
											"nodeType": "YulFunctionCall",
											"src": "9528:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9520:4:1",
												"nodeType": "YulIdentifier",
												"src": "9520:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "9247:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9398:9:1",
									"nodeType": "YulTypedName",
									"src": "9398:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9413:4:1",
									"nodeType": "YulTypedName",
									"src": "9413:4:1",
									"type": ""
								}
							],
							"src": "9247:419:1"
						},
						{
							"body": {
								"nativeSrc": "9700:152:1",
								"nodeType": "YulBlock",
								"src": "9700:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "9717:1:1",
													"nodeType": "YulLiteral",
													"src": "9717:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "9720:77:1",
													"nodeType": "YulLiteral",
													"src": "9720:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9710:6:1",
												"nodeType": "YulIdentifier",
												"src": "9710:6:1"
											},
											"nativeSrc": "9710:88:1",
											"nodeType": "YulFunctionCall",
											"src": "9710:88:1"
										},
										"nativeSrc": "9710:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "9710:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "9814:1:1",
													"nodeType": "YulLiteral",
													"src": "9814:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "9817:4:1",
													"nodeType": "YulLiteral",
													"src": "9817:4:1",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9807:6:1",
												"nodeType": "YulIdentifier",
												"src": "9807:6:1"
											},
											"nativeSrc": "9807:15:1",
											"nodeType": "YulFunctionCall",
											"src": "9807:15:1"
										},
										"nativeSrc": "9807:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "9807:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "9838:1:1",
													"nodeType": "YulLiteral",
													"src": "9838:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "9841:4:1",
													"nodeType": "YulLiteral",
													"src": "9841:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "9831:6:1",
												"nodeType": "YulIdentifier",
												"src": "9831:6:1"
											},
											"nativeSrc": "9831:15:1",
											"nodeType": "YulFunctionCall",
											"src": "9831:15:1"
										},
										"nativeSrc": "9831:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "9831:15:1"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "9672:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "9672:180:1"
						},
						{
							"body": {
								"nativeSrc": "9903:149:1",
								"nodeType": "YulBlock",
								"src": "9903:149:1",
								"statements": [
									{
										"nativeSrc": "9913:25:1",
										"nodeType": "YulAssignment",
										"src": "9913:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "9936:1:1",
													"nodeType": "YulIdentifier",
													"src": "9936:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "9918:17:1",
												"nodeType": "YulIdentifier",
												"src": "9918:17:1"
											},
											"nativeSrc": "9918:20:1",
											"nodeType": "YulFunctionCall",
											"src": "9918:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "9913:1:1",
												"nodeType": "YulIdentifier",
												"src": "9913:1:1"
											}
										]
									},
									{
										"nativeSrc": "9947:25:1",
										"nodeType": "YulAssignment",
										"src": "9947:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "9970:1:1",
													"nodeType": "YulIdentifier",
													"src": "9970:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "9952:17:1",
												"nodeType": "YulIdentifier",
												"src": "9952:17:1"
											},
											"nativeSrc": "9952:20:1",
											"nodeType": "YulFunctionCall",
											"src": "9952:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "9947:1:1",
												"nodeType": "YulIdentifier",
												"src": "9947:1:1"
											}
										]
									},
									{
										"nativeSrc": "9981:17:1",
										"nodeType": "YulAssignment",
										"src": "9981:17:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "9993:1:1",
													"nodeType": "YulIdentifier",
													"src": "9993:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "9996:1:1",
													"nodeType": "YulIdentifier",
													"src": "9996:1:1"
												}
											],
											"functionName": {
												"name": "sub",
												"nativeSrc": "9989:3:1",
												"nodeType": "YulIdentifier",
												"src": "9989:3:1"
											},
											"nativeSrc": "9989:9:1",
											"nodeType": "YulFunctionCall",
											"src": "9989:9:1"
										},
										"variableNames": [
											{
												"name": "diff",
												"nativeSrc": "9981:4:1",
												"nodeType": "YulIdentifier",
												"src": "9981:4:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "10023:22:1",
											"nodeType": "YulBlock",
											"src": "10023:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "10025:16:1",
															"nodeType": "YulIdentifier",
															"src": "10025:16:1"
														},
														"nativeSrc": "10025:18:1",
														"nodeType": "YulFunctionCall",
														"src": "10025:18:1"
													},
													"nativeSrc": "10025:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "10025:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nativeSrc": "10014:4:1",
													"nodeType": "YulIdentifier",
													"src": "10014:4:1"
												},
												{
													"name": "x",
													"nativeSrc": "10020:1:1",
													"nodeType": "YulIdentifier",
													"src": "10020:1:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "10011:2:1",
												"nodeType": "YulIdentifier",
												"src": "10011:2:1"
											},
											"nativeSrc": "10011:11:1",
											"nodeType": "YulFunctionCall",
											"src": "10011:11:1"
										},
										"nativeSrc": "10008:37:1",
										"nodeType": "YulIf",
										"src": "10008:37:1"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nativeSrc": "9858:194:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "9889:1:1",
									"nodeType": "YulTypedName",
									"src": "9889:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "9892:1:1",
									"nodeType": "YulTypedName",
									"src": "9892:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nativeSrc": "9898:4:1",
									"nodeType": "YulTypedName",
									"src": "9898:4:1",
									"type": ""
								}
							],
							"src": "9858:194:1"
						},
						{
							"body": {
								"nativeSrc": "10102:147:1",
								"nodeType": "YulBlock",
								"src": "10102:147:1",
								"statements": [
									{
										"nativeSrc": "10112:25:1",
										"nodeType": "YulAssignment",
										"src": "10112:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10135:1:1",
													"nodeType": "YulIdentifier",
													"src": "10135:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "10117:17:1",
												"nodeType": "YulIdentifier",
												"src": "10117:17:1"
											},
											"nativeSrc": "10117:20:1",
											"nodeType": "YulFunctionCall",
											"src": "10117:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "10112:1:1",
												"nodeType": "YulIdentifier",
												"src": "10112:1:1"
											}
										]
									},
									{
										"nativeSrc": "10146:25:1",
										"nodeType": "YulAssignment",
										"src": "10146:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "10169:1:1",
													"nodeType": "YulIdentifier",
													"src": "10169:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "10151:17:1",
												"nodeType": "YulIdentifier",
												"src": "10151:17:1"
											},
											"nativeSrc": "10151:20:1",
											"nodeType": "YulFunctionCall",
											"src": "10151:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "10146:1:1",
												"nodeType": "YulIdentifier",
												"src": "10146:1:1"
											}
										]
									},
									{
										"nativeSrc": "10180:16:1",
										"nodeType": "YulAssignment",
										"src": "10180:16:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10191:1:1",
													"nodeType": "YulIdentifier",
													"src": "10191:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "10194:1:1",
													"nodeType": "YulIdentifier",
													"src": "10194:1:1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10187:3:1",
												"nodeType": "YulIdentifier",
												"src": "10187:3:1"
											},
											"nativeSrc": "10187:9:1",
											"nodeType": "YulFunctionCall",
											"src": "10187:9:1"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "10180:3:1",
												"nodeType": "YulIdentifier",
												"src": "10180:3:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "10220:22:1",
											"nodeType": "YulBlock",
											"src": "10220:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "10222:16:1",
															"nodeType": "YulIdentifier",
															"src": "10222:16:1"
														},
														"nativeSrc": "10222:18:1",
														"nodeType": "YulFunctionCall",
														"src": "10222:18:1"
													},
													"nativeSrc": "10222:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "10222:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10212:1:1",
													"nodeType": "YulIdentifier",
													"src": "10212:1:1"
												},
												{
													"name": "sum",
													"nativeSrc": "10215:3:1",
													"nodeType": "YulIdentifier",
													"src": "10215:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "10209:2:1",
												"nodeType": "YulIdentifier",
												"src": "10209:2:1"
											},
											"nativeSrc": "10209:10:1",
											"nodeType": "YulFunctionCall",
											"src": "10209:10:1"
										},
										"nativeSrc": "10206:36:1",
										"nodeType": "YulIf",
										"src": "10206:36:1"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "10058:191:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "10089:1:1",
									"nodeType": "YulTypedName",
									"src": "10089:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "10092:1:1",
									"nodeType": "YulTypedName",
									"src": "10092:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "10098:3:1",
									"nodeType": "YulTypedName",
									"src": "10098:3:1",
									"type": ""
								}
							],
							"src": "10058:191:1"
						},
						{
							"body": {
								"nativeSrc": "10303:362:1",
								"nodeType": "YulBlock",
								"src": "10303:362:1",
								"statements": [
									{
										"nativeSrc": "10313:25:1",
										"nodeType": "YulAssignment",
										"src": "10313:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10336:1:1",
													"nodeType": "YulIdentifier",
													"src": "10336:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "10318:17:1",
												"nodeType": "YulIdentifier",
												"src": "10318:17:1"
											},
											"nativeSrc": "10318:20:1",
											"nodeType": "YulFunctionCall",
											"src": "10318:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "10313:1:1",
												"nodeType": "YulIdentifier",
												"src": "10313:1:1"
											}
										]
									},
									{
										"nativeSrc": "10347:25:1",
										"nodeType": "YulAssignment",
										"src": "10347:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "10370:1:1",
													"nodeType": "YulIdentifier",
													"src": "10370:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "10352:17:1",
												"nodeType": "YulIdentifier",
												"src": "10352:17:1"
											},
											"nativeSrc": "10352:20:1",
											"nodeType": "YulFunctionCall",
											"src": "10352:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "10347:1:1",
												"nodeType": "YulIdentifier",
												"src": "10347:1:1"
											}
										]
									},
									{
										"nativeSrc": "10381:28:1",
										"nodeType": "YulVariableDeclaration",
										"src": "10381:28:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10404:1:1",
													"nodeType": "YulIdentifier",
													"src": "10404:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "10407:1:1",
													"nodeType": "YulIdentifier",
													"src": "10407:1:1"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "10400:3:1",
												"nodeType": "YulIdentifier",
												"src": "10400:3:1"
											},
											"nativeSrc": "10400:9:1",
											"nodeType": "YulFunctionCall",
											"src": "10400:9:1"
										},
										"variables": [
											{
												"name": "product_raw",
												"nativeSrc": "10385:11:1",
												"nodeType": "YulTypedName",
												"src": "10385:11:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "10418:41:1",
										"nodeType": "YulAssignment",
										"src": "10418:41:1",
										"value": {
											"arguments": [
												{
													"name": "product_raw",
													"nativeSrc": "10447:11:1",
													"nodeType": "YulIdentifier",
													"src": "10447:11:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "10429:17:1",
												"nodeType": "YulIdentifier",
												"src": "10429:17:1"
											},
											"nativeSrc": "10429:30:1",
											"nodeType": "YulFunctionCall",
											"src": "10429:30:1"
										},
										"variableNames": [
											{
												"name": "product",
												"nativeSrc": "10418:7:1",
												"nodeType": "YulIdentifier",
												"src": "10418:7:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "10636:22:1",
											"nodeType": "YulBlock",
											"src": "10636:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "10638:16:1",
															"nodeType": "YulIdentifier",
															"src": "10638:16:1"
														},
														"nativeSrc": "10638:18:1",
														"nodeType": "YulFunctionCall",
														"src": "10638:18:1"
													},
													"nativeSrc": "10638:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "10638:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "x",
																	"nativeSrc": "10569:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10569:1:1"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "10562:6:1",
																"nodeType": "YulIdentifier",
																"src": "10562:6:1"
															},
															"nativeSrc": "10562:9:1",
															"nodeType": "YulFunctionCall",
															"src": "10562:9:1"
														},
														{
															"arguments": [
																{
																	"name": "y",
																	"nativeSrc": "10592:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10592:1:1"
																},
																{
																	"arguments": [
																		{
																			"name": "product",
																			"nativeSrc": "10599:7:1",
																			"nodeType": "YulIdentifier",
																			"src": "10599:7:1"
																		},
																		{
																			"name": "x",
																			"nativeSrc": "10608:1:1",
																			"nodeType": "YulIdentifier",
																			"src": "10608:1:1"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nativeSrc": "10595:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10595:3:1"
																	},
																	"nativeSrc": "10595:15:1",
																	"nodeType": "YulFunctionCall",
																	"src": "10595:15:1"
																}
															],
															"functionName": {
																"name": "eq",
																"nativeSrc": "10589:2:1",
																"nodeType": "YulIdentifier",
																"src": "10589:2:1"
															},
															"nativeSrc": "10589:22:1",
															"nodeType": "YulFunctionCall",
															"src": "10589:22:1"
														}
													],
													"functionName": {
														"name": "or",
														"nativeSrc": "10542:2:1",
														"nodeType": "YulIdentifier",
														"src": "10542:2:1"
													},
													"nativeSrc": "10542:83:1",
													"nodeType": "YulFunctionCall",
													"src": "10542:83:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "10522:6:1",
												"nodeType": "YulIdentifier",
												"src": "10522:6:1"
											},
											"nativeSrc": "10522:113:1",
											"nodeType": "YulFunctionCall",
											"src": "10522:113:1"
										},
										"nativeSrc": "10519:139:1",
										"nodeType": "YulIf",
										"src": "10519:139:1"
									}
								]
							},
							"name": "checked_mul_t_uint256",
							"nativeSrc": "10255:410:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "10286:1:1",
									"nodeType": "YulTypedName",
									"src": "10286:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "10289:1:1",
									"nodeType": "YulTypedName",
									"src": "10289:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "product",
									"nativeSrc": "10295:7:1",
									"nodeType": "YulTypedName",
									"src": "10295:7:1",
									"type": ""
								}
							],
							"src": "10255:410:1"
						},
						{
							"body": {
								"nativeSrc": "10777:115:1",
								"nodeType": "YulBlock",
								"src": "10777:115:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "10799:6:1",
															"nodeType": "YulIdentifier",
															"src": "10799:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "10807:1:1",
															"nodeType": "YulLiteral",
															"src": "10807:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10795:3:1",
														"nodeType": "YulIdentifier",
														"src": "10795:3:1"
													},
													"nativeSrc": "10795:14:1",
													"nodeType": "YulFunctionCall",
													"src": "10795:14:1"
												},
												{
													"hexValue": "4f6e6c79206f776e65722063616e20706572666f726d20746869732061637469",
													"kind": "string",
													"nativeSrc": "10811:34:1",
													"nodeType": "YulLiteral",
													"src": "10811:34:1",
													"type": "",
													"value": "Only owner can perform this acti"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10788:6:1",
												"nodeType": "YulIdentifier",
												"src": "10788:6:1"
											},
											"nativeSrc": "10788:58:1",
											"nodeType": "YulFunctionCall",
											"src": "10788:58:1"
										},
										"nativeSrc": "10788:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "10788:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "10867:6:1",
															"nodeType": "YulIdentifier",
															"src": "10867:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "10875:2:1",
															"nodeType": "YulLiteral",
															"src": "10875:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10863:3:1",
														"nodeType": "YulIdentifier",
														"src": "10863:3:1"
													},
													"nativeSrc": "10863:15:1",
													"nodeType": "YulFunctionCall",
													"src": "10863:15:1"
												},
												{
													"hexValue": "6f6e",
													"kind": "string",
													"nativeSrc": "10880:4:1",
													"nodeType": "YulLiteral",
													"src": "10880:4:1",
													"type": "",
													"value": "on"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10856:6:1",
												"nodeType": "YulIdentifier",
												"src": "10856:6:1"
											},
											"nativeSrc": "10856:29:1",
											"nodeType": "YulFunctionCall",
											"src": "10856:29:1"
										},
										"nativeSrc": "10856:29:1",
										"nodeType": "YulExpressionStatement",
										"src": "10856:29:1"
									}
								]
							},
							"name": "store_literal_in_memory_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a",
							"nativeSrc": "10671:221:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "10769:6:1",
									"nodeType": "YulTypedName",
									"src": "10769:6:1",
									"type": ""
								}
							],
							"src": "10671:221:1"
						},
						{
							"body": {
								"nativeSrc": "11044:220:1",
								"nodeType": "YulBlock",
								"src": "11044:220:1",
								"statements": [
									{
										"nativeSrc": "11054:74:1",
										"nodeType": "YulAssignment",
										"src": "11054:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11120:3:1",
													"nodeType": "YulIdentifier",
													"src": "11120:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11125:2:1",
													"nodeType": "YulLiteral",
													"src": "11125:2:1",
													"type": "",
													"value": "34"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11061:58:1",
												"nodeType": "YulIdentifier",
												"src": "11061:58:1"
											},
											"nativeSrc": "11061:67:1",
											"nodeType": "YulFunctionCall",
											"src": "11061:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "11054:3:1",
												"nodeType": "YulIdentifier",
												"src": "11054:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11226:3:1",
													"nodeType": "YulIdentifier",
													"src": "11226:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a",
												"nativeSrc": "11137:88:1",
												"nodeType": "YulIdentifier",
												"src": "11137:88:1"
											},
											"nativeSrc": "11137:93:1",
											"nodeType": "YulFunctionCall",
											"src": "11137:93:1"
										},
										"nativeSrc": "11137:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "11137:93:1"
									},
									{
										"nativeSrc": "11239:19:1",
										"nodeType": "YulAssignment",
										"src": "11239:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11250:3:1",
													"nodeType": "YulIdentifier",
													"src": "11250:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11255:2:1",
													"nodeType": "YulLiteral",
													"src": "11255:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11246:3:1",
												"nodeType": "YulIdentifier",
												"src": "11246:3:1"
											},
											"nativeSrc": "11246:12:1",
											"nodeType": "YulFunctionCall",
											"src": "11246:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "11239:3:1",
												"nodeType": "YulIdentifier",
												"src": "11239:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "10898:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "11032:3:1",
									"nodeType": "YulTypedName",
									"src": "11032:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "11040:3:1",
									"nodeType": "YulTypedName",
									"src": "11040:3:1",
									"type": ""
								}
							],
							"src": "10898:366:1"
						},
						{
							"body": {
								"nativeSrc": "11441:248:1",
								"nodeType": "YulBlock",
								"src": "11441:248:1",
								"statements": [
									{
										"nativeSrc": "11451:26:1",
										"nodeType": "YulAssignment",
										"src": "11451:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "11463:9:1",
													"nodeType": "YulIdentifier",
													"src": "11463:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11474:2:1",
													"nodeType": "YulLiteral",
													"src": "11474:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11459:3:1",
												"nodeType": "YulIdentifier",
												"src": "11459:3:1"
											},
											"nativeSrc": "11459:18:1",
											"nodeType": "YulFunctionCall",
											"src": "11459:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11451:4:1",
												"nodeType": "YulIdentifier",
												"src": "11451:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "11498:9:1",
															"nodeType": "YulIdentifier",
															"src": "11498:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11509:1:1",
															"nodeType": "YulLiteral",
															"src": "11509:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11494:3:1",
														"nodeType": "YulIdentifier",
														"src": "11494:3:1"
													},
													"nativeSrc": "11494:17:1",
													"nodeType": "YulFunctionCall",
													"src": "11494:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "11517:4:1",
															"nodeType": "YulIdentifier",
															"src": "11517:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "11523:9:1",
															"nodeType": "YulIdentifier",
															"src": "11523:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "11513:3:1",
														"nodeType": "YulIdentifier",
														"src": "11513:3:1"
													},
													"nativeSrc": "11513:20:1",
													"nodeType": "YulFunctionCall",
													"src": "11513:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11487:6:1",
												"nodeType": "YulIdentifier",
												"src": "11487:6:1"
											},
											"nativeSrc": "11487:47:1",
											"nodeType": "YulFunctionCall",
											"src": "11487:47:1"
										},
										"nativeSrc": "11487:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "11487:47:1"
									},
									{
										"nativeSrc": "11543:139:1",
										"nodeType": "YulAssignment",
										"src": "11543:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "11677:4:1",
													"nodeType": "YulIdentifier",
													"src": "11677:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11551:124:1",
												"nodeType": "YulIdentifier",
												"src": "11551:124:1"
											},
											"nativeSrc": "11551:131:1",
											"nodeType": "YulFunctionCall",
											"src": "11551:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11543:4:1",
												"nodeType": "YulIdentifier",
												"src": "11543:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "11270:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "11421:9:1",
									"nodeType": "YulTypedName",
									"src": "11421:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "11436:4:1",
									"nodeType": "YulTypedName",
									"src": "11436:4:1",
									"type": ""
								}
							],
							"src": "11270:419:1"
						},
						{
							"body": {
								"nativeSrc": "11801:73:1",
								"nodeType": "YulBlock",
								"src": "11801:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "11823:6:1",
															"nodeType": "YulIdentifier",
															"src": "11823:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11831:1:1",
															"nodeType": "YulLiteral",
															"src": "11831:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11819:3:1",
														"nodeType": "YulIdentifier",
														"src": "11819:3:1"
													},
													"nativeSrc": "11819:14:1",
													"nodeType": "YulFunctionCall",
													"src": "11819:14:1"
												},
												{
													"hexValue": "4e6577206f776e657220697320746865207a65726f2061646472657373",
													"kind": "string",
													"nativeSrc": "11835:31:1",
													"nodeType": "YulLiteral",
													"src": "11835:31:1",
													"type": "",
													"value": "New owner is the zero address"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11812:6:1",
												"nodeType": "YulIdentifier",
												"src": "11812:6:1"
											},
											"nativeSrc": "11812:55:1",
											"nodeType": "YulFunctionCall",
											"src": "11812:55:1"
										},
										"nativeSrc": "11812:55:1",
										"nodeType": "YulExpressionStatement",
										"src": "11812:55:1"
									}
								]
							},
							"name": "store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
							"nativeSrc": "11695:179:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "11793:6:1",
									"nodeType": "YulTypedName",
									"src": "11793:6:1",
									"type": ""
								}
							],
							"src": "11695:179:1"
						},
						{
							"body": {
								"nativeSrc": "12026:220:1",
								"nodeType": "YulBlock",
								"src": "12026:220:1",
								"statements": [
									{
										"nativeSrc": "12036:74:1",
										"nodeType": "YulAssignment",
										"src": "12036:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12102:3:1",
													"nodeType": "YulIdentifier",
													"src": "12102:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12107:2:1",
													"nodeType": "YulLiteral",
													"src": "12107:2:1",
													"type": "",
													"value": "29"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12043:58:1",
												"nodeType": "YulIdentifier",
												"src": "12043:58:1"
											},
											"nativeSrc": "12043:67:1",
											"nodeType": "YulFunctionCall",
											"src": "12043:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "12036:3:1",
												"nodeType": "YulIdentifier",
												"src": "12036:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12208:3:1",
													"nodeType": "YulIdentifier",
													"src": "12208:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
												"nativeSrc": "12119:88:1",
												"nodeType": "YulIdentifier",
												"src": "12119:88:1"
											},
											"nativeSrc": "12119:93:1",
											"nodeType": "YulFunctionCall",
											"src": "12119:93:1"
										},
										"nativeSrc": "12119:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "12119:93:1"
									},
									{
										"nativeSrc": "12221:19:1",
										"nodeType": "YulAssignment",
										"src": "12221:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12232:3:1",
													"nodeType": "YulIdentifier",
													"src": "12232:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12237:2:1",
													"nodeType": "YulLiteral",
													"src": "12237:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12228:3:1",
												"nodeType": "YulIdentifier",
												"src": "12228:3:1"
											},
											"nativeSrc": "12228:12:1",
											"nodeType": "YulFunctionCall",
											"src": "12228:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "12221:3:1",
												"nodeType": "YulIdentifier",
												"src": "12221:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "11880:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "12014:3:1",
									"nodeType": "YulTypedName",
									"src": "12014:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "12022:3:1",
									"nodeType": "YulTypedName",
									"src": "12022:3:1",
									"type": ""
								}
							],
							"src": "11880:366:1"
						},
						{
							"body": {
								"nativeSrc": "12423:248:1",
								"nodeType": "YulBlock",
								"src": "12423:248:1",
								"statements": [
									{
										"nativeSrc": "12433:26:1",
										"nodeType": "YulAssignment",
										"src": "12433:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "12445:9:1",
													"nodeType": "YulIdentifier",
													"src": "12445:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12456:2:1",
													"nodeType": "YulLiteral",
													"src": "12456:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12441:3:1",
												"nodeType": "YulIdentifier",
												"src": "12441:3:1"
											},
											"nativeSrc": "12441:18:1",
											"nodeType": "YulFunctionCall",
											"src": "12441:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12433:4:1",
												"nodeType": "YulIdentifier",
												"src": "12433:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "12480:9:1",
															"nodeType": "YulIdentifier",
															"src": "12480:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "12491:1:1",
															"nodeType": "YulLiteral",
															"src": "12491:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "12476:3:1",
														"nodeType": "YulIdentifier",
														"src": "12476:3:1"
													},
													"nativeSrc": "12476:17:1",
													"nodeType": "YulFunctionCall",
													"src": "12476:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "12499:4:1",
															"nodeType": "YulIdentifier",
															"src": "12499:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "12505:9:1",
															"nodeType": "YulIdentifier",
															"src": "12505:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "12495:3:1",
														"nodeType": "YulIdentifier",
														"src": "12495:3:1"
													},
													"nativeSrc": "12495:20:1",
													"nodeType": "YulFunctionCall",
													"src": "12495:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12469:6:1",
												"nodeType": "YulIdentifier",
												"src": "12469:6:1"
											},
											"nativeSrc": "12469:47:1",
											"nodeType": "YulFunctionCall",
											"src": "12469:47:1"
										},
										"nativeSrc": "12469:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "12469:47:1"
									},
									{
										"nativeSrc": "12525:139:1",
										"nodeType": "YulAssignment",
										"src": "12525:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "12659:4:1",
													"nodeType": "YulIdentifier",
													"src": "12659:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12533:124:1",
												"nodeType": "YulIdentifier",
												"src": "12533:124:1"
											},
											"nativeSrc": "12533:131:1",
											"nodeType": "YulFunctionCall",
											"src": "12533:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12525:4:1",
												"nodeType": "YulIdentifier",
												"src": "12525:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "12252:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "12403:9:1",
									"nodeType": "YulTypedName",
									"src": "12403:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "12418:4:1",
									"nodeType": "YulTypedName",
									"src": "12418:4:1",
									"type": ""
								}
							],
							"src": "12252:419:1"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowance exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12965c5a04e4382415d38b7802f2e82c1d2e7cc8b8ef9ef51ff6c86060f08027_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can perform this acti\")\n\n        mstore(add(memPtr, 32), \"on\")\n\n    }\n\n    function abi_encode_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f119838411d03f59dc56d2faa2be2f82662af64cf32d1b0a28c14abed827920a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940(memPtr) {\n\n        mstore(add(memPtr, 0), \"New owner is the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xEE2BDD48 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF3E00728 EQ PUSH2 0x2F1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x347 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x392 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x375 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x9C4 PUSH1 0x1 PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x842 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x88C SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B8 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x903 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x903 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x991 SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA4 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9C4 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEDB DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xEE5 DUP2 DUP6 PUSH2 0xEA3 JUMP JUMPDEST SWAP4 POP PUSH2 0xEF5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF21 DUP2 DUP5 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF56 DUP3 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF66 DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP2 EQ PUSH2 0xF70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF81 DUP2 PUSH2 0xF5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF99 DUP2 PUSH2 0xF87 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB4 DUP2 PUSH2 0xF90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDD DUP6 DUP3 DUP7 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFEE DUP6 DUP3 DUP7 ADD PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100C DUP2 PUSH2 0xFF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH0 DUP4 ADD DUP5 PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1034 DUP2 PUSH2 0xF87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104D PUSH0 DUP4 ADD DUP5 PUSH2 0x102B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x106A JUMPI PUSH2 0x1069 PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1077 DUP7 DUP3 DUP8 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1088 DUP7 DUP3 DUP8 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1099 DUP7 DUP3 DUP8 ADD PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B8 DUP2 PUSH2 0x10A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x10AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EC JUMPI PUSH2 0x10EB PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F9 DUP5 DUP3 DUP6 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x110B DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1124 PUSH0 DUP4 ADD DUP5 PUSH2 0x1102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x114C DUP5 DUP3 DUP6 ADD PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116B JUMPI PUSH2 0x116A PUSH2 0xF29 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1178 DUP6 DUP3 DUP7 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1189 DUP6 DUP3 DUP7 ADD PUSH2 0xF73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11EA JUMPI PUSH2 0x11E9 PUSH2 0x1193 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 PUSH1 0xF DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x122F DUP3 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1251 DUP2 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128C PUSH1 0x14 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1297 DUP3 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12B9 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E63652065786365656465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F4 PUSH1 0x12 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x135F DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP PUSH2 0x136A DUP4 PUSH2 0xF87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x1328 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1392 DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP PUSH2 0x139D DUP4 PUSH2 0xF87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x1328 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13C5 DUP3 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP4 PUSH2 0xF87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13DE DUP2 PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x13F5 JUMPI PUSH2 0x13F4 PUSH2 0x1328 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20706572666F726D20746869732061637469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1456 PUSH1 0x22 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1461 DUP3 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1483 DUP2 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206F776E657220697320746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE PUSH1 0x1D DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C9 DUP3 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EB DUP2 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL AND STATICCALL 0xE3 0xC5 NUMBER 0xF9 DUP9 0xF9 BYTE 0x2E PUSH2 0x9B16 MUL 0x4F LOG4 0xBC COINBASE 0x2B JUMP 0xD0 GT 0xEC 0xE0 NOT SWAP7 SAR 0xED 0xB1 0xB0 0x2C PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
		"sourceMap": "57:3087:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;119:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1897:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;222:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2145:513;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;191:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;437:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;158:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2685:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1492:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;739:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2921:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;272:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;119:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1897:212::-;1964:12;2022:6;1988:9;:21;1998:10;1988:21;;;;;;;;;;;;;;;:31;2010:8;1988:31;;;;;;;;;;;;;;;:40;;;;2064:8;2043:38;;2052:10;2043:38;;;2074:6;2043:38;;;;;;:::i;:::-;;;;;;;;2098:4;2091:11;;1897:212;;;;:::o;222:26::-;;;;:::o;2145:513::-;2227:12;2276:1;2259:19;;:5;:19;;;;:40;;;;;2297:1;2282:17;;:3;:17;;;;2259:40;2251:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2357:6;2337:9;:16;2347:5;2337:16;;;;;;;;;;;;;;;;:26;;2329:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2438:6;2406:9;:16;2416:5;2406:16;;;;;;;;;;;;;;;:28;2423:10;2406:28;;;;;;;;;;;;;;;;:38;;2398:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2498:6;2478:9;:16;2488:5;2478:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;2532:6;2514:9;:14;2524:3;2514:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2580:6;2548:9;:16;2558:5;2548:16;;;;;;;;;;;;;;;:28;2565:10;2548:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;2618:3;2602:28;;2611:5;2602:28;;;2623:6;2602:28;;;;;;:::i;:::-;;;;;;;;2647:4;2640:11;;2145:513;;;;;:::o;191:25::-;;;;;;;;;;;;;:::o;437:79::-;511:5;409:4;319:1;477:31;;;;:::i;:::-;:39;;;;:::i;:::-;437:79;:::o;655:44::-;;;;;;;;;;;;;;;;;:::o;592:20::-;;;;;;;;;;;;;:::o;158:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2685:175::-;1399:5;;;;;;;;;;;1385:19;;:10;:19;;;1377:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2758:7:::1;2743:11;;:22;;;;;;;:::i;:::-;;;;;;;;2795:7;2775:9;:16;2785:5;;;;;;;;;;;2775:16;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;2838:5;;;;;;;;;;;2817:36;;2834:1;2817:36;;;2845:7;2817:36;;;;;;:::i;:::-;;;;;;;;2685:175:::0;:::o;1492:375::-;1555:12;1602:1;1587:17;;:3;:17;;;1579:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1667:6;1642:9;:21;1652:10;1642:21;;;;;;;;;;;;;;;;:31;;1634:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1742:6;1717:9;:21;1727:10;1717:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1776:6;1758:9;:14;1768:3;1758:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1827:3;1806:33;;1815:10;1806:33;;;1832:6;1806:33;;;;;;:::i;:::-;;;;;;;;1856:4;1849:11;;1492:375;;;;:::o;739:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;374:39::-;409:4;374:39;:::o;2921:221::-;1399:5;;;;;;;;;;;1385:19;;:10;:19;;;1377:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3021:1:::1;3001:22;;:8;:22;;::::0;2993:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:8;3072:37;;3093:5;;;;;;;;;;;3072:37;;;;;;;;;;;;3127:8;3119:5;;:16;;;;;;;;;;;;;;;;;;2921:221:::0;:::o;272:48::-;319:1;272:48;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:165::-;6900:17;6896:1;6888:6;6884:14;6877:41;6760:165;:::o;6931:366::-;7073:3;7094:67;7158:2;7153:3;7094:67;:::i;:::-;7087:74;;7170:93;7259:3;7170:93;:::i;:::-;7288:2;7283:3;7279:12;7272:19;;6931:366;;;:::o;7303:419::-;7469:4;7507:2;7496:9;7492:18;7484:26;;7556:9;7550:4;7546:20;7542:1;7531:9;7527:17;7520:47;7584:131;7710:4;7584:131;:::i;:::-;7576:139;;7303:419;;;:::o;7728:170::-;7868:22;7864:1;7856:6;7852:14;7845:46;7728:170;:::o;7904:366::-;8046:3;8067:67;8131:2;8126:3;8067:67;:::i;:::-;8060:74;;8143:93;8232:3;8143:93;:::i;:::-;8261:2;8256:3;8252:12;8245:19;;7904:366;;;:::o;8276:419::-;8442:4;8480:2;8469:9;8465:18;8457:26;;8529:9;8523:4;8519:20;8515:1;8504:9;8500:17;8493:47;8557:131;8683:4;8557:131;:::i;:::-;8549:139;;8276:419;;;:::o;8701:168::-;8841:20;8837:1;8829:6;8825:14;8818:44;8701:168;:::o;8875:366::-;9017:3;9038:67;9102:2;9097:3;9038:67;:::i;:::-;9031:74;;9114:93;9203:3;9114:93;:::i;:::-;9232:2;9227:3;9223:12;9216:19;;8875:366;;;:::o;9247:419::-;9413:4;9451:2;9440:9;9436:18;9428:26;;9500:9;9494:4;9490:20;9486:1;9475:9;9471:17;9464:47;9528:131;9654:4;9528:131;:::i;:::-;9520:139;;9247:419;;;:::o;9672:180::-;9720:77;9717:1;9710:88;9817:4;9814:1;9807:15;9841:4;9838:1;9831:15;9858:194;9898:4;9918:20;9936:1;9918:20;:::i;:::-;9913:25;;9952:20;9970:1;9952:20;:::i;:::-;9947:25;;9996:1;9993;9989:9;9981:17;;10020:1;10014:4;10011:11;10008:37;;;10025:18;;:::i;:::-;10008:37;9858:194;;;;:::o;10058:191::-;10098:3;10117:20;10135:1;10117:20;:::i;:::-;10112:25;;10151:20;10169:1;10151:20;:::i;:::-;10146:25;;10194:1;10191;10187:9;10180:16;;10215:3;10212:1;10209:10;10206:36;;;10222:18;;:::i;:::-;10206:36;10058:191;;;;:::o;10255:410::-;10295:7;10318:20;10336:1;10318:20;:::i;:::-;10313:25;;10352:20;10370:1;10352:20;:::i;:::-;10347:25;;10407:1;10404;10400:9;10429:30;10447:11;10429:30;:::i;:::-;10418:41;;10608:1;10599:7;10595:15;10592:1;10589:22;10569:1;10562:9;10542:83;10519:139;;10638:18;;:::i;:::-;10519:139;10303:362;10255:410;;;;:::o;10671:221::-;10811:34;10807:1;10799:6;10795:14;10788:58;10880:4;10875:2;10867:6;10863:15;10856:29;10671:221;:::o;10898:366::-;11040:3;11061:67;11125:2;11120:3;11061:67;:::i;:::-;11054:74;;11137:93;11226:3;11137:93;:::i;:::-;11255:2;11250:3;11246:12;11239:19;;10898:366;;;:::o;11270:419::-;11436:4;11474:2;11463:9;11459:18;11451:26;;11523:9;11517:4;11513:20;11509:1;11498:9;11494:17;11487:47;11551:131;11677:4;11551:131;:::i;:::-;11543:139;;11270:419;;;:::o;11695:179::-;11835:31;11831:1;11823:6;11819:14;11812:55;11695:179;:::o;11880:366::-;12022:3;12043:67;12107:2;12102:3;12043:67;:::i;:::-;12036:74;;12119:93;12208:3;12119:93;:::i;:::-;12237:2;12232:3;12228:12;12221:19;;11880:366;;;:::o;12252:419::-;12418:4;12456:2;12445:9;12441:18;12433:26;;12505:9;12499:4;12495:20;12491:1;12480:9;12476:17;12469:47;12533:131;12659:4;12533:131;:::i;:::-;12525:139;;12252:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract TerraReal {\\n    // P...\n  PUSH 40\t\t\tcontract TerraReal {\\n    // P...\n  MSTORE \t\t\tcontract TerraReal {\\n    // P...\n  PUSH 40\t\t\tstring public name = \"Terra Re...\n  MLOAD \t\t\tstring public name = \"Terra Re...\n  DUP1 \t\t\tstring public name = \"Terra Re...\n  PUSH 40\t\t\tstring public name = \"Terra Re...\n  ADD \t\t\tstring public name = \"Terra Re...\n  PUSH 40\t\t\tstring public name = \"Terra Re...\n  MSTORE \t\t\tstring public name = \"Terra Re...\n  DUP1 \t\t\tstring public name = \"Terra Re...\n  PUSH A\t\t\tstring public name = \"Terra Re...\n  DUP2 \t\t\tstring public name = \"Terra Re...\n  MSTORE \t\t\tstring public name = \"Terra Re...\n  PUSH 20\t\t\tstring public name = \"Terra Re...\n  ADD \t\t\tstring public name = \"Terra Re...\n  PUSH 5465727261205265616C00000000000000000000000000000000000000000000\t\t\tstring public name = \"Terra Re...\n  DUP2 \t\t\tstring public name = \"Terra Re...\n  MSTORE \t\t\tstring public name = \"Terra Re...\n  POP \t\t\tstring public name = \"Terra Re...\n  PUSH 0\t\t\tstring public name = \"Terra Re...\n  SWAP1 \t\t\tstring public name = \"Terra Re...\n  DUP2 \t\t\tstring public name = \"Terra Re...\n  PUSH [tag] 1\t\t\tstring public name = \"Terra Re...\n  SWAP2 \t\t\tstring public name = \"Terra Re...\n  SWAP1 \t\t\tstring public name = \"Terra Re...\n  PUSH [tag] 2\t\t\tstring public name = \"Terra Re...\n  JUMP \t\t\tstring public name = \"Terra Re...\ntag 1\t\t\tstring public name = \"Terra Re...\n  JUMPDEST \t\t\tstring public name = \"Terra Re...\n  POP \t\t\tstring public name = \"Terra Re...\n  PUSH 40\t\t\tstring public symbol = \"TR\"\n  MLOAD \t\t\tstring public symbol = \"TR\"\n  DUP1 \t\t\tstring public symbol = \"TR\"\n  PUSH 40\t\t\tstring public symbol = \"TR\"\n  ADD \t\t\tstring public symbol = \"TR\"\n  PUSH 40\t\t\tstring public symbol = \"TR\"\n  MSTORE \t\t\tstring public symbol = \"TR\"\n  DUP1 \t\t\tstring public symbol = \"TR\"\n  PUSH 2\t\t\tstring public symbol = \"TR\"\n  DUP2 \t\t\tstring public symbol = \"TR\"\n  MSTORE \t\t\tstring public symbol = \"TR\"\n  PUSH 20\t\t\tstring public symbol = \"TR\"\n  ADD \t\t\tstring public symbol = \"TR\"\n  PUSH 5452000000000000000000000000000000000000000000000000000000000000\t\t\tstring public symbol = \"TR\"\n  DUP2 \t\t\tstring public symbol = \"TR\"\n  MSTORE \t\t\tstring public symbol = \"TR\"\n  POP \t\t\tstring public symbol = \"TR\"\n  PUSH 1\t\t\tstring public symbol = \"TR\"\n  SWAP1 \t\t\tstring public symbol = \"TR\"\n  DUP2 \t\t\tstring public symbol = \"TR\"\n  PUSH [tag] 3\t\t\tstring public symbol = \"TR\"\n  SWAP2 \t\t\tstring public symbol = \"TR\"\n  SWAP1 \t\t\tstring public symbol = \"TR\"\n  PUSH [tag] 2\t\t\tstring public symbol = \"TR\"\n  JUMP \t\t\tstring public symbol = \"TR\"\ntag 3\t\t\tstring public symbol = \"TR\"\n  JUMPDEST \t\t\tstring public symbol = \"TR\"\n  POP \t\t\tstring public symbol = \"TR\"\n  PUSH 0\t\t\t0\n  PUSH 2\t\t\tuint8 public decimals = 0\n  PUSH 0\t\t\tuint8 public decimals = 0\n  PUSH 100\t\t\tuint8 public decimals = 0\n  EXP \t\t\tuint8 public decimals = 0\n  DUP2 \t\t\tuint8 public decimals = 0\n  SLOAD \t\t\tuint8 public decimals = 0\n  DUP2 \t\t\tuint8 public decimals = 0\n  PUSH FF\t\t\tuint8 public decimals = 0\n  MUL \t\t\tuint8 public decimals = 0\n  NOT \t\t\tuint8 public decimals = 0\n  AND \t\t\tuint8 public decimals = 0\n  SWAP1 \t\t\tuint8 public decimals = 0\n  DUP4 \t\t\tuint8 public decimals = 0\n  PUSH FF\t\t\tuint8 public decimals = 0\n  AND \t\t\tuint8 public decimals = 0\n  MUL \t\t\tuint8 public decimals = 0\n  OR \t\t\tuint8 public decimals = 0\n  SWAP1 \t\t\tuint8 public decimals = 0\n  SSTORE \t\t\tuint8 public decimals = 0\n  POP \t\t\tuint8 public decimals = 0\n  CALLVALUE \t\t\tconstructor() {\\n        total...\n  DUP1 \t\t\tconstructor() {\\n        total...\n  ISZERO \t\t\tconstructor() {\\n        total...\n  PUSH [tag] 4\t\t\tconstructor() {\\n        total...\n  JUMPI \t\t\tconstructor() {\\n        total...\n  PUSH 0\t\t\tconstructor() {\\n        total...\n  DUP1 \t\t\tconstructor() {\\n        total...\n  REVERT \t\t\tconstructor() {\\n        total...\ntag 4\t\t\tconstructor() {\\n        total...\n  JUMPDEST \t\t\tconstructor() {\\n        total...\n  POP \t\t\tconstructor() {\\n        total...\n  PUSH 2710\t\t\t10000\n  PUSH 9C4\t\t\t2500\n  PUSH 1\t\t\t1\n  PUSH [tag] 7\t\t\tsquareMetersPerToken * hectare...\n  SWAP2 \t\t\tsquareMetersPerToken * hectare...\n  SWAP1 \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 8\t\t\tsquareMetersPerToken * hectare...\n  JUMP \t\t\tsquareMetersPerToken * hectare...\ntag 7\t\t\tsquareMetersPerToken * hectare...\n  JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 9\t\t\tsquareMetersPerToken * hectare...\n  SWAP2 \t\t\tsquareMetersPerToken * hectare...\n  SWAP1 \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 8\t\t\tsquareMetersPerToken * hectare...\n  JUMP \t\t\tsquareMetersPerToken * hectare...\ntag 9\t\t\tsquareMetersPerToken * hectare...\n  JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n  PUSH 3\t\t\ttotalSupply\n  DUP2 \t\t\ttotalSupply = initialSupply\n  SWAP1 \t\t\ttotalSupply = initialSupply\n  SSTORE \t\t\ttotalSupply = initialSupply\n  POP \t\t\ttotalSupply = initialSupply\n  PUSH 2710\t\t\t10000\n  PUSH 9C4\t\t\t2500\n  PUSH 1\t\t\t1\n  PUSH [tag] 10\t\t\tsquareMetersPerToken * hectare...\n  SWAP2 \t\t\tsquareMetersPerToken * hectare...\n  SWAP1 \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 8\t\t\tsquareMetersPerToken * hectare...\n  JUMP \t\t\tsquareMetersPerToken * hectare...\ntag 10\t\t\tsquareMetersPerToken * hectare...\n  JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 11\t\t\tsquareMetersPerToken * hectare...\n  SWAP2 \t\t\tsquareMetersPerToken * hectare...\n  SWAP1 \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 8\t\t\tsquareMetersPerToken * hectare...\n  JUMP \t\t\tsquareMetersPerToken * hectare...\ntag 11\t\t\tsquareMetersPerToken * hectare...\n  JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n  PUSH 5\t\t\tbalanceOf\n  PUSH 0\t\t\tbalanceOf[msg.sender]\n  CALLER \t\t\tmsg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[msg.sender]\n  AND \t\t\tbalanceOf[msg.sender]\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[msg.sender]\n  AND \t\t\tbalanceOf[msg.sender]\n  DUP2 \t\t\tbalanceOf[msg.sender]\n  MSTORE \t\t\tbalanceOf[msg.sender]\n  PUSH 20\t\t\tbalanceOf[msg.sender]\n  ADD \t\t\tbalanceOf[msg.sender]\n  SWAP1 \t\t\tbalanceOf[msg.sender]\n  DUP2 \t\t\tbalanceOf[msg.sender]\n  MSTORE \t\t\tbalanceOf[msg.sender]\n  PUSH 20\t\t\tbalanceOf[msg.sender]\n  ADD \t\t\tbalanceOf[msg.sender]\n  PUSH 0\t\t\tbalanceOf[msg.sender]\n  KECCAK256 \t\t\tbalanceOf[msg.sender]\n  DUP2 \t\t\tbalanceOf[msg.sender] = initia...\n  SWAP1 \t\t\tbalanceOf[msg.sender] = initia...\n  SSTORE \t\t\tbalanceOf[msg.sender] = initia...\n  POP \t\t\tbalanceOf[msg.sender] = initia...\n  CALLER \t\t\tmsg.sender\n  PUSH 4\t\t\towner\n  PUSH 0\t\t\towner\n  PUSH 100\t\t\towner = msg.sender\n  EXP \t\t\towner = msg.sender\n  DUP2 \t\t\towner = msg.sender\n  SLOAD \t\t\towner = msg.sender\n  DUP2 \t\t\towner = msg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = msg.sender\n  MUL \t\t\towner = msg.sender\n  NOT \t\t\towner = msg.sender\n  AND \t\t\towner = msg.sender\n  SWAP1 \t\t\towner = msg.sender\n  DUP4 \t\t\towner = msg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = msg.sender\n  AND \t\t\towner = msg.sender\n  MUL \t\t\towner = msg.sender\n  OR \t\t\towner = msg.sender\n  SWAP1 \t\t\towner = msg.sender\n  SSTORE \t\t\towner = msg.sender\n  POP \t\t\towner = msg.sender\n  CALLER \t\t\tmsg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), msg.sende...\n  AND \t\t\tTransfer(address(0), msg.sende...\n  PUSH 0\t\t\t0\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), msg.sende...\n  AND \t\t\tTransfer(address(0), msg.sende...\n  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\tTransfer(address(0), msg.sende...\n  PUSH 2710\t\t\t10000\n  PUSH 9C4\t\t\t2500\n  PUSH 1\t\t\t1\n  PUSH [tag] 12\t\t\tsquareMetersPerToken * hectare...\n  SWAP2 \t\t\tsquareMetersPerToken * hectare...\n  SWAP1 \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 8\t\t\tsquareMetersPerToken * hectare...\n  JUMP \t\t\tsquareMetersPerToken * hectare...\ntag 12\t\t\tsquareMetersPerToken * hectare...\n  JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 13\t\t\tsquareMetersPerToken * hectare...\n  SWAP2 \t\t\tsquareMetersPerToken * hectare...\n  SWAP1 \t\t\tsquareMetersPerToken * hectare...\n  PUSH [tag] 8\t\t\tsquareMetersPerToken * hectare...\n  JUMP \t\t\tsquareMetersPerToken * hectare...\ntag 13\t\t\tsquareMetersPerToken * hectare...\n  JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n  PUSH 40\t\t\tTransfer(address(0), msg.sende...\n  MLOAD \t\t\tTransfer(address(0), msg.sende...\n  PUSH [tag] 14\t\t\tTransfer(address(0), msg.sende...\n  SWAP2 \t\t\tTransfer(address(0), msg.sende...\n  SWAP1 \t\t\tTransfer(address(0), msg.sende...\n  PUSH [tag] 15\t\t\tTransfer(address(0), msg.sende...\n  JUMP \t\t\tTransfer(address(0), msg.sende...\ntag 14\t\t\tTransfer(address(0), msg.sende...\n  JUMPDEST \t\t\tTransfer(address(0), msg.sende...\n  PUSH 40\t\t\tTransfer(address(0), msg.sende...\n  MLOAD \t\t\tTransfer(address(0), msg.sende...\n  DUP1 \t\t\tTransfer(address(0), msg.sende...\n  SWAP2 \t\t\tTransfer(address(0), msg.sende...\n  SUB \t\t\tTransfer(address(0), msg.sende...\n  SWAP1 \t\t\tTransfer(address(0), msg.sende...\n  LOG3 \t\t\tTransfer(address(0), msg.sende...\n  PUSH [tag] 16\t\t\tcontract TerraReal {\\n    // P...\n  JUMP \t\t\tcontract TerraReal {\\n    // P...\ntag 17\t\t\t-License-Identifier: MIT\\nprag...\n  JUMPDEST \t\t\t-License-Identifier: MIT\\nprag...\n  PUSH 0\t\t\tntract\n  DUP2 \t\t\tariab\n  MLOAD \t\t\tblic variabl\n  SWAP1 \t\t\t\\n    // Public variabl\n  POP \t\t\t\\n    // Public variabl\n  SWAP2 \t\t\t-License-Identifier: MIT\\nprag...\n  SWAP1 \t\t\t-License-Identifier: MIT\\nprag...\n  POP \t\t\t-License-Identifier: MIT\\nprag...\n  JUMP \t\t\t-License-Identifier: MIT\\nprag...\ntag 18\t\t\ten\\n    string public name = \"...\n  JUMPDEST \t\t\ten\\n    string public name = \"...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\tring public symbol = \"TR\";\\n  ...\n  PUSH 0\t\t\t \n  MSTORE \t\t\tl\";\\n    string public symbol ...\n  PUSH 41\t\t\t Con\n  PUSH 4\t\t\t \n  MSTORE \t\t\ty;\\n\\n    // Cons\n  PUSH 24\t\t\tubli\n  PUSH 0\t\t\t6\n  REVERT \t\t\t uint256 public\ntag 19\t\t\tuareMetersPerToken = 1; // Eac...\n  JUMPDEST \t\t\tuareMetersPerToken = 1; // Eac...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t 1 square meter of land\\n    u...\n  PUSH 0\t\t\tn\n  MSTORE \t\t\trepresents 1 square meter of l...\n  PUSH 22\t\t\t6 pu\n  PUSH 4\t\t\tt\n  MSTORE \t\t\t    uint256 pub\n  PUSH 24\t\t\tlSup\n  PUSH 0\t\t\tt\n  REVERT \t\t\tant initialSupp\ntag 20\t\t\tetersPerToken * hectares * 100...\n  JUMPDEST \t\t\tetersPerToken * hectares * 100...\n  PUSH 0\t\t\ting he\n  PUSH 2\t\t\t \n  DUP3 \t\t\t    \n  DIV \t\t\trs\\n\\n    // O\n  SWAP1 \t\t\tquare meters\\n\\n    // O\n  POP \t\t\tquare meters\\n\\n    // O\n  PUSH 1\t\t\t;\n  DUP3 \t\t\t own\n  AND \t\t\tblic owner;\\n\n  DUP1 \t\t\t to hold balances\\n\n  PUSH [tag] 44\t\t\t// Mapping to hold balances\\n ...\n  JUMPI \t\t\t// Mapping to hold balances\\n ...\n  PUSH 7F\t\t\t bal\n  DUP3 \t\t\t) publ\n  AND \t\t\tt256) public bala\n  SWAP2 \t\t\tess => uint256) public bala\n  POP \t\t\tess => uint256) public bala\ntag 44\t\t\t// Mapping to hold balances\\n ...\n  JUMPDEST \t\t\t// Mapping to hold balances\\n ...\n  PUSH 20\t\t\tes\n  DUP3 \t\t\ting(ad\n  LT \t\t\tapping(address\n  DUP2 \t\t\told allowances\\n   \n  SUB \t\t\to hold allowances\\n    mapping...\n  PUSH [tag] 45\t\t\tg to hold allowances\\n    mapp...\n  JUMPI \t\t\tg to hold allowances\\n    mapp...\n  PUSH [tag] 46\t\t\tess => uint256)) p\n  PUSH [tag] 19\t\t\tess => uint256)) p\n  JUMP \t\t\tess => uint256)) p\ntag 46\t\t\tess => uint256)) p\n  JUMPDEST \t\t\tess => uint256)) p\ntag 45\t\t\tg to hold allowances\\n    mapp...\n  JUMPDEST \t\t\tg to hold allowances\\n    mapp...\n  POP \t\t\ttares to square meters\\n\\n    ...\n  SWAP2 \t\t\tetersPerToken * hectares * 100...\n  SWAP1 \t\t\tetersPerToken * hectares * 100...\n  POP \t\t\tetersPerToken * hectares * 100...\n  JUMP \t\t\tetersPerToken * hectares * 100...\ntag 21\t\t\t// Events\\n    event Transfer(...\n  JUMPDEST \t\t\t// Events\\n    event Transfer(...\n  PUSH 0\t\t\t, ad\n  DUP2 \t\t\tint\n  SWAP1 \t\t\ted to, uint\n  POP \t\t\ted to, uint\n  DUP2 \t\t\tt A\n  PUSH 0\t\t\tv\n  MSTORE \t\t\t;\\n    event Ap\n  PUSH 20\t\t\taddr\n  PUSH 0\t\t\tr\n  KECCAK256 \t\t\tdexed owner, addre\n  SWAP1 \t\t\tdress indexed owner, addre\n  POP \t\t\tdress indexed owner, addre\n  SWAP2 \t\t\t// Events\\n    event Transfer(...\n  SWAP1 \t\t\t// Events\\n    event Transfer(...\n  POP \t\t\t// Events\\n    event Transfer(...\n  JUMP \t\t\t// Events\\n    event Transfer(...\ntag 22\t\t\tender, uint256 value);\\n    ev...\n  JUMPDEST \t\t\tender, uint256 value);\\n    ev...\n  PUSH 0\t\t\trshipT\n  PUSH 20\t\t\t a\n  PUSH 1F\t\t\twn\n  DUP4 \t\t\teviou\n  ADD \t\t\td previousOwne\n  DIV \t\t\tdexed previousOwner, ad\n  SWAP1 \t\t\taddress indexed previousOwner,...\n  POP \t\t\taddress indexed previousOwner,...\n  SWAP2 \t\t\tender, uint256 value);\\n    ev...\n  SWAP1 \t\t\tender, uint256 value);\\n    ev...\n  POP \t\t\tender, uint256 value);\\n    ev...\n  JUMP \t\t\tender, uint256 value);\\n    ev...\ntag 23\t\t\td newOwner);\\n\\n    // Constru...\n  JUMPDEST \t\t\td newOwner);\\n\\n    // Constru...\n  PUSH 0\t\t\tctor() {\n  DUP3 \t\t\t    b\n  DUP3 \t\t\t;\\n  \n  SHL \t\t\tpply;\\n        ba\n  SWAP1 \t\t\ttalSupply = initialSupply;\\n  ...\n  POP \t\t\ttalSupply = initialSupply;\\n  ...\n  SWAP3 \t\t\td newOwner);\\n\\n    // Constru...\n  SWAP2 \t\t\td newOwner);\\n\\n    // Constru...\n  POP \t\t\td newOwner);\\n\\n    // Constru...\n  POP \t\t\td newOwner);\\n\\n    // Constru...\n  JUMP \t\t\td newOwner);\\n\\n    // Constru...\ntag 24\t\t\tender] = initialSupply;\\n     ...\n  JUMPDEST \t\t\tender] = initialSupply;\\n     ...\n  PUSH 0\t\t\tsfer(a\n  PUSH 8\t\t\t\\n\n  DUP4 \t\t\tpply);\\n   \n  MUL \t\t\talSupply);\\n    }\\n\\n\n  PUSH [tag] 51\t\t\teck if the caller is the owner...\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\\n    modifier onlyOwner() {\\n...\n  DUP3 \t\t\ts the own\n  PUSH [tag] 23\t\t\teck if the caller is the owner...\n  JUMP \t\t\teck if the caller is the owner...\ntag 51\t\t\teck if the caller is the owner...\n  JUMPDEST \t\t\teck if the caller is the owner...\n  PUSH [tag] 52\t\t\t this action\");\\n        _;\\n ...\n  DUP7 \t\t\t }\\n\\n    \n  DUP4 \t\t\t     _;\\n \n  PUSH [tag] 23\t\t\t this action\");\\n        _;\\n ...\n  JUMP \t\t\t this action\");\\n        _;\\n ...\ntag 52\t\t\t this action\");\\n        _;\\n ...\n  JUMPDEST \t\t\t this action\");\\n        _;\\n ...\n  SWAP6 \t\t\t can perform this action\");\\n ...\n  POP \t\t\t can perform this action\");\\n ...\n  DUP1 \t\t\ttran\n  NOT \t\t\tion trans\n  DUP5 \t\t\t  fun\n  AND \t\t\tn\\n    function transf\n  SWAP4 \t\t\tr function\\n    function trans...\n  POP \t\t\tr function\\n    function trans...\n  DUP1 \t\t\trns \n  DUP7 \t\t\tublic re\n  AND \t\t\te) public returns (\n  DUP5 \t\t\t6 _va\n  OR \t\t\tt256 _value) public returns (b\n  SWAP3 \t\t\ts _to, uint256 _value) public ...\n  POP \t\t\ts _to, uint256 _value) public ...\n  POP \t\t\tdress(0), msg.sender, initialS...\n  POP \t\t\tdress(0), msg.sender, initialS...\n  SWAP4 \t\t\tender] = initialSupply;\\n     ...\n  SWAP3 \t\t\tender] = initialSupply;\\n     ...\n  POP \t\t\tender] = initialSupply;\\n     ...\n  POP \t\t\tender] = initialSupply;\\n     ...\n  POP \t\t\tender] = initialSupply;\\n     ...\n  JUMP \t\t\tender] = initialSupply;\\n     ...\ntag 25\t\t\t {\\n        require(_to != add...\n  JUMPDEST \t\t\t {\\n        require(_to != add...\n  PUSH 0\t\t\t \"Inval\n  DUP2 \t\t\trequi\n  SWAP1 \t\t\t);\\n        requi\n  POP \t\t\t);\\n        requi\n  SWAP2 \t\t\t {\\n        require(_to != add...\n  SWAP1 \t\t\t {\\n        require(_to != add...\n  POP \t\t\t {\\n        require(_to != add...\n  JUMP \t\t\t {\\n        require(_to != add...\ntag 26\t\t\t[msg.sender] >= _value, \"Insuf...\n  JUMPDEST \t\t\t[msg.sender] >= _value, \"Insuf...\n  PUSH 0\t\t\tuff\n  DUP2 \t\t\t     \n  SWAP1 \t\t\tnce\");\\n     \n  POP \t\t\tnce\");\\n     \n  SWAP2 \t\t\t[msg.sender] >= _value, \"Insuf...\n  SWAP1 \t\t\t[msg.sender] >= _value, \"Insuf...\n  POP \t\t\t[msg.sender] >= _value, \"Insuf...\n  JUMP \t\t\t[msg.sender] >= _value, \"Insuf...\ntag 27\t\t\tbalanceOf[msg.sender] -= _valu...\n  JUMPDEST \t\t\tbalanceOf[msg.sender] -= _valu...\n  PUSH 0\t\t\t[_to] += \n  PUSH [tag] 56\t\t\t emit Transfer(msg.sender, _to...\n  PUSH [tag] 57\t\t\t.sender, _to, _value);\\n      ...\n  PUSH [tag] 58\t\t\t_to, _value);\\n        re\n  DUP5 \t\t\t    r\n  PUSH [tag] 25\t\t\t_to, _value);\\n        re\n  JUMP \t\t\t_to, _value);\\n        re\ntag 58\t\t\t_to, _value);\\n        re\n  JUMPDEST \t\t\t_to, _value);\\n        re\n  PUSH [tag] 26\t\t\t.sender, _to, _value);\\n      ...\n  JUMP \t\t\t.sender, _to, _value);\\n      ...\ntag 57\t\t\t.sender, _to, _value);\\n      ...\n  JUMPDEST \t\t\t.sender, _to, _value);\\n      ...\n  PUSH [tag] 25\t\t\t emit Transfer(msg.sender, _to...\n  JUMP \t\t\t emit Transfer(msg.sender, _to...\ntag 56\t\t\t emit Transfer(msg.sender, _to...\n  JUMPDEST \t\t\t emit Transfer(msg.sender, _to...\n  SWAP1 \t\t\t     \\n        emit Transfer(m...\n  POP \t\t\t     \\n        emit Transfer(m...\n  SWAP2 \t\t\tbalanceOf[msg.sender] -= _valu...\n  SWAP1 \t\t\tbalanceOf[msg.sender] -= _valu...\n  POP \t\t\tbalanceOf[msg.sender] -= _valu...\n  JUMP \t\t\tbalanceOf[msg.sender] -= _valu...\ntag 28\t\t\t }\\n\\n    // Approve function\\...\n  JUMPDEST \t\t\t }\\n\\n    // Approve function\\...\n  PUSH 0\t\t\tpro\n  DUP2 \t\t\tr, ui\n  SWAP1 \t\t\t_spender, ui\n  POP \t\t\t_spender, ui\n  SWAP2 \t\t\t }\\n\\n    // Approve function\\...\n  SWAP1 \t\t\t }\\n\\n    // Approve function\\...\n  POP \t\t\t }\\n\\n    // Approve function\\...\n  JUMP \t\t\t }\\n\\n    // Approve function\\...\ntag 29\t\t\t) public returns (bool success...\n  JUMPDEST \t\t\t) public returns (bool success...\n  PUSH [tag] 61\t\t\tsender, _spender, _value);\\n  ...\n  DUP4 \t\t\t    ret\n  PUSH [tag] 27\t\t\tsender, _spender, _value);\\n  ...\n  JUMP \t\t\tsender, _spender, _value);\\n  ...\ntag 61\t\t\tsender, _spender, _value);\\n  ...\n  JUMPDEST \t\t\tsender, _spender, _value);\\n  ...\n  PUSH [tag] 62\t\t\t Transfer from function\\n    f...\n  PUSH [tag] 63\t\t\t(address _from, address _to, u...\n  DUP3 \t\t\t_to, uint256 _va\n  PUSH [tag] 28\t\t\t(address _from, address _to, u...\n  JUMP \t\t\t(address _from, address _to, u...\ntag 63\t\t\t(address _from, address _to, u...\n  JUMPDEST \t\t\t(address _from, address _to, u...\n  DUP5 \t\t\tsferFr\n  DUP5 \t\t\ton t\n  SLOAD \t\t\tfunction tr\n  PUSH [tag] 24\t\t\t Transfer from function\\n    f...\n  JUMP \t\t\t Transfer from function\\n    f...\ntag 62\t\t\t Transfer from function\\n    f...\n  JUMPDEST \t\t\t Transfer from function\\n    f...\n  DUP3 \t\t\t    \n  SSTORE \t\t\t    }\\n\\n    // Transfer from ...\n  POP \t\t\t_value;\\n        emit Approval...\n  POP \t\t\t) public returns (bool success...\n  POP \t\t\t) public returns (bool success...\n  POP \t\t\t) public returns (bool success...\n  JUMP \t\t\t) public returns (bool success...\ntag 30\t\t\turns (bool success) {\\n       ...\n  JUMPDEST \t\t\turns (bool success) {\\n       ...\n  PUSH 0\t\t\t= a\n  SWAP1 \t\t\turns (bool success) {\\n       ...\n  JUMP \t\t\turns (bool success) {\\n       ...\ntag 31\t\t\t \"Invalid address\");\\n        ...\n  JUMPDEST \t\t\t \"Invalid address\");\\n        ...\n  PUSH [tag] 66\t\t\tt balance\");\\n        require(...\n  PUSH [tag] 30\t\t\tt balance\");\\n        require(...\n  JUMP \t\t\tt balance\");\\n        require(...\ntag 66\t\t\tt balance\");\\n        require(...\n  JUMPDEST \t\t\tt balance\");\\n        require(...\n  PUSH [tag] 67\t\t\trom][msg.sender] >= _value, \"A...\n  DUP2 \t\t\t  bala\n  DUP5 \t\t\t\\n\\n    \n  DUP5 \t\t\tded\"\n  PUSH [tag] 29\t\t\trom][msg.sender] >= _value, \"A...\n  JUMP \t\t\trom][msg.sender] >= _value, \"A...\ntag 67\t\t\trom][msg.sender] >= _value, \"A...\n  JUMPDEST \t\t\trom][msg.sender] >= _value, \"A...\n  POP \t\t\t >= _value, \"Insufficient bala...\n  POP \t\t\t \"Invalid address\");\\n        ...\n  POP \t\t\t \"Invalid address\");\\n        ...\n  JUMP \t\t\t \"Invalid address\");\\n        ...\ntag 32\t\t\t-= _value;\\n        balanceOf[...\n  JUMPDEST \t\t\t-= _value;\\n        balanceOf[...\ntag 69\t\t\tce[_from][msg.sender] -= _valu...\n  JUMPDEST \t\t\tce[_from][msg.sender] -= _valu...\n  DUP2 \t\t\tder\n  DUP2 \t\t\tmsg.s\n  LT \t\t\tm][msg.sender]\n  ISZERO \t\t\tce[_from][msg.sender] -= _valu...\n  PUSH [tag] 71\t\t\tce[_from][msg.sender] -= _valu...\n  JUMPI \t\t\tce[_from][msg.sender] -= _valu...\n  PUSH [tag] 72\t\t\tlue);\\n        return true;\\n ...\n  PUSH 0\t\t\t \n  DUP3 \t\t\t }\\n\\n \n  PUSH [tag] 31\t\t\tlue);\\n        return true;\\n ...\n  JUMP \t\t\tlue);\\n        return true;\\n ...\ntag 72\t\t\tlue);\\n        return true;\\n ...\n  JUMPDEST \t\t\tlue);\\n        return true;\\n ...\n  PUSH 1\t\t\ti\n  DUP2 \t\t\t     \n  ADD \t\t\t\\n        emit\n  SWAP1 \t\t\t _value;\\n\\n        emit\n  POP \t\t\t _value;\\n\\n        emit\n  PUSH [tag] 69\t\t\tce[_from][msg.sender] -= _valu...\n  JUMP \t\t\tce[_from][msg.sender] -= _valu...\ntag 71\t\t\tce[_from][msg.sender] -= _valu...\n  JUMPDEST \t\t\tce[_from][msg.sender] -= _valu...\n  POP \t\t\t-= _value;\\n        balanceOf[...\n  POP \t\t\t-= _value;\\n        balanceOf[...\n  JUMP \t\t\t-= _value;\\n        balanceOf[...\ntag 33\t\t\tnction mint(uint256 _amount) p...\n  JUMPDEST \t\t\tnction mint(uint256 _amount) p...\n  PUSH 1F\t\t\ter\n  DUP3 \t\t\tf[o\n  GT \t\t\tceOf[owner]\n  ISZERO \t\t\tlanceOf[owner] += _amount;\\n  ...\n  PUSH [tag] 74\t\t\tlanceOf[owner] += _amount;\\n  ...\n  JUMPI \t\t\tlanceOf[owner] += _amount;\\n  ...\n  PUSH [tag] 75\t\t\tfer(address(0), owner, _amount...\n  DUP2 \t\t\t\\n    \n  PUSH [tag] 21\t\t\tfer(address(0), owner, _amount...\n  JUMP \t\t\tfer(address(0), owner, _amount...\ntag 75\t\t\tfer(address(0), owner, _amount...\n  JUMPDEST \t\t\tfer(address(0), owner, _amount...\n  PUSH [tag] 76\t\t\tew address\\n    function trans\n  DUP5 \t\t\tction tran\n  PUSH [tag] 22\t\t\tew address\\n    function trans\n  JUMP \t\t\tew address\\n    function trans\ntag 76\t\t\tew address\\n    function trans\n  JUMPDEST \t\t\tew address\\n    function trans\n  DUP2 \t\t\thip to a\n  ADD \t\t\tnership to a new address\\n    ...\n  PUSH 20\t\t\tre\n  DUP6 \t\t\tshipTransf\n  LT \t\t\tnershipTransferred\n  ISZERO \t\t\t OwnershipTransferred(owner, n...\n  PUSH [tag] 77\t\t\t OwnershipTransferred(owner, n...\n  JUMPI \t\t\t OwnershipTransferred(owner, n...\n  DUP2 \t\t\t\\n       \n  SWAP1 \t\t\tner, newOwner);\\n       \n  POP \t\t\tner, newOwner);\\n       \ntag 77\t\t\t OwnershipTransferred(owner, n...\n  JUMPDEST \t\t\t OwnershipTransferred(owner, n...\n  PUSH [tag] 78\t\t\ter;\\n    }\\n}\n  PUSH [tag] 79\t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 22\t\t\t\n  JUMP \t\t\t\ntag 79\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 32\t\t\ter;\\n    }\\n}\n  JUMP \t\t\ter;\\n    }\\n}\ntag 78\t\t\ter;\\n    }\\n}\n  JUMPDEST \t\t\ter;\\n    }\\n}\n  POP \t\t\t+= _amount;\\n        emit Tran...\n  POP \t\t\t+= _amount;\\n        emit Tran...\ntag 74\t\t\tlanceOf[owner] += _amount;\\n  ...\n  JUMPDEST \t\t\tlanceOf[owner] += _amount;\\n  ...\n  POP \t\t\tnction mint(uint256 _amount) p...\n  POP \t\t\tnction mint(uint256 _amount) p...\n  POP \t\t\tnction mint(uint256 _amount) p...\n  JUMP \t\t\tnction mint(uint256 _amount) p...\ntag 34\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SHR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 35\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 82\t\t\t\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  DUP5 \t\t\t\n  PUSH 8\t\t\t\n  MUL \t\t\t\n  PUSH [tag] 34\t\t\t\n  JUMP \t\t\t\ntag 82\t\t\t\n  JUMPDEST \t\t\t\n  NOT \t\t\t\n  DUP1 \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 36\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 84\t\t\t\n  DUP4 \t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 35\t\t\t\n  JUMP \t\t\t\ntag 84\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  PUSH 2\t\t\t\n  MUL \t\t\t\n  DUP3 \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 2\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 86\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 17\t\t\t\n  JUMP \t\t\t\ntag 86\t\t\t\n  JUMPDEST \t\t\t\n  PUSH FFFFFFFFFFFFFFFF\t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 87\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 88\t\t\t\n  PUSH [tag] 18\t\t\t\n  JUMP \t\t\t\ntag 88\t\t\t\n  JUMPDEST \t\t\t\ntag 87\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 89\t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 20\t\t\t\n  JUMP \t\t\t\ntag 89\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 90\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 33\t\t\t\n  JUMP \t\t\t\ntag 90\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH 1F\t\t\t\n  DUP4 \t\t\t\n  GT \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 92\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP5 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 93\t\t\t\n  JUMPI \t\t\t\n  DUP3 \t\t\t\n  DUP8 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 93\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 94\t\t\t\n  DUP6 \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 36\t\t\t\n  JUMP \t\t\t\ntag 94\t\t\t\n  JUMPDEST \t\t\t\n  DUP7 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 92\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  DUP5 \t\t\t\n  AND \t\t\t\n  PUSH [tag] 95\t\t\t\n  DUP7 \t\t\t\n  PUSH [tag] 21\t\t\t\n  JUMP \t\t\t\ntag 95\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\ntag 96\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 98\t\t\t\n  JUMPI \t\t\t\n  DUP5 \t\t\t\n  DUP10 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  DUP3 \t\t\t\n  SSTORE \t\t\t\n  PUSH 1\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP6 \t\t\t\n  ADD \t\t\t\n  SWAP5 \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 96\t\t\t\n  JUMP \t\t\t\ntag 98\t\t\t\n  JUMPDEST \t\t\t\n  DUP7 \t\t\t\n  DUP4 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 99\t\t\t\n  JUMPI \t\t\t\n  DUP5 \t\t\t\n  DUP10 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 100\t\t\t\n  PUSH 1F\t\t\t\n  DUP10 \t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 35\t\t\t\n  JUMP \t\t\t\ntag 100\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\ntag 99\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 2\t\t\t\n  DUP9 \t\t\t\n  MUL \t\t\t\n  ADD \t\t\t\n  DUP9 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 91\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 37\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n  PUSH 0\t\t\t\n  MSTORE \t\t\t\n  PUSH 11\t\t\t\n  PUSH 4\t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 8\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 103\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 25\t\t\t\n  JUMP \t\t\t\ntag 103\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 104\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 25\t\t\t\n  JUMP \t\t\t\ntag 104\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  MUL \t\t\t\n  PUSH [tag] 105\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 25\t\t\t\n  JUMP \t\t\t\ntag 105\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  DIV \t\t\t\n  DUP5 \t\t\t\n  EQ \t\t\t\n  DUP4 \t\t\t\n  ISZERO \t\t\t\n  OR \t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 107\t\t\t\n  PUSH [tag] 37\t\t\t\n  JUMP \t\t\t\ntag 107\t\t\t\n  JUMPDEST \t\t\t\ntag 106\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 38\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 109\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 25\t\t\t\n  JUMP \t\t\t\ntag 109\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 15\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 111\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 38\t\t\t\n  JUMP \t\t\t\ntag 111\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 16\t\t\tcontract TerraReal {\\n    // P...\n  JUMPDEST \t\t\tcontract TerraReal {\\n    // P...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract TerraReal {\\n    // P...\n  DUP1 \t\t\tcontract TerraReal {\\n    // P...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract TerraReal {\\n    // P...\n  PUSH 0\t\t\tcontract TerraReal {\\n    // P...\n  CODECOPY \t\t\tcontract TerraReal {\\n    // P...\n  PUSH 0\t\t\tcontract TerraReal {\\n    // P...\n  RETURN \t\t\tcontract TerraReal {\\n    // P...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract TerraReal {\\n    // P...\n      PUSH 40\t\t\tcontract TerraReal {\\n    // P...\n      MSTORE \t\t\tcontract TerraReal {\\n    // P...\n      CALLVALUE \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      ISZERO \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 1\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 0\t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      REVERT \t\t\tcontract TerraReal {\\n    // P...\n    tag 1\t\t\tcontract TerraReal {\\n    // P...\n      JUMPDEST \t\t\tcontract TerraReal {\\n    // P...\n      POP \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 4\t\t\tcontract TerraReal {\\n    // P...\n      CALLDATASIZE \t\t\tcontract TerraReal {\\n    // P...\n      LT \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 2\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 0\t\t\tcontract TerraReal {\\n    // P...\n      CALLDATALOAD \t\t\tcontract TerraReal {\\n    // P...\n      PUSH E0\t\t\tcontract TerraReal {\\n    // P...\n      SHR \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 8DA5CB5B\t\t\tcontract TerraReal {\\n    // P...\n      GT \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 18\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH DD62ED3E\t\t\tcontract TerraReal {\\n    // P...\n      GT \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 19\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH DD62ED3E\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 14\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH EE2BDD48\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 15\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH F2FDE38B\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 16\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH F3E00728\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 17\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 2\t\t\tcontract TerraReal {\\n    // P...\n      JUMP \t\t\tcontract TerraReal {\\n    // P...\n    tag 19\t\t\tcontract TerraReal {\\n    // P...\n      JUMPDEST \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 8DA5CB5B\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 10\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 95D89B41\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 11\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH A0712D68\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 12\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH A9059CBB\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 13\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 2\t\t\tcontract TerraReal {\\n    // P...\n      JUMP \t\t\tcontract TerraReal {\\n    // P...\n    tag 18\t\t\tcontract TerraReal {\\n    // P...\n      JUMPDEST \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 23B872DD\t\t\tcontract TerraReal {\\n    // P...\n      GT \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 20\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 23B872DD\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 6\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 313CE567\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 7\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 378DC3DC\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 8\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 70A08231\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 9\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 2\t\t\tcontract TerraReal {\\n    // P...\n      JUMP \t\t\tcontract TerraReal {\\n    // P...\n    tag 20\t\t\tcontract TerraReal {\\n    // P...\n      JUMPDEST \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 6FDDE03\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 3\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 95EA7B3\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 4\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 18160DDD\t\t\tcontract TerraReal {\\n    // P...\n      EQ \t\t\tcontract TerraReal {\\n    // P...\n      PUSH [tag] 5\t\t\tcontract TerraReal {\\n    // P...\n      JUMPI \t\t\tcontract TerraReal {\\n    // P...\n    tag 2\t\t\tcontract TerraReal {\\n    // P...\n      JUMPDEST \t\t\tcontract TerraReal {\\n    // P...\n      PUSH 0\t\t\tcontract TerraReal {\\n    // P...\n      DUP1 \t\t\tcontract TerraReal {\\n    // P...\n      REVERT \t\t\tcontract TerraReal {\\n    // P...\n    tag 3\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 21\t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 22\t\t\tstring public name = \"Terra Re...\n      JUMP \t\t\tstring public name = \"Terra Re...\n    tag 21\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      PUSH 40\t\t\tstring public name = \"Terra Re...\n      MLOAD \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 23\t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 24\t\t\tstring public name = \"Terra Re...\n      JUMP \t\t\tstring public name = \"Terra Re...\n    tag 23\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      PUSH 40\t\t\tstring public name = \"Terra Re...\n      MLOAD \t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n      SUB \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      RETURN \t\t\tstring public name = \"Terra Re...\n    tag 4\t\t\tfunction approve(address _spen...\n      JUMPDEST \t\t\tfunction approve(address _spen...\n      PUSH [tag] 25\t\t\tfunction approve(address _spen...\n      PUSH 4\t\t\tfunction approve(address _spen...\n      DUP1 \t\t\tfunction approve(address _spen...\n      CALLDATASIZE \t\t\tfunction approve(address _spen...\n      SUB \t\t\tfunction approve(address _spen...\n      DUP2 \t\t\tfunction approve(address _spen...\n      ADD \t\t\tfunction approve(address _spen...\n      SWAP1 \t\t\tfunction approve(address _spen...\n      PUSH [tag] 26\t\t\tfunction approve(address _spen...\n      SWAP2 \t\t\tfunction approve(address _spen...\n      SWAP1 \t\t\tfunction approve(address _spen...\n      PUSH [tag] 27\t\t\tfunction approve(address _spen...\n      JUMP \t\t\tfunction approve(address _spen...\n    tag 26\t\t\tfunction approve(address _spen...\n      JUMPDEST \t\t\tfunction approve(address _spen...\n      PUSH [tag] 28\t\t\tfunction approve(address _spen...\n      JUMP \t\t\tfunction approve(address _spen...\n    tag 25\t\t\tfunction approve(address _spen...\n      JUMPDEST \t\t\tfunction approve(address _spen...\n      PUSH 40\t\t\tfunction approve(address _spen...\n      MLOAD \t\t\tfunction approve(address _spen...\n      PUSH [tag] 29\t\t\tfunction approve(address _spen...\n      SWAP2 \t\t\tfunction approve(address _spen...\n      SWAP1 \t\t\tfunction approve(address _spen...\n      PUSH [tag] 30\t\t\tfunction approve(address _spen...\n      JUMP \t\t\tfunction approve(address _spen...\n    tag 29\t\t\tfunction approve(address _spen...\n      JUMPDEST \t\t\tfunction approve(address _spen...\n      PUSH 40\t\t\tfunction approve(address _spen...\n      MLOAD \t\t\tfunction approve(address _spen...\n      DUP1 \t\t\tfunction approve(address _spen...\n      SWAP2 \t\t\tfunction approve(address _spen...\n      SUB \t\t\tfunction approve(address _spen...\n      SWAP1 \t\t\tfunction approve(address _spen...\n      RETURN \t\t\tfunction approve(address _spen...\n    tag 5\t\t\tuint256 public totalSupply\n      JUMPDEST \t\t\tuint256 public totalSupply\n      PUSH [tag] 31\t\t\tuint256 public totalSupply\n      PUSH [tag] 32\t\t\tuint256 public totalSupply\n      JUMP \t\t\tuint256 public totalSupply\n    tag 31\t\t\tuint256 public totalSupply\n      JUMPDEST \t\t\tuint256 public totalSupply\n      PUSH 40\t\t\tuint256 public totalSupply\n      MLOAD \t\t\tuint256 public totalSupply\n      PUSH [tag] 33\t\t\tuint256 public totalSupply\n      SWAP2 \t\t\tuint256 public totalSupply\n      SWAP1 \t\t\tuint256 public totalSupply\n      PUSH [tag] 34\t\t\tuint256 public totalSupply\n      JUMP \t\t\tuint256 public totalSupply\n    tag 33\t\t\tuint256 public totalSupply\n      JUMPDEST \t\t\tuint256 public totalSupply\n      PUSH 40\t\t\tuint256 public totalSupply\n      MLOAD \t\t\tuint256 public totalSupply\n      DUP1 \t\t\tuint256 public totalSupply\n      SWAP2 \t\t\tuint256 public totalSupply\n      SUB \t\t\tuint256 public totalSupply\n      SWAP1 \t\t\tuint256 public totalSupply\n      RETURN \t\t\tuint256 public totalSupply\n    tag 6\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 35\t\t\tfunction transferFrom(address ...\n      PUSH 4\t\t\tfunction transferFrom(address ...\n      DUP1 \t\t\tfunction transferFrom(address ...\n      CALLDATASIZE \t\t\tfunction transferFrom(address ...\n      SUB \t\t\tfunction transferFrom(address ...\n      DUP2 \t\t\tfunction transferFrom(address ...\n      ADD \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 36\t\t\tfunction transferFrom(address ...\n      SWAP2 \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 37\t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 36\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 38\t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 35\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH 40\t\t\tfunction transferFrom(address ...\n      MLOAD \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 39\t\t\tfunction transferFrom(address ...\n      SWAP2 \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      PUSH [tag] 30\t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 39\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH 40\t\t\tfunction transferFrom(address ...\n      MLOAD \t\t\tfunction transferFrom(address ...\n      DUP1 \t\t\tfunction transferFrom(address ...\n      SWAP2 \t\t\tfunction transferFrom(address ...\n      SUB \t\t\tfunction transferFrom(address ...\n      SWAP1 \t\t\tfunction transferFrom(address ...\n      RETURN \t\t\tfunction transferFrom(address ...\n    tag 7\t\t\tuint8 public decimals = 0\n      JUMPDEST \t\t\tuint8 public decimals = 0\n      PUSH [tag] 40\t\t\tuint8 public decimals = 0\n      PUSH [tag] 41\t\t\tuint8 public decimals = 0\n      JUMP \t\t\tuint8 public decimals = 0\n    tag 40\t\t\tuint8 public decimals = 0\n      JUMPDEST \t\t\tuint8 public decimals = 0\n      PUSH 40\t\t\tuint8 public decimals = 0\n      MLOAD \t\t\tuint8 public decimals = 0\n      PUSH [tag] 42\t\t\tuint8 public decimals = 0\n      SWAP2 \t\t\tuint8 public decimals = 0\n      SWAP1 \t\t\tuint8 public decimals = 0\n      PUSH [tag] 43\t\t\tuint8 public decimals = 0\n      JUMP \t\t\tuint8 public decimals = 0\n    tag 42\t\t\tuint8 public decimals = 0\n      JUMPDEST \t\t\tuint8 public decimals = 0\n      PUSH 40\t\t\tuint8 public decimals = 0\n      MLOAD \t\t\tuint8 public decimals = 0\n      DUP1 \t\t\tuint8 public decimals = 0\n      SWAP2 \t\t\tuint8 public decimals = 0\n      SUB \t\t\tuint8 public decimals = 0\n      SWAP1 \t\t\tuint8 public decimals = 0\n      RETURN \t\t\tuint8 public decimals = 0\n    tag 8\t\t\tuint256 public constant initia...\n      JUMPDEST \t\t\tuint256 public constant initia...\n      PUSH [tag] 44\t\t\tuint256 public constant initia...\n      PUSH [tag] 45\t\t\tuint256 public constant initia...\n      JUMP \t\t\tuint256 public constant initia...\n    tag 44\t\t\tuint256 public constant initia...\n      JUMPDEST \t\t\tuint256 public constant initia...\n      PUSH 40\t\t\tuint256 public constant initia...\n      MLOAD \t\t\tuint256 public constant initia...\n      PUSH [tag] 46\t\t\tuint256 public constant initia...\n      SWAP2 \t\t\tuint256 public constant initia...\n      SWAP1 \t\t\tuint256 public constant initia...\n      PUSH [tag] 34\t\t\tuint256 public constant initia...\n      JUMP \t\t\tuint256 public constant initia...\n    tag 46\t\t\tuint256 public constant initia...\n      JUMPDEST \t\t\tuint256 public constant initia...\n      PUSH 40\t\t\tuint256 public constant initia...\n      MLOAD \t\t\tuint256 public constant initia...\n      DUP1 \t\t\tuint256 public constant initia...\n      SWAP2 \t\t\tuint256 public constant initia...\n      SUB \t\t\tuint256 public constant initia...\n      SWAP1 \t\t\tuint256 public constant initia...\n      RETURN \t\t\tuint256 public constant initia...\n    tag 9\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 47\t\t\tmapping(address => uint256) pu...\n      PUSH 4\t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      CALLDATASIZE \t\t\tmapping(address => uint256) pu...\n      SUB \t\t\tmapping(address => uint256) pu...\n      DUP2 \t\t\tmapping(address => uint256) pu...\n      ADD \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 48\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 49\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 48\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 50\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 47\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      MLOAD \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 51\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 34\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 51\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      MLOAD \t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SUB \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      RETURN \t\t\tmapping(address => uint256) pu...\n    tag 10\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      PUSH [tag] 52\t\t\taddress public owner\n      PUSH [tag] 53\t\t\taddress public owner\n      JUMP \t\t\taddress public owner\n    tag 52\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      PUSH 40\t\t\taddress public owner\n      MLOAD \t\t\taddress public owner\n      PUSH [tag] 54\t\t\taddress public owner\n      SWAP2 \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      PUSH [tag] 55\t\t\taddress public owner\n      JUMP \t\t\taddress public owner\n    tag 54\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      PUSH 40\t\t\taddress public owner\n      MLOAD \t\t\taddress public owner\n      DUP1 \t\t\taddress public owner\n      SWAP2 \t\t\taddress public owner\n      SUB \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      RETURN \t\t\taddress public owner\n    tag 11\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 56\t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 57\t\t\tstring public symbol = \"TR\"\n      JUMP \t\t\tstring public symbol = \"TR\"\n    tag 56\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      PUSH 40\t\t\tstring public symbol = \"TR\"\n      MLOAD \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 58\t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 24\t\t\tstring public symbol = \"TR\"\n      JUMP \t\t\tstring public symbol = \"TR\"\n    tag 58\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      PUSH 40\t\t\tstring public symbol = \"TR\"\n      MLOAD \t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n      SUB \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      RETURN \t\t\tstring public symbol = \"TR\"\n    tag 12\t\t\tfunction mint(uint256 _amount)...\n      JUMPDEST \t\t\tfunction mint(uint256 _amount)...\n      PUSH [tag] 59\t\t\tfunction mint(uint256 _amount)...\n      PUSH 4\t\t\tfunction mint(uint256 _amount)...\n      DUP1 \t\t\tfunction mint(uint256 _amount)...\n      CALLDATASIZE \t\t\tfunction mint(uint256 _amount)...\n      SUB \t\t\tfunction mint(uint256 _amount)...\n      DUP2 \t\t\tfunction mint(uint256 _amount)...\n      ADD \t\t\tfunction mint(uint256 _amount)...\n      SWAP1 \t\t\tfunction mint(uint256 _amount)...\n      PUSH [tag] 60\t\t\tfunction mint(uint256 _amount)...\n      SWAP2 \t\t\tfunction mint(uint256 _amount)...\n      SWAP1 \t\t\tfunction mint(uint256 _amount)...\n      PUSH [tag] 61\t\t\tfunction mint(uint256 _amount)...\n      JUMP \t\t\tfunction mint(uint256 _amount)...\n    tag 60\t\t\tfunction mint(uint256 _amount)...\n      JUMPDEST \t\t\tfunction mint(uint256 _amount)...\n      PUSH [tag] 62\t\t\tfunction mint(uint256 _amount)...\n      JUMP \t\t\tfunction mint(uint256 _amount)...\n    tag 59\t\t\tfunction mint(uint256 _amount)...\n      JUMPDEST \t\t\tfunction mint(uint256 _amount)...\n      STOP \t\t\tfunction mint(uint256 _amount)...\n    tag 13\t\t\tfunction transfer(address _to,...\n      JUMPDEST \t\t\tfunction transfer(address _to,...\n      PUSH [tag] 63\t\t\tfunction transfer(address _to,...\n      PUSH 4\t\t\tfunction transfer(address _to,...\n      DUP1 \t\t\tfunction transfer(address _to,...\n      CALLDATASIZE \t\t\tfunction transfer(address _to,...\n      SUB \t\t\tfunction transfer(address _to,...\n      DUP2 \t\t\tfunction transfer(address _to,...\n      ADD \t\t\tfunction transfer(address _to,...\n      SWAP1 \t\t\tfunction transfer(address _to,...\n      PUSH [tag] 64\t\t\tfunction transfer(address _to,...\n      SWAP2 \t\t\tfunction transfer(address _to,...\n      SWAP1 \t\t\tfunction transfer(address _to,...\n      PUSH [tag] 27\t\t\tfunction transfer(address _to,...\n      JUMP \t\t\tfunction transfer(address _to,...\n    tag 64\t\t\tfunction transfer(address _to,...\n      JUMPDEST \t\t\tfunction transfer(address _to,...\n      PUSH [tag] 65\t\t\tfunction transfer(address _to,...\n      JUMP \t\t\tfunction transfer(address _to,...\n    tag 63\t\t\tfunction transfer(address _to,...\n      JUMPDEST \t\t\tfunction transfer(address _to,...\n      PUSH 40\t\t\tfunction transfer(address _to,...\n      MLOAD \t\t\tfunction transfer(address _to,...\n      PUSH [tag] 66\t\t\tfunction transfer(address _to,...\n      SWAP2 \t\t\tfunction transfer(address _to,...\n      SWAP1 \t\t\tfunction transfer(address _to,...\n      PUSH [tag] 30\t\t\tfunction transfer(address _to,...\n      JUMP \t\t\tfunction transfer(address _to,...\n    tag 66\t\t\tfunction transfer(address _to,...\n      JUMPDEST \t\t\tfunction transfer(address _to,...\n      PUSH 40\t\t\tfunction transfer(address _to,...\n      MLOAD \t\t\tfunction transfer(address _to,...\n      DUP1 \t\t\tfunction transfer(address _to,...\n      SWAP2 \t\t\tfunction transfer(address _to,...\n      SUB \t\t\tfunction transfer(address _to,...\n      SWAP1 \t\t\tfunction transfer(address _to,...\n      RETURN \t\t\tfunction transfer(address _to,...\n    tag 14\t\t\tmapping(address => mapping(add...\n      JUMPDEST \t\t\tmapping(address => mapping(add...\n      PUSH [tag] 67\t\t\tmapping(address => mapping(add...\n      PUSH 4\t\t\tmapping(address => mapping(add...\n      DUP1 \t\t\tmapping(address => mapping(add...\n      CALLDATASIZE \t\t\tmapping(address => mapping(add...\n      SUB \t\t\tmapping(address => mapping(add...\n      DUP2 \t\t\tmapping(address => mapping(add...\n      ADD \t\t\tmapping(address => mapping(add...\n      SWAP1 \t\t\tmapping(address => mapping(add...\n      PUSH [tag] 68\t\t\tmapping(address => mapping(add...\n      SWAP2 \t\t\tmapping(address => mapping(add...\n      SWAP1 \t\t\tmapping(address => mapping(add...\n      PUSH [tag] 69\t\t\tmapping(address => mapping(add...\n      JUMP \t\t\tmapping(address => mapping(add...\n    tag 68\t\t\tmapping(address => mapping(add...\n      JUMPDEST \t\t\tmapping(address => mapping(add...\n      PUSH [tag] 70\t\t\tmapping(address => mapping(add...\n      JUMP \t\t\tmapping(address => mapping(add...\n    tag 67\t\t\tmapping(address => mapping(add...\n      JUMPDEST \t\t\tmapping(address => mapping(add...\n      PUSH 40\t\t\tmapping(address => mapping(add...\n      MLOAD \t\t\tmapping(address => mapping(add...\n      PUSH [tag] 71\t\t\tmapping(address => mapping(add...\n      SWAP2 \t\t\tmapping(address => mapping(add...\n      SWAP1 \t\t\tmapping(address => mapping(add...\n      PUSH [tag] 34\t\t\tmapping(address => mapping(add...\n      JUMP \t\t\tmapping(address => mapping(add...\n    tag 71\t\t\tmapping(address => mapping(add...\n      JUMPDEST \t\t\tmapping(address => mapping(add...\n      PUSH 40\t\t\tmapping(address => mapping(add...\n      MLOAD \t\t\tmapping(address => mapping(add...\n      DUP1 \t\t\tmapping(address => mapping(add...\n      SWAP2 \t\t\tmapping(address => mapping(add...\n      SUB \t\t\tmapping(address => mapping(add...\n      SWAP1 \t\t\tmapping(address => mapping(add...\n      RETURN \t\t\tmapping(address => mapping(add...\n    tag 15\t\t\tuint256 public constant hectar...\n      JUMPDEST \t\t\tuint256 public constant hectar...\n      PUSH [tag] 72\t\t\tuint256 public constant hectar...\n      PUSH [tag] 73\t\t\tuint256 public constant hectar...\n      JUMP \t\t\tuint256 public constant hectar...\n    tag 72\t\t\tuint256 public constant hectar...\n      JUMPDEST \t\t\tuint256 public constant hectar...\n      PUSH 40\t\t\tuint256 public constant hectar...\n      MLOAD \t\t\tuint256 public constant hectar...\n      PUSH [tag] 74\t\t\tuint256 public constant hectar...\n      SWAP2 \t\t\tuint256 public constant hectar...\n      SWAP1 \t\t\tuint256 public constant hectar...\n      PUSH [tag] 34\t\t\tuint256 public constant hectar...\n      JUMP \t\t\tuint256 public constant hectar...\n    tag 74\t\t\tuint256 public constant hectar...\n      JUMPDEST \t\t\tuint256 public constant hectar...\n      PUSH 40\t\t\tuint256 public constant hectar...\n      MLOAD \t\t\tuint256 public constant hectar...\n      DUP1 \t\t\tuint256 public constant hectar...\n      SWAP2 \t\t\tuint256 public constant hectar...\n      SUB \t\t\tuint256 public constant hectar...\n      SWAP1 \t\t\tuint256 public constant hectar...\n      RETURN \t\t\tuint256 public constant hectar...\n    tag 16\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 75\t\t\tfunction transferOwnership(add...\n      PUSH 4\t\t\tfunction transferOwnership(add...\n      DUP1 \t\t\tfunction transferOwnership(add...\n      CALLDATASIZE \t\t\tfunction transferOwnership(add...\n      SUB \t\t\tfunction transferOwnership(add...\n      DUP2 \t\t\tfunction transferOwnership(add...\n      ADD \t\t\tfunction transferOwnership(add...\n      SWAP1 \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 76\t\t\tfunction transferOwnership(add...\n      SWAP2 \t\t\tfunction transferOwnership(add...\n      SWAP1 \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 49\t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 76\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 77\t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 75\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      STOP \t\t\tfunction transferOwnership(add...\n    tag 17\t\t\tuint256 public constant square...\n      JUMPDEST \t\t\tuint256 public constant square...\n      PUSH [tag] 78\t\t\tuint256 public constant square...\n      PUSH [tag] 79\t\t\tuint256 public constant square...\n      JUMP \t\t\tuint256 public constant square...\n    tag 78\t\t\tuint256 public constant square...\n      JUMPDEST \t\t\tuint256 public constant square...\n      PUSH 40\t\t\tuint256 public constant square...\n      MLOAD \t\t\tuint256 public constant square...\n      PUSH [tag] 80\t\t\tuint256 public constant square...\n      SWAP2 \t\t\tuint256 public constant square...\n      SWAP1 \t\t\tuint256 public constant square...\n      PUSH [tag] 34\t\t\tuint256 public constant square...\n      JUMP \t\t\tuint256 public constant square...\n    tag 80\t\t\tuint256 public constant square...\n      JUMPDEST \t\t\tuint256 public constant square...\n      PUSH 40\t\t\tuint256 public constant square...\n      MLOAD \t\t\tuint256 public constant square...\n      DUP1 \t\t\tuint256 public constant square...\n      SWAP2 \t\t\tuint256 public constant square...\n      SUB \t\t\tuint256 public constant square...\n      SWAP1 \t\t\tuint256 public constant square...\n      RETURN \t\t\tuint256 public constant square...\n    tag 22\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      PUSH 0\t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      SLOAD \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 81\t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 82\t\t\tstring public name = \"Terra Re...\n      JUMP \t\t\tstring public name = \"Terra Re...\n    tag 81\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      PUSH 1F\t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      PUSH 20\t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n      DIV \t\t\tstring public name = \"Terra Re...\n      MUL \t\t\tstring public name = \"Terra Re...\n      PUSH 20\t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      PUSH 40\t\t\tstring public name = \"Terra Re...\n      MLOAD \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      DUP2 \t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      PUSH 40\t\t\tstring public name = \"Terra Re...\n      MSTORE \t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      SWAP3 \t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      DUP2 \t\t\tstring public name = \"Terra Re...\n      DUP2 \t\t\tstring public name = \"Terra Re...\n      MSTORE \t\t\tstring public name = \"Terra Re...\n      PUSH 20\t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      DUP3 \t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      SLOAD \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 83\t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 82\t\t\tstring public name = \"Terra Re...\n      JUMP \t\t\tstring public name = \"Terra Re...\n    tag 83\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      ISZERO \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 84\t\t\tstring public name = \"Terra Re...\n      JUMPI \t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      PUSH 1F\t\t\tstring public name = \"Terra Re...\n      LT \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 85\t\t\tstring public name = \"Terra Re...\n      JUMPI \t\t\tstring public name = \"Terra Re...\n      PUSH 100\t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      DUP4 \t\t\tstring public name = \"Terra Re...\n      SLOAD \t\t\tstring public name = \"Terra Re...\n      DIV \t\t\tstring public name = \"Terra Re...\n      MUL \t\t\tstring public name = \"Terra Re...\n      DUP4 \t\t\tstring public name = \"Terra Re...\n      MSTORE \t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n      PUSH 20\t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 84\t\t\tstring public name = \"Terra Re...\n      JUMP \t\t\tstring public name = \"Terra Re...\n    tag 85\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      DUP3 \t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      PUSH 0\t\t\tstring public name = \"Terra Re...\n      MSTORE \t\t\tstring public name = \"Terra Re...\n      PUSH 20\t\t\tstring public name = \"Terra Re...\n      PUSH 0\t\t\tstring public name = \"Terra Re...\n      KECCAK256 \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n    tag 86\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      DUP2 \t\t\tstring public name = \"Terra Re...\n      SLOAD \t\t\tstring public name = \"Terra Re...\n      DUP2 \t\t\tstring public name = \"Terra Re...\n      MSTORE \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      PUSH 1\t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      PUSH 20\t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      DUP1 \t\t\tstring public name = \"Terra Re...\n      DUP4 \t\t\tstring public name = \"Terra Re...\n      GT \t\t\tstring public name = \"Terra Re...\n      PUSH [tag] 86\t\t\tstring public name = \"Terra Re...\n      JUMPI \t\t\tstring public name = \"Terra Re...\n      DUP3 \t\t\tstring public name = \"Terra Re...\n      SWAP1 \t\t\tstring public name = \"Terra Re...\n      SUB \t\t\tstring public name = \"Terra Re...\n      PUSH 1F\t\t\tstring public name = \"Terra Re...\n      AND \t\t\tstring public name = \"Terra Re...\n      DUP3 \t\t\tstring public name = \"Terra Re...\n      ADD \t\t\tstring public name = \"Terra Re...\n      SWAP2 \t\t\tstring public name = \"Terra Re...\n    tag 84\t\t\tstring public name = \"Terra Re...\n      JUMPDEST \t\t\tstring public name = \"Terra Re...\n      POP \t\t\tstring public name = \"Terra Re...\n      POP \t\t\tstring public name = \"Terra Re...\n      POP \t\t\tstring public name = \"Terra Re...\n      POP \t\t\tstring public name = \"Terra Re...\n      POP \t\t\tstring public name = \"Terra Re...\n      DUP2 \t\t\tstring public name = \"Terra Re...\n      JUMP \t\t\tstring public name = \"Terra Re...\n    tag 28\t\t\tfunction approve(address _spen...\n      JUMPDEST \t\t\tfunction approve(address _spen...\n      PUSH 0\t\t\tbool success\n      DUP2 \t\t\t_value\n      PUSH 6\t\t\tallowance\n      PUSH 0\t\t\tallowance[msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[msg.sender]\n      AND \t\t\tallowance[msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[msg.sender]\n      AND \t\t\tallowance[msg.sender]\n      DUP2 \t\t\tallowance[msg.sender]\n      MSTORE \t\t\tallowance[msg.sender]\n      PUSH 20\t\t\tallowance[msg.sender]\n      ADD \t\t\tallowance[msg.sender]\n      SWAP1 \t\t\tallowance[msg.sender]\n      DUP2 \t\t\tallowance[msg.sender]\n      MSTORE \t\t\tallowance[msg.sender]\n      PUSH 20\t\t\tallowance[msg.sender]\n      ADD \t\t\tallowance[msg.sender]\n      PUSH 0\t\t\tallowance[msg.sender]\n      KECCAK256 \t\t\tallowance[msg.sender]\n      PUSH 0\t\t\tallowance[msg.sender][_spender...\n      DUP6 \t\t\t_spender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[msg.sender][_spender...\n      AND \t\t\tallowance[msg.sender][_spender...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[msg.sender][_spender...\n      AND \t\t\tallowance[msg.sender][_spender...\n      DUP2 \t\t\tallowance[msg.sender][_spender...\n      MSTORE \t\t\tallowance[msg.sender][_spender...\n      PUSH 20\t\t\tallowance[msg.sender][_spender...\n      ADD \t\t\tallowance[msg.sender][_spender...\n      SWAP1 \t\t\tallowance[msg.sender][_spender...\n      DUP2 \t\t\tallowance[msg.sender][_spender...\n      MSTORE \t\t\tallowance[msg.sender][_spender...\n      PUSH 20\t\t\tallowance[msg.sender][_spender...\n      ADD \t\t\tallowance[msg.sender][_spender...\n      PUSH 0\t\t\tallowance[msg.sender][_spender...\n      KECCAK256 \t\t\tallowance[msg.sender][_spender...\n      DUP2 \t\t\tallowance[msg.sender][_spender...\n      SWAP1 \t\t\tallowance[msg.sender][_spender...\n      SSTORE \t\t\tallowance[msg.sender][_spender...\n      POP \t\t\tallowance[msg.sender][_spender...\n      DUP3 \t\t\t_spender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tApproval(msg.sender, _spender,...\n      AND \t\t\tApproval(msg.sender, _spender,...\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tApproval(msg.sender, _spender,...\n      AND \t\t\tApproval(msg.sender, _spender,...\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\tApproval(msg.sender, _spender,...\n      DUP5 \t\t\t_value\n      PUSH 40\t\t\tApproval(msg.sender, _spender,...\n      MLOAD \t\t\tApproval(msg.sender, _spender,...\n      PUSH [tag] 88\t\t\tApproval(msg.sender, _spender,...\n      SWAP2 \t\t\tApproval(msg.sender, _spender,...\n      SWAP1 \t\t\tApproval(msg.sender, _spender,...\n      PUSH [tag] 34\t\t\tApproval(msg.sender, _spender,...\n      JUMP \t\t\tApproval(msg.sender, _spender,...\n    tag 88\t\t\tApproval(msg.sender, _spender,...\n      JUMPDEST \t\t\tApproval(msg.sender, _spender,...\n      PUSH 40\t\t\tApproval(msg.sender, _spender,...\n      MLOAD \t\t\tApproval(msg.sender, _spender,...\n      DUP1 \t\t\tApproval(msg.sender, _spender,...\n      SWAP2 \t\t\tApproval(msg.sender, _spender,...\n      SUB \t\t\tApproval(msg.sender, _spender,...\n      SWAP1 \t\t\tApproval(msg.sender, _spender,...\n      LOG3 \t\t\tApproval(msg.sender, _spender,...\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP3 \t\t\tfunction approve(address _spen...\n      SWAP2 \t\t\tfunction approve(address _spen...\n      POP \t\t\tfunction approve(address _spen...\n      POP \t\t\tfunction approve(address _spen...\n      JUMP \t\t\tfunction approve(address _spen...\n    tag 32\t\t\tuint256 public totalSupply\n      JUMPDEST \t\t\tuint256 public totalSupply\n      PUSH 3\t\t\tuint256 public totalSupply\n      SLOAD \t\t\tuint256 public totalSupply\n      DUP2 \t\t\tuint256 public totalSupply\n      JUMP \t\t\tuint256 public totalSupply\n    tag 38\t\t\tfunction transferFrom(address ...\n      JUMPDEST \t\t\tfunction transferFrom(address ...\n      PUSH 0\t\t\tbool success\n      DUP1 \t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_from != address(0)\n      AND \t\t\t_from != address(0)\n      DUP5 \t\t\t_from\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_from != address(0)\n      AND \t\t\t_from != address(0)\n      EQ \t\t\t_from != address(0)\n      ISZERO \t\t\t_from != address(0)\n      DUP1 \t\t\t_from != address(0) && _to != ...\n      ISZERO \t\t\t_from != address(0) && _to != ...\n      PUSH [tag] 90\t\t\t_from != address(0) && _to != ...\n      JUMPI \t\t\t_from != address(0) && _to != ...\n      POP \t\t\t_from != address(0) && _to != ...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_to != address(0)\n      AND \t\t\t_to != address(0)\n      DUP4 \t\t\t_to\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_to != address(0)\n      AND \t\t\t_to != address(0)\n      EQ \t\t\t_to != address(0)\n      ISZERO \t\t\t_to != address(0)\n    tag 90\t\t\t_from != address(0) && _to != ...\n      JUMPDEST \t\t\t_from != address(0) && _to != ...\n      PUSH [tag] 91\t\t\trequire(_from != address(0) &&...\n      JUMPI \t\t\trequire(_from != address(0) &&...\n      PUSH 40\t\t\trequire(_from != address(0) &&...\n      MLOAD \t\t\trequire(_from != address(0) &&...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(_from != address(0) &&...\n      DUP2 \t\t\trequire(_from != address(0) &&...\n      MSTORE \t\t\trequire(_from != address(0) &&...\n      PUSH 4\t\t\trequire(_from != address(0) &&...\n      ADD \t\t\trequire(_from != address(0) &&...\n      PUSH [tag] 92\t\t\trequire(_from != address(0) &&...\n      SWAP1 \t\t\trequire(_from != address(0) &&...\n      PUSH [tag] 93\t\t\trequire(_from != address(0) &&...\n      JUMP \t\t\trequire(_from != address(0) &&...\n    tag 92\t\t\trequire(_from != address(0) &&...\n      JUMPDEST \t\t\trequire(_from != address(0) &&...\n      PUSH 40\t\t\trequire(_from != address(0) &&...\n      MLOAD \t\t\trequire(_from != address(0) &&...\n      DUP1 \t\t\trequire(_from != address(0) &&...\n      SWAP2 \t\t\trequire(_from != address(0) &&...\n      SUB \t\t\trequire(_from != address(0) &&...\n      SWAP1 \t\t\trequire(_from != address(0) &&...\n      REVERT \t\t\trequire(_from != address(0) &&...\n    tag 91\t\t\trequire(_from != address(0) &&...\n      JUMPDEST \t\t\trequire(_from != address(0) &&...\n      DUP2 \t\t\t_value\n      PUSH 5\t\t\tbalanceOf\n      PUSH 0\t\t\tbalanceOf[_from]\n      DUP7 \t\t\t_from\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_from]\n      AND \t\t\tbalanceOf[_from]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_from]\n      AND \t\t\tbalanceOf[_from]\n      DUP2 \t\t\tbalanceOf[_from]\n      MSTORE \t\t\tbalanceOf[_from]\n      PUSH 20\t\t\tbalanceOf[_from]\n      ADD \t\t\tbalanceOf[_from]\n      SWAP1 \t\t\tbalanceOf[_from]\n      DUP2 \t\t\tbalanceOf[_from]\n      MSTORE \t\t\tbalanceOf[_from]\n      PUSH 20\t\t\tbalanceOf[_from]\n      ADD \t\t\tbalanceOf[_from]\n      PUSH 0\t\t\tbalanceOf[_from]\n      KECCAK256 \t\t\tbalanceOf[_from]\n      SLOAD \t\t\tbalanceOf[_from]\n      LT \t\t\tbalanceOf[_from] >= _value\n      ISZERO \t\t\tbalanceOf[_from] >= _value\n      PUSH [tag] 94\t\t\trequire(balanceOf[_from] >= _v...\n      JUMPI \t\t\trequire(balanceOf[_from] >= _v...\n      PUSH 40\t\t\trequire(balanceOf[_from] >= _v...\n      MLOAD \t\t\trequire(balanceOf[_from] >= _v...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(balanceOf[_from] >= _v...\n      DUP2 \t\t\trequire(balanceOf[_from] >= _v...\n      MSTORE \t\t\trequire(balanceOf[_from] >= _v...\n      PUSH 4\t\t\trequire(balanceOf[_from] >= _v...\n      ADD \t\t\trequire(balanceOf[_from] >= _v...\n      PUSH [tag] 95\t\t\trequire(balanceOf[_from] >= _v...\n      SWAP1 \t\t\trequire(balanceOf[_from] >= _v...\n      PUSH [tag] 96\t\t\trequire(balanceOf[_from] >= _v...\n      JUMP \t\t\trequire(balanceOf[_from] >= _v...\n    tag 95\t\t\trequire(balanceOf[_from] >= _v...\n      JUMPDEST \t\t\trequire(balanceOf[_from] >= _v...\n      PUSH 40\t\t\trequire(balanceOf[_from] >= _v...\n      MLOAD \t\t\trequire(balanceOf[_from] >= _v...\n      DUP1 \t\t\trequire(balanceOf[_from] >= _v...\n      SWAP2 \t\t\trequire(balanceOf[_from] >= _v...\n      SUB \t\t\trequire(balanceOf[_from] >= _v...\n      SWAP1 \t\t\trequire(balanceOf[_from] >= _v...\n      REVERT \t\t\trequire(balanceOf[_from] >= _v...\n    tag 94\t\t\trequire(balanceOf[_from] >= _v...\n      JUMPDEST \t\t\trequire(balanceOf[_from] >= _v...\n      DUP2 \t\t\t_value\n      PUSH 6\t\t\tallowance\n      PUSH 0\t\t\tallowance[_from]\n      DUP7 \t\t\t_from\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from]\n      AND \t\t\tallowance[_from]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from]\n      AND \t\t\tallowance[_from]\n      DUP2 \t\t\tallowance[_from]\n      MSTORE \t\t\tallowance[_from]\n      PUSH 20\t\t\tallowance[_from]\n      ADD \t\t\tallowance[_from]\n      SWAP1 \t\t\tallowance[_from]\n      DUP2 \t\t\tallowance[_from]\n      MSTORE \t\t\tallowance[_from]\n      PUSH 20\t\t\tallowance[_from]\n      ADD \t\t\tallowance[_from]\n      PUSH 0\t\t\tallowance[_from]\n      KECCAK256 \t\t\tallowance[_from]\n      PUSH 0\t\t\tallowance[_from][msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from][msg.sender]\n      AND \t\t\tallowance[_from][msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from][msg.sender]\n      AND \t\t\tallowance[_from][msg.sender]\n      DUP2 \t\t\tallowance[_from][msg.sender]\n      MSTORE \t\t\tallowance[_from][msg.sender]\n      PUSH 20\t\t\tallowance[_from][msg.sender]\n      ADD \t\t\tallowance[_from][msg.sender]\n      SWAP1 \t\t\tallowance[_from][msg.sender]\n      DUP2 \t\t\tallowance[_from][msg.sender]\n      MSTORE \t\t\tallowance[_from][msg.sender]\n      PUSH 20\t\t\tallowance[_from][msg.sender]\n      ADD \t\t\tallowance[_from][msg.sender]\n      PUSH 0\t\t\tallowance[_from][msg.sender]\n      KECCAK256 \t\t\tallowance[_from][msg.sender]\n      SLOAD \t\t\tallowance[_from][msg.sender]\n      LT \t\t\tallowance[_from][msg.sender] >...\n      ISZERO \t\t\tallowance[_from][msg.sender] >...\n      PUSH [tag] 97\t\t\trequire(allowance[_from][msg.s...\n      JUMPI \t\t\trequire(allowance[_from][msg.s...\n      PUSH 40\t\t\trequire(allowance[_from][msg.s...\n      MLOAD \t\t\trequire(allowance[_from][msg.s...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(allowance[_from][msg.s...\n      DUP2 \t\t\trequire(allowance[_from][msg.s...\n      MSTORE \t\t\trequire(allowance[_from][msg.s...\n      PUSH 4\t\t\trequire(allowance[_from][msg.s...\n      ADD \t\t\trequire(allowance[_from][msg.s...\n      PUSH [tag] 98\t\t\trequire(allowance[_from][msg.s...\n      SWAP1 \t\t\trequire(allowance[_from][msg.s...\n      PUSH [tag] 99\t\t\trequire(allowance[_from][msg.s...\n      JUMP \t\t\trequire(allowance[_from][msg.s...\n    tag 98\t\t\trequire(allowance[_from][msg.s...\n      JUMPDEST \t\t\trequire(allowance[_from][msg.s...\n      PUSH 40\t\t\trequire(allowance[_from][msg.s...\n      MLOAD \t\t\trequire(allowance[_from][msg.s...\n      DUP1 \t\t\trequire(allowance[_from][msg.s...\n      SWAP2 \t\t\trequire(allowance[_from][msg.s...\n      SUB \t\t\trequire(allowance[_from][msg.s...\n      SWAP1 \t\t\trequire(allowance[_from][msg.s...\n      REVERT \t\t\trequire(allowance[_from][msg.s...\n    tag 97\t\t\trequire(allowance[_from][msg.s...\n      JUMPDEST \t\t\trequire(allowance[_from][msg.s...\n      DUP2 \t\t\t_value\n      PUSH 5\t\t\tbalanceOf\n      PUSH 0\t\t\tbalanceOf[_from]\n      DUP7 \t\t\t_from\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_from]\n      AND \t\t\tbalanceOf[_from]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_from]\n      AND \t\t\tbalanceOf[_from]\n      DUP2 \t\t\tbalanceOf[_from]\n      MSTORE \t\t\tbalanceOf[_from]\n      PUSH 20\t\t\tbalanceOf[_from]\n      ADD \t\t\tbalanceOf[_from]\n      SWAP1 \t\t\tbalanceOf[_from]\n      DUP2 \t\t\tbalanceOf[_from]\n      MSTORE \t\t\tbalanceOf[_from]\n      PUSH 20\t\t\tbalanceOf[_from]\n      ADD \t\t\tbalanceOf[_from]\n      PUSH 0\t\t\tbalanceOf[_from]\n      KECCAK256 \t\t\tbalanceOf[_from]\n      PUSH 0\t\t\tbalanceOf[_from]\n      DUP3 \t\t\tbalanceOf[_from] -= _value\n      DUP3 \t\t\tbalanceOf[_from] -= _value\n      SLOAD \t\t\tbalanceOf[_from] -= _value\n      PUSH [tag] 100\t\t\tbalanceOf[_from] -= _value\n      SWAP2 \t\t\tbalanceOf[_from] -= _value\n      SWAP1 \t\t\tbalanceOf[_from] -= _value\n      PUSH [tag] 101\t\t\tbalanceOf[_from] -= _value\n      JUMP \t\t\tbalanceOf[_from] -= _value\n    tag 100\t\t\tbalanceOf[_from] -= _value\n      JUMPDEST \t\t\tbalanceOf[_from] -= _value\n      SWAP3 \t\t\tbalanceOf[_from] -= _value\n      POP \t\t\tbalanceOf[_from] -= _value\n      POP \t\t\tbalanceOf[_from] -= _value\n      DUP2 \t\t\tbalanceOf[_from] -= _value\n      SWAP1 \t\t\tbalanceOf[_from] -= _value\n      SSTORE \t\t\tbalanceOf[_from] -= _value\n      POP \t\t\tbalanceOf[_from] -= _value\n      DUP2 \t\t\t_value\n      PUSH 5\t\t\tbalanceOf\n      PUSH 0\t\t\tbalanceOf[_to]\n      DUP6 \t\t\t_to\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_to]\n      AND \t\t\tbalanceOf[_to]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_to]\n      AND \t\t\tbalanceOf[_to]\n      DUP2 \t\t\tbalanceOf[_to]\n      MSTORE \t\t\tbalanceOf[_to]\n      PUSH 20\t\t\tbalanceOf[_to]\n      ADD \t\t\tbalanceOf[_to]\n      SWAP1 \t\t\tbalanceOf[_to]\n      DUP2 \t\t\tbalanceOf[_to]\n      MSTORE \t\t\tbalanceOf[_to]\n      PUSH 20\t\t\tbalanceOf[_to]\n      ADD \t\t\tbalanceOf[_to]\n      PUSH 0\t\t\tbalanceOf[_to]\n      KECCAK256 \t\t\tbalanceOf[_to]\n      PUSH 0\t\t\tbalanceOf[_to]\n      DUP3 \t\t\tbalanceOf[_to] += _value\n      DUP3 \t\t\tbalanceOf[_to] += _value\n      SLOAD \t\t\tbalanceOf[_to] += _value\n      PUSH [tag] 102\t\t\tbalanceOf[_to] += _value\n      SWAP2 \t\t\tbalanceOf[_to] += _value\n      SWAP1 \t\t\tbalanceOf[_to] += _value\n      PUSH [tag] 103\t\t\tbalanceOf[_to] += _value\n      JUMP \t\t\tbalanceOf[_to] += _value\n    tag 102\t\t\tbalanceOf[_to] += _value\n      JUMPDEST \t\t\tbalanceOf[_to] += _value\n      SWAP3 \t\t\tbalanceOf[_to] += _value\n      POP \t\t\tbalanceOf[_to] += _value\n      POP \t\t\tbalanceOf[_to] += _value\n      DUP2 \t\t\tbalanceOf[_to] += _value\n      SWAP1 \t\t\tbalanceOf[_to] += _value\n      SSTORE \t\t\tbalanceOf[_to] += _value\n      POP \t\t\tbalanceOf[_to] += _value\n      DUP2 \t\t\t_value\n      PUSH 6\t\t\tallowance\n      PUSH 0\t\t\tallowance[_from]\n      DUP7 \t\t\t_from\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from]\n      AND \t\t\tallowance[_from]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from]\n      AND \t\t\tallowance[_from]\n      DUP2 \t\t\tallowance[_from]\n      MSTORE \t\t\tallowance[_from]\n      PUSH 20\t\t\tallowance[_from]\n      ADD \t\t\tallowance[_from]\n      SWAP1 \t\t\tallowance[_from]\n      DUP2 \t\t\tallowance[_from]\n      MSTORE \t\t\tallowance[_from]\n      PUSH 20\t\t\tallowance[_from]\n      ADD \t\t\tallowance[_from]\n      PUSH 0\t\t\tallowance[_from]\n      KECCAK256 \t\t\tallowance[_from]\n      PUSH 0\t\t\tallowance[_from][msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from][msg.sender]\n      AND \t\t\tallowance[_from][msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tallowance[_from][msg.sender]\n      AND \t\t\tallowance[_from][msg.sender]\n      DUP2 \t\t\tallowance[_from][msg.sender]\n      MSTORE \t\t\tallowance[_from][msg.sender]\n      PUSH 20\t\t\tallowance[_from][msg.sender]\n      ADD \t\t\tallowance[_from][msg.sender]\n      SWAP1 \t\t\tallowance[_from][msg.sender]\n      DUP2 \t\t\tallowance[_from][msg.sender]\n      MSTORE \t\t\tallowance[_from][msg.sender]\n      PUSH 20\t\t\tallowance[_from][msg.sender]\n      ADD \t\t\tallowance[_from][msg.sender]\n      PUSH 0\t\t\tallowance[_from][msg.sender]\n      KECCAK256 \t\t\tallowance[_from][msg.sender]\n      PUSH 0\t\t\tallowance[_from][msg.sender]\n      DUP3 \t\t\tallowance[_from][msg.sender] -...\n      DUP3 \t\t\tallowance[_from][msg.sender] -...\n      SLOAD \t\t\tallowance[_from][msg.sender] -...\n      PUSH [tag] 104\t\t\tallowance[_from][msg.sender] -...\n      SWAP2 \t\t\tallowance[_from][msg.sender] -...\n      SWAP1 \t\t\tallowance[_from][msg.sender] -...\n      PUSH [tag] 101\t\t\tallowance[_from][msg.sender] -...\n      JUMP \t\t\tallowance[_from][msg.sender] -...\n    tag 104\t\t\tallowance[_from][msg.sender] -...\n      JUMPDEST \t\t\tallowance[_from][msg.sender] -...\n      SWAP3 \t\t\tallowance[_from][msg.sender] -...\n      POP \t\t\tallowance[_from][msg.sender] -...\n      POP \t\t\tallowance[_from][msg.sender] -...\n      DUP2 \t\t\tallowance[_from][msg.sender] -...\n      SWAP1 \t\t\tallowance[_from][msg.sender] -...\n      SSTORE \t\t\tallowance[_from][msg.sender] -...\n      POP \t\t\tallowance[_from][msg.sender] -...\n      DUP3 \t\t\t_to\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(_from, _to, _value)\n      AND \t\t\tTransfer(_from, _to, _value)\n      DUP5 \t\t\t_from\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(_from, _to, _value)\n      AND \t\t\tTransfer(_from, _to, _value)\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\tTransfer(_from, _to, _value)\n      DUP5 \t\t\t_value\n      PUSH 40\t\t\tTransfer(_from, _to, _value)\n      MLOAD \t\t\tTransfer(_from, _to, _value)\n      PUSH [tag] 105\t\t\tTransfer(_from, _to, _value)\n      SWAP2 \t\t\tTransfer(_from, _to, _value)\n      SWAP1 \t\t\tTransfer(_from, _to, _value)\n      PUSH [tag] 34\t\t\tTransfer(_from, _to, _value)\n      JUMP \t\t\tTransfer(_from, _to, _value)\n    tag 105\t\t\tTransfer(_from, _to, _value)\n      JUMPDEST \t\t\tTransfer(_from, _to, _value)\n      PUSH 40\t\t\tTransfer(_from, _to, _value)\n      MLOAD \t\t\tTransfer(_from, _to, _value)\n      DUP1 \t\t\tTransfer(_from, _to, _value)\n      SWAP2 \t\t\tTransfer(_from, _to, _value)\n      SUB \t\t\tTransfer(_from, _to, _value)\n      SWAP1 \t\t\tTransfer(_from, _to, _value)\n      LOG3 \t\t\tTransfer(_from, _to, _value)\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP4 \t\t\tfunction transferFrom(address ...\n      SWAP3 \t\t\tfunction transferFrom(address ...\n      POP \t\t\tfunction transferFrom(address ...\n      POP \t\t\tfunction transferFrom(address ...\n      POP \t\t\tfunction transferFrom(address ...\n      JUMP \t\t\tfunction transferFrom(address ...\n    tag 41\t\t\tuint8 public decimals = 0\n      JUMPDEST \t\t\tuint8 public decimals = 0\n      PUSH 2\t\t\tuint8 public decimals = 0\n      PUSH 0\t\t\tuint8 public decimals = 0\n      SWAP1 \t\t\tuint8 public decimals = 0\n      SLOAD \t\t\tuint8 public decimals = 0\n      SWAP1 \t\t\tuint8 public decimals = 0\n      PUSH 100\t\t\tuint8 public decimals = 0\n      EXP \t\t\tuint8 public decimals = 0\n      SWAP1 \t\t\tuint8 public decimals = 0\n      DIV \t\t\tuint8 public decimals = 0\n      PUSH FF\t\t\tuint8 public decimals = 0\n      AND \t\t\tuint8 public decimals = 0\n      DUP2 \t\t\tuint8 public decimals = 0\n      JUMP \t\t\tuint8 public decimals = 0\n    tag 45\t\t\tuint256 public constant initia...\n      JUMPDEST \t\t\tuint256 public constant initia...\n      PUSH 2710\t\t\t10000\n      PUSH 9C4\t\t\t2500\n      PUSH 1\t\t\t1\n      PUSH [tag] 106\t\t\tsquareMetersPerToken * hectare...\n      SWAP2 \t\t\tsquareMetersPerToken * hectare...\n      SWAP1 \t\t\tsquareMetersPerToken * hectare...\n      PUSH [tag] 107\t\t\tsquareMetersPerToken * hectare...\n      JUMP \t\t\tsquareMetersPerToken * hectare...\n    tag 106\t\t\tsquareMetersPerToken * hectare...\n      JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n      PUSH [tag] 108\t\t\tsquareMetersPerToken * hectare...\n      SWAP2 \t\t\tsquareMetersPerToken * hectare...\n      SWAP1 \t\t\tsquareMetersPerToken * hectare...\n      PUSH [tag] 107\t\t\tsquareMetersPerToken * hectare...\n      JUMP \t\t\tsquareMetersPerToken * hectare...\n    tag 108\t\t\tsquareMetersPerToken * hectare...\n      JUMPDEST \t\t\tsquareMetersPerToken * hectare...\n      DUP2 \t\t\tuint256 public constant initia...\n      JUMP \t\t\tuint256 public constant initia...\n    tag 50\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 5\t\t\tmapping(address => uint256) pu...\n      PUSH 20\t\t\tmapping(address => uint256) pu...\n      MSTORE \t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      MSTORE \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      KECCAK256 \t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      POP \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      POP \t\t\tmapping(address => uint256) pu...\n      SLOAD \t\t\tmapping(address => uint256) pu...\n      DUP2 \t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 53\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      PUSH 4\t\t\taddress public owner\n      PUSH 0\t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      SLOAD \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      PUSH 100\t\t\taddress public owner\n      EXP \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      DIV \t\t\taddress public owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public owner\n      AND \t\t\taddress public owner\n      DUP2 \t\t\taddress public owner\n      JUMP \t\t\taddress public owner\n    tag 57\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      PUSH 1\t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      SLOAD \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 109\t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 82\t\t\tstring public symbol = \"TR\"\n      JUMP \t\t\tstring public symbol = \"TR\"\n    tag 109\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      PUSH 1F\t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      PUSH 20\t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n      DIV \t\t\tstring public symbol = \"TR\"\n      MUL \t\t\tstring public symbol = \"TR\"\n      PUSH 20\t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      PUSH 40\t\t\tstring public symbol = \"TR\"\n      MLOAD \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      DUP2 \t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      PUSH 40\t\t\tstring public symbol = \"TR\"\n      MSTORE \t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      SWAP3 \t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      DUP2 \t\t\tstring public symbol = \"TR\"\n      DUP2 \t\t\tstring public symbol = \"TR\"\n      MSTORE \t\t\tstring public symbol = \"TR\"\n      PUSH 20\t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      DUP3 \t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      SLOAD \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 110\t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 82\t\t\tstring public symbol = \"TR\"\n      JUMP \t\t\tstring public symbol = \"TR\"\n    tag 110\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      ISZERO \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 111\t\t\tstring public symbol = \"TR\"\n      JUMPI \t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      PUSH 1F\t\t\tstring public symbol = \"TR\"\n      LT \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 112\t\t\tstring public symbol = \"TR\"\n      JUMPI \t\t\tstring public symbol = \"TR\"\n      PUSH 100\t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      DUP4 \t\t\tstring public symbol = \"TR\"\n      SLOAD \t\t\tstring public symbol = \"TR\"\n      DIV \t\t\tstring public symbol = \"TR\"\n      MUL \t\t\tstring public symbol = \"TR\"\n      DUP4 \t\t\tstring public symbol = \"TR\"\n      MSTORE \t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n      PUSH 20\t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 111\t\t\tstring public symbol = \"TR\"\n      JUMP \t\t\tstring public symbol = \"TR\"\n    tag 112\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      DUP3 \t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      PUSH 0\t\t\tstring public symbol = \"TR\"\n      MSTORE \t\t\tstring public symbol = \"TR\"\n      PUSH 20\t\t\tstring public symbol = \"TR\"\n      PUSH 0\t\t\tstring public symbol = \"TR\"\n      KECCAK256 \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n    tag 113\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      DUP2 \t\t\tstring public symbol = \"TR\"\n      SLOAD \t\t\tstring public symbol = \"TR\"\n      DUP2 \t\t\tstring public symbol = \"TR\"\n      MSTORE \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      PUSH 1\t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      PUSH 20\t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      DUP1 \t\t\tstring public symbol = \"TR\"\n      DUP4 \t\t\tstring public symbol = \"TR\"\n      GT \t\t\tstring public symbol = \"TR\"\n      PUSH [tag] 113\t\t\tstring public symbol = \"TR\"\n      JUMPI \t\t\tstring public symbol = \"TR\"\n      DUP3 \t\t\tstring public symbol = \"TR\"\n      SWAP1 \t\t\tstring public symbol = \"TR\"\n      SUB \t\t\tstring public symbol = \"TR\"\n      PUSH 1F\t\t\tstring public symbol = \"TR\"\n      AND \t\t\tstring public symbol = \"TR\"\n      DUP3 \t\t\tstring public symbol = \"TR\"\n      ADD \t\t\tstring public symbol = \"TR\"\n      SWAP2 \t\t\tstring public symbol = \"TR\"\n    tag 111\t\t\tstring public symbol = \"TR\"\n      JUMPDEST \t\t\tstring public symbol = \"TR\"\n      POP \t\t\tstring public symbol = \"TR\"\n      POP \t\t\tstring public symbol = \"TR\"\n      POP \t\t\tstring public symbol = \"TR\"\n      POP \t\t\tstring public symbol = \"TR\"\n      POP \t\t\tstring public symbol = \"TR\"\n      DUP2 \t\t\tstring public symbol = \"TR\"\n      JUMP \t\t\tstring public symbol = \"TR\"\n    tag 62\t\t\tfunction mint(uint256 _amount)...\n      JUMPDEST \t\t\tfunction mint(uint256 _amount)...\n      PUSH 4\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      EQ \t\t\tmsg.sender == owner\n      PUSH [tag] 115\t\t\trequire(msg.sender == owner, \"...\n      JUMPI \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.sender == owner, \"...\n      DUP2 \t\t\trequire(msg.sender == owner, \"...\n      MSTORE \t\t\trequire(msg.sender == owner, \"...\n      PUSH 4\t\t\trequire(msg.sender == owner, \"...\n      ADD \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 116\t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 117\t\t\trequire(msg.sender == owner, \"...\n      JUMP \t\t\trequire(msg.sender == owner, \"...\n    tag 116\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      DUP1 \t\t\trequire(msg.sender == owner, \"...\n      SWAP2 \t\t\trequire(msg.sender == owner, \"...\n      SUB \t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      REVERT \t\t\trequire(msg.sender == owner, \"...\n    tag 115\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      DUP1 \t\t\t_amount\n      PUSH 3\t\t\ttotalSupply\n      PUSH 0\t\t\ttotalSupply\n      DUP3 \t\t\ttotalSupply += _amount\n      DUP3 \t\t\ttotalSupply += _amount\n      SLOAD \t\t\ttotalSupply += _amount\n      PUSH [tag] 119\t\t\ttotalSupply += _amount\n      SWAP2 \t\t\ttotalSupply += _amount\n      SWAP1 \t\t\ttotalSupply += _amount\n      PUSH [tag] 103\t\t\ttotalSupply += _amount\n      JUMP \t\t\ttotalSupply += _amount\n    tag 119\t\t\ttotalSupply += _amount\n      JUMPDEST \t\t\ttotalSupply += _amount\n      SWAP3 \t\t\ttotalSupply += _amount\n      POP \t\t\ttotalSupply += _amount\n      POP \t\t\ttotalSupply += _amount\n      DUP2 \t\t\ttotalSupply += _amount\n      SWAP1 \t\t\ttotalSupply += _amount\n      SSTORE \t\t\ttotalSupply += _amount\n      POP \t\t\ttotalSupply += _amount\n      DUP1 \t\t\t_amount\n      PUSH 5\t\t\tbalanceOf\n      PUSH 0\t\t\tbalanceOf[owner]\n      PUSH 4\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[owner]\n      AND \t\t\tbalanceOf[owner]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[owner]\n      AND \t\t\tbalanceOf[owner]\n      DUP2 \t\t\tbalanceOf[owner]\n      MSTORE \t\t\tbalanceOf[owner]\n      PUSH 20\t\t\tbalanceOf[owner]\n      ADD \t\t\tbalanceOf[owner]\n      SWAP1 \t\t\tbalanceOf[owner]\n      DUP2 \t\t\tbalanceOf[owner]\n      MSTORE \t\t\tbalanceOf[owner]\n      PUSH 20\t\t\tbalanceOf[owner]\n      ADD \t\t\tbalanceOf[owner]\n      PUSH 0\t\t\tbalanceOf[owner]\n      KECCAK256 \t\t\tbalanceOf[owner]\n      PUSH 0\t\t\tbalanceOf[owner]\n      DUP3 \t\t\tbalanceOf[owner] += _amount\n      DUP3 \t\t\tbalanceOf[owner] += _amount\n      SLOAD \t\t\tbalanceOf[owner] += _amount\n      PUSH [tag] 120\t\t\tbalanceOf[owner] += _amount\n      SWAP2 \t\t\tbalanceOf[owner] += _amount\n      SWAP1 \t\t\tbalanceOf[owner] += _amount\n      PUSH [tag] 103\t\t\tbalanceOf[owner] += _amount\n      JUMP \t\t\tbalanceOf[owner] += _amount\n    tag 120\t\t\tbalanceOf[owner] += _amount\n      JUMPDEST \t\t\tbalanceOf[owner] += _amount\n      SWAP3 \t\t\tbalanceOf[owner] += _amount\n      POP \t\t\tbalanceOf[owner] += _amount\n      POP \t\t\tbalanceOf[owner] += _amount\n      DUP2 \t\t\tbalanceOf[owner] += _amount\n      SWAP1 \t\t\tbalanceOf[owner] += _amount\n      SSTORE \t\t\tbalanceOf[owner] += _amount\n      POP \t\t\tbalanceOf[owner] += _amount\n      PUSH 4\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), owner, _a...\n      AND \t\t\tTransfer(address(0), owner, _a...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(address(0), owner, _a...\n      AND \t\t\tTransfer(address(0), owner, _a...\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\tTransfer(address(0), owner, _a...\n      DUP4 \t\t\t_amount\n      PUSH 40\t\t\tTransfer(address(0), owner, _a...\n      MLOAD \t\t\tTransfer(address(0), owner, _a...\n      PUSH [tag] 121\t\t\tTransfer(address(0), owner, _a...\n      SWAP2 \t\t\tTransfer(address(0), owner, _a...\n      SWAP1 \t\t\tTransfer(address(0), owner, _a...\n      PUSH [tag] 34\t\t\tTransfer(address(0), owner, _a...\n      JUMP \t\t\tTransfer(address(0), owner, _a...\n    tag 121\t\t\tTransfer(address(0), owner, _a...\n      JUMPDEST \t\t\tTransfer(address(0), owner, _a...\n      PUSH 40\t\t\tTransfer(address(0), owner, _a...\n      MLOAD \t\t\tTransfer(address(0), owner, _a...\n      DUP1 \t\t\tTransfer(address(0), owner, _a...\n      SWAP2 \t\t\tTransfer(address(0), owner, _a...\n      SUB \t\t\tTransfer(address(0), owner, _a...\n      SWAP1 \t\t\tTransfer(address(0), owner, _a...\n      LOG3 \t\t\tTransfer(address(0), owner, _a...\n      POP \t\t\tfunction mint(uint256 _amount)...\n      JUMP \t\t\tfunction mint(uint256 _amount)...\n    tag 65\t\t\tfunction transfer(address _to,...\n      JUMPDEST \t\t\tfunction transfer(address _to,...\n      PUSH 0\t\t\tbool success\n      DUP1 \t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_to != address(0)\n      AND \t\t\t_to != address(0)\n      DUP4 \t\t\t_to\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_to != address(0)\n      AND \t\t\t_to != address(0)\n      SUB \t\t\t_to != address(0)\n      PUSH [tag] 123\t\t\trequire(_to != address(0), \"In...\n      JUMPI \t\t\trequire(_to != address(0), \"In...\n      PUSH 40\t\t\trequire(_to != address(0), \"In...\n      MLOAD \t\t\trequire(_to != address(0), \"In...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(_to != address(0), \"In...\n      DUP2 \t\t\trequire(_to != address(0), \"In...\n      MSTORE \t\t\trequire(_to != address(0), \"In...\n      PUSH 4\t\t\trequire(_to != address(0), \"In...\n      ADD \t\t\trequire(_to != address(0), \"In...\n      PUSH [tag] 124\t\t\trequire(_to != address(0), \"In...\n      SWAP1 \t\t\trequire(_to != address(0), \"In...\n      PUSH [tag] 93\t\t\trequire(_to != address(0), \"In...\n      JUMP \t\t\trequire(_to != address(0), \"In...\n    tag 124\t\t\trequire(_to != address(0), \"In...\n      JUMPDEST \t\t\trequire(_to != address(0), \"In...\n      PUSH 40\t\t\trequire(_to != address(0), \"In...\n      MLOAD \t\t\trequire(_to != address(0), \"In...\n      DUP1 \t\t\trequire(_to != address(0), \"In...\n      SWAP2 \t\t\trequire(_to != address(0), \"In...\n      SUB \t\t\trequire(_to != address(0), \"In...\n      SWAP1 \t\t\trequire(_to != address(0), \"In...\n      REVERT \t\t\trequire(_to != address(0), \"In...\n    tag 123\t\t\trequire(_to != address(0), \"In...\n      JUMPDEST \t\t\trequire(_to != address(0), \"In...\n      DUP2 \t\t\t_value\n      PUSH 5\t\t\tbalanceOf\n      PUSH 0\t\t\tbalanceOf[msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[msg.sender]\n      AND \t\t\tbalanceOf[msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[msg.sender]\n      AND \t\t\tbalanceOf[msg.sender]\n      DUP2 \t\t\tbalanceOf[msg.sender]\n      MSTORE \t\t\tbalanceOf[msg.sender]\n      PUSH 20\t\t\tbalanceOf[msg.sender]\n      ADD \t\t\tbalanceOf[msg.sender]\n      SWAP1 \t\t\tbalanceOf[msg.sender]\n      DUP2 \t\t\tbalanceOf[msg.sender]\n      MSTORE \t\t\tbalanceOf[msg.sender]\n      PUSH 20\t\t\tbalanceOf[msg.sender]\n      ADD \t\t\tbalanceOf[msg.sender]\n      PUSH 0\t\t\tbalanceOf[msg.sender]\n      KECCAK256 \t\t\tbalanceOf[msg.sender]\n      SLOAD \t\t\tbalanceOf[msg.sender]\n      LT \t\t\tbalanceOf[msg.sender] >= _valu...\n      ISZERO \t\t\tbalanceOf[msg.sender] >= _valu...\n      PUSH [tag] 125\t\t\trequire(balanceOf[msg.sender] ...\n      JUMPI \t\t\trequire(balanceOf[msg.sender] ...\n      PUSH 40\t\t\trequire(balanceOf[msg.sender] ...\n      MLOAD \t\t\trequire(balanceOf[msg.sender] ...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(balanceOf[msg.sender] ...\n      DUP2 \t\t\trequire(balanceOf[msg.sender] ...\n      MSTORE \t\t\trequire(balanceOf[msg.sender] ...\n      PUSH 4\t\t\trequire(balanceOf[msg.sender] ...\n      ADD \t\t\trequire(balanceOf[msg.sender] ...\n      PUSH [tag] 126\t\t\trequire(balanceOf[msg.sender] ...\n      SWAP1 \t\t\trequire(balanceOf[msg.sender] ...\n      PUSH [tag] 96\t\t\trequire(balanceOf[msg.sender] ...\n      JUMP \t\t\trequire(balanceOf[msg.sender] ...\n    tag 126\t\t\trequire(balanceOf[msg.sender] ...\n      JUMPDEST \t\t\trequire(balanceOf[msg.sender] ...\n      PUSH 40\t\t\trequire(balanceOf[msg.sender] ...\n      MLOAD \t\t\trequire(balanceOf[msg.sender] ...\n      DUP1 \t\t\trequire(balanceOf[msg.sender] ...\n      SWAP2 \t\t\trequire(balanceOf[msg.sender] ...\n      SUB \t\t\trequire(balanceOf[msg.sender] ...\n      SWAP1 \t\t\trequire(balanceOf[msg.sender] ...\n      REVERT \t\t\trequire(balanceOf[msg.sender] ...\n    tag 125\t\t\trequire(balanceOf[msg.sender] ...\n      JUMPDEST \t\t\trequire(balanceOf[msg.sender] ...\n      DUP2 \t\t\t_value\n      PUSH 5\t\t\tbalanceOf\n      PUSH 0\t\t\tbalanceOf[msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[msg.sender]\n      AND \t\t\tbalanceOf[msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[msg.sender]\n      AND \t\t\tbalanceOf[msg.sender]\n      DUP2 \t\t\tbalanceOf[msg.sender]\n      MSTORE \t\t\tbalanceOf[msg.sender]\n      PUSH 20\t\t\tbalanceOf[msg.sender]\n      ADD \t\t\tbalanceOf[msg.sender]\n      SWAP1 \t\t\tbalanceOf[msg.sender]\n      DUP2 \t\t\tbalanceOf[msg.sender]\n      MSTORE \t\t\tbalanceOf[msg.sender]\n      PUSH 20\t\t\tbalanceOf[msg.sender]\n      ADD \t\t\tbalanceOf[msg.sender]\n      PUSH 0\t\t\tbalanceOf[msg.sender]\n      KECCAK256 \t\t\tbalanceOf[msg.sender]\n      PUSH 0\t\t\tbalanceOf[msg.sender]\n      DUP3 \t\t\tbalanceOf[msg.sender] -= _valu...\n      DUP3 \t\t\tbalanceOf[msg.sender] -= _valu...\n      SLOAD \t\t\tbalanceOf[msg.sender] -= _valu...\n      PUSH [tag] 127\t\t\tbalanceOf[msg.sender] -= _valu...\n      SWAP2 \t\t\tbalanceOf[msg.sender] -= _valu...\n      SWAP1 \t\t\tbalanceOf[msg.sender] -= _valu...\n      PUSH [tag] 101\t\t\tbalanceOf[msg.sender] -= _valu...\n      JUMP \t\t\tbalanceOf[msg.sender] -= _valu...\n    tag 127\t\t\tbalanceOf[msg.sender] -= _valu...\n      JUMPDEST \t\t\tbalanceOf[msg.sender] -= _valu...\n      SWAP3 \t\t\tbalanceOf[msg.sender] -= _valu...\n      POP \t\t\tbalanceOf[msg.sender] -= _valu...\n      POP \t\t\tbalanceOf[msg.sender] -= _valu...\n      DUP2 \t\t\tbalanceOf[msg.sender] -= _valu...\n      SWAP1 \t\t\tbalanceOf[msg.sender] -= _valu...\n      SSTORE \t\t\tbalanceOf[msg.sender] -= _valu...\n      POP \t\t\tbalanceOf[msg.sender] -= _valu...\n      DUP2 \t\t\t_value\n      PUSH 5\t\t\tbalanceOf\n      PUSH 0\t\t\tbalanceOf[_to]\n      DUP6 \t\t\t_to\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_to]\n      AND \t\t\tbalanceOf[_to]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tbalanceOf[_to]\n      AND \t\t\tbalanceOf[_to]\n      DUP2 \t\t\tbalanceOf[_to]\n      MSTORE \t\t\tbalanceOf[_to]\n      PUSH 20\t\t\tbalanceOf[_to]\n      ADD \t\t\tbalanceOf[_to]\n      SWAP1 \t\t\tbalanceOf[_to]\n      DUP2 \t\t\tbalanceOf[_to]\n      MSTORE \t\t\tbalanceOf[_to]\n      PUSH 20\t\t\tbalanceOf[_to]\n      ADD \t\t\tbalanceOf[_to]\n      PUSH 0\t\t\tbalanceOf[_to]\n      KECCAK256 \t\t\tbalanceOf[_to]\n      PUSH 0\t\t\tbalanceOf[_to]\n      DUP3 \t\t\tbalanceOf[_to] += _value\n      DUP3 \t\t\tbalanceOf[_to] += _value\n      SLOAD \t\t\tbalanceOf[_to] += _value\n      PUSH [tag] 128\t\t\tbalanceOf[_to] += _value\n      SWAP2 \t\t\tbalanceOf[_to] += _value\n      SWAP1 \t\t\tbalanceOf[_to] += _value\n      PUSH [tag] 103\t\t\tbalanceOf[_to] += _value\n      JUMP \t\t\tbalanceOf[_to] += _value\n    tag 128\t\t\tbalanceOf[_to] += _value\n      JUMPDEST \t\t\tbalanceOf[_to] += _value\n      SWAP3 \t\t\tbalanceOf[_to] += _value\n      POP \t\t\tbalanceOf[_to] += _value\n      POP \t\t\tbalanceOf[_to] += _value\n      DUP2 \t\t\tbalanceOf[_to] += _value\n      SWAP1 \t\t\tbalanceOf[_to] += _value\n      SSTORE \t\t\tbalanceOf[_to] += _value\n      POP \t\t\tbalanceOf[_to] += _value\n      DUP3 \t\t\t_to\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(msg.sender, _to, _val...\n      AND \t\t\tTransfer(msg.sender, _to, _val...\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tTransfer(msg.sender, _to, _val...\n      AND \t\t\tTransfer(msg.sender, _to, _val...\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\tTransfer(msg.sender, _to, _val...\n      DUP5 \t\t\t_value\n      PUSH 40\t\t\tTransfer(msg.sender, _to, _val...\n      MLOAD \t\t\tTransfer(msg.sender, _to, _val...\n      PUSH [tag] 129\t\t\tTransfer(msg.sender, _to, _val...\n      SWAP2 \t\t\tTransfer(msg.sender, _to, _val...\n      SWAP1 \t\t\tTransfer(msg.sender, _to, _val...\n      PUSH [tag] 34\t\t\tTransfer(msg.sender, _to, _val...\n      JUMP \t\t\tTransfer(msg.sender, _to, _val...\n    tag 129\t\t\tTransfer(msg.sender, _to, _val...\n      JUMPDEST \t\t\tTransfer(msg.sender, _to, _val...\n      PUSH 40\t\t\tTransfer(msg.sender, _to, _val...\n      MLOAD \t\t\tTransfer(msg.sender, _to, _val...\n      DUP1 \t\t\tTransfer(msg.sender, _to, _val...\n      SWAP2 \t\t\tTransfer(msg.sender, _to, _val...\n      SUB \t\t\tTransfer(msg.sender, _to, _val...\n      SWAP1 \t\t\tTransfer(msg.sender, _to, _val...\n      LOG3 \t\t\tTransfer(msg.sender, _to, _val...\n      PUSH 1\t\t\ttrue\n      SWAP1 \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP3 \t\t\tfunction transfer(address _to,...\n      SWAP2 \t\t\tfunction transfer(address _to,...\n      POP \t\t\tfunction transfer(address _to,...\n      POP \t\t\tfunction transfer(address _to,...\n      JUMP \t\t\tfunction transfer(address _to,...\n    tag 70\t\t\tmapping(address => mapping(add...\n      JUMPDEST \t\t\tmapping(address => mapping(add...\n      PUSH 6\t\t\tmapping(address => mapping(add...\n      PUSH 20\t\t\tmapping(address => mapping(add...\n      MSTORE \t\t\tmapping(address => mapping(add...\n      DUP2 \t\t\tmapping(address => mapping(add...\n      PUSH 0\t\t\tmapping(address => mapping(add...\n      MSTORE \t\t\tmapping(address => mapping(add...\n      PUSH 40\t\t\tmapping(address => mapping(add...\n      PUSH 0\t\t\tmapping(address => mapping(add...\n      KECCAK256 \t\t\tmapping(address => mapping(add...\n      PUSH 20\t\t\tmapping(address => mapping(add...\n      MSTORE \t\t\tmapping(address => mapping(add...\n      DUP1 \t\t\tmapping(address => mapping(add...\n      PUSH 0\t\t\tmapping(address => mapping(add...\n      MSTORE \t\t\tmapping(address => mapping(add...\n      PUSH 40\t\t\tmapping(address => mapping(add...\n      PUSH 0\t\t\tmapping(address => mapping(add...\n      KECCAK256 \t\t\tmapping(address => mapping(add...\n      PUSH 0\t\t\tmapping(address => mapping(add...\n      SWAP2 \t\t\tmapping(address => mapping(add...\n      POP \t\t\tmapping(address => mapping(add...\n      SWAP2 \t\t\tmapping(address => mapping(add...\n      POP \t\t\tmapping(address => mapping(add...\n      POP \t\t\tmapping(address => mapping(add...\n      SLOAD \t\t\tmapping(address => mapping(add...\n      DUP2 \t\t\tmapping(address => mapping(add...\n      JUMP \t\t\tmapping(address => mapping(add...\n    tag 73\t\t\tuint256 public constant hectar...\n      JUMPDEST \t\t\tuint256 public constant hectar...\n      PUSH 9C4\t\t\t2500\n      DUP2 \t\t\tuint256 public constant hectar...\n      JUMP \t\t\tuint256 public constant hectar...\n    tag 77\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH 4\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      EQ \t\t\tmsg.sender == owner\n      PUSH [tag] 131\t\t\trequire(msg.sender == owner, \"...\n      JUMPI \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.sender == owner, \"...\n      DUP2 \t\t\trequire(msg.sender == owner, \"...\n      MSTORE \t\t\trequire(msg.sender == owner, \"...\n      PUSH 4\t\t\trequire(msg.sender == owner, \"...\n      ADD \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 132\t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 117\t\t\trequire(msg.sender == owner, \"...\n      JUMP \t\t\trequire(msg.sender == owner, \"...\n    tag 132\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      DUP1 \t\t\trequire(msg.sender == owner, \"...\n      SWAP2 \t\t\trequire(msg.sender == owner, \"...\n      SUB \t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      REVERT \t\t\trequire(msg.sender == owner, \"...\n    tag 131\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnewOwner != address(0)\n      AND \t\t\tnewOwner != address(0)\n      DUP2 \t\t\tnewOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnewOwner != address(0)\n      AND \t\t\tnewOwner != address(0)\n      SUB \t\t\tnewOwner != address(0)\n      PUSH [tag] 134\t\t\trequire(newOwner != address(0)...\n      JUMPI \t\t\trequire(newOwner != address(0)...\n      PUSH 40\t\t\trequire(newOwner != address(0)...\n      MLOAD \t\t\trequire(newOwner != address(0)...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(newOwner != address(0)...\n      DUP2 \t\t\trequire(newOwner != address(0)...\n      MSTORE \t\t\trequire(newOwner != address(0)...\n      PUSH 4\t\t\trequire(newOwner != address(0)...\n      ADD \t\t\trequire(newOwner != address(0)...\n      PUSH [tag] 135\t\t\trequire(newOwner != address(0)...\n      SWAP1 \t\t\trequire(newOwner != address(0)...\n      PUSH [tag] 136\t\t\trequire(newOwner != address(0)...\n      JUMP \t\t\trequire(newOwner != address(0)...\n    tag 135\t\t\trequire(newOwner != address(0)...\n      JUMPDEST \t\t\trequire(newOwner != address(0)...\n      PUSH 40\t\t\trequire(newOwner != address(0)...\n      MLOAD \t\t\trequire(newOwner != address(0)...\n      DUP1 \t\t\trequire(newOwner != address(0)...\n      SWAP2 \t\t\trequire(newOwner != address(0)...\n      SUB \t\t\trequire(newOwner != address(0)...\n      SWAP1 \t\t\trequire(newOwner != address(0)...\n      REVERT \t\t\trequire(newOwner != address(0)...\n    tag 134\t\t\trequire(newOwner != address(0)...\n      JUMPDEST \t\t\trequire(newOwner != address(0)...\n      DUP1 \t\t\tnewOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(owner, ne...\n      AND \t\t\tOwnershipTransferred(owner, ne...\n      PUSH 4\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tOwnershipTransferred(owner, ne...\n      AND \t\t\tOwnershipTransferred(owner, ne...\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\tOwnershipTransferred(owner, ne...\n      PUSH 40\t\t\tOwnershipTransferred(owner, ne...\n      MLOAD \t\t\tOwnershipTransferred(owner, ne...\n      PUSH 40\t\t\tOwnershipTransferred(owner, ne...\n      MLOAD \t\t\tOwnershipTransferred(owner, ne...\n      DUP1 \t\t\tOwnershipTransferred(owner, ne...\n      SWAP2 \t\t\tOwnershipTransferred(owner, ne...\n      SUB \t\t\tOwnershipTransferred(owner, ne...\n      SWAP1 \t\t\tOwnershipTransferred(owner, ne...\n      LOG3 \t\t\tOwnershipTransferred(owner, ne...\n      DUP1 \t\t\tnewOwner\n      PUSH 4\t\t\towner\n      PUSH 0\t\t\towner\n      PUSH 100\t\t\towner = newOwner\n      EXP \t\t\towner = newOwner\n      DUP2 \t\t\towner = newOwner\n      SLOAD \t\t\towner = newOwner\n      DUP2 \t\t\towner = newOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = newOwner\n      MUL \t\t\towner = newOwner\n      NOT \t\t\towner = newOwner\n      AND \t\t\towner = newOwner\n      SWAP1 \t\t\towner = newOwner\n      DUP4 \t\t\towner = newOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = newOwner\n      AND \t\t\towner = newOwner\n      MUL \t\t\towner = newOwner\n      OR \t\t\towner = newOwner\n      SWAP1 \t\t\towner = newOwner\n      SSTORE \t\t\towner = newOwner\n      POP \t\t\towner = newOwner\n      POP \t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 79\t\t\tuint256 public constant square...\n      JUMPDEST \t\t\tuint256 public constant square...\n      PUSH 1\t\t\t1\n      DUP2 \t\t\tuint256 public constant square...\n      JUMP \t\t\tuint256 public constant square...\n    tag 137\t\t\t-License-Identifier: MIT\\nprag...\n      JUMPDEST \t\t\t-License-Identifier: MIT\\nprag...\n      PUSH 0\t\t\tntract\n      DUP2 \t\t\tariab\n      MLOAD \t\t\tblic variabl\n      SWAP1 \t\t\t\\n    // Public variabl\n      POP \t\t\t\\n    // Public variabl\n      SWAP2 \t\t\t-License-Identifier: MIT\\nprag...\n      SWAP1 \t\t\t-License-Identifier: MIT\\nprag...\n      POP \t\t\t-License-Identifier: MIT\\nprag...\n      JUMP \t\t\t-License-Identifier: MIT\\nprag...\n    tag 138\t\t\ten\\n    string public name = \"...\n      JUMPDEST \t\t\ten\\n    string public name = \"...\n      PUSH 0\t\t\t public dec\n      DUP3 \t\t\tpublic\n      DUP3 \t\t\tt25\n      MSTORE \t\t\t    uint256 public \n      PUSH 20\t\t\t  ui\n      DUP3 \t\t\tts\\n\n      ADD \t\t\tstants\\n    uin\n      SWAP1 \t\t\tly;\\n\\n    // Constants\\n    u...\n      POP \t\t\tly;\\n\\n    // Constants\\n    u...\n      SWAP3 \t\t\ten\\n    string public name = \"...\n      SWAP2 \t\t\ten\\n    string public name = \"...\n      POP \t\t\ten\\n    string public name = \"...\n      POP \t\t\ten\\n    string public name = \"...\n      JUMP \t\t\ten\\n    string public name = \"...\n    tag 139\t\t\tconstant squareMetersPerToken ...\n      JUMPDEST \t\t\tconstant squareMetersPerToken ...\n      DUP3 \t\t\tnt256 \n      DUP2 \t\t\t   \n      DUP4 \t\t\tand\n      MCOPY \t\t\tr of land\\n    uint256 p\n      PUSH 0\t\t\t \n      DUP4 \t\t\t 2500;\n      DUP4 \t\t\tres\n      ADD \t\t\tectares = 2500; \n      MSTORE \t\t\tstant hectares = 2500; // 2\n      POP \t\t\tconstant squareMetersPerToken ...\n      POP \t\t\tconstant squareMetersPerToken ...\n      POP \t\t\tconstant squareMetersPerToken ...\n      JUMP \t\t\tconstant squareMetersPerToken ...\n    tag 140\t\t\t\\n    uint256 public constant ...\n      JUMPDEST \t\t\t\\n    uint256 public constant ...\n      PUSH 0\t\t\ty = sq\n      PUSH 1F\t\t\tve\n      NOT \t\t\t Conver\n      PUSH 1F\t\t\t0;\n      DUP4 \t\t\t * 10\n      ADD \t\t\tares * 10000; \n      AND \t\t\thectares * 10000; // Convert\n      SWAP1 \t\t\terToken * hectares * 10000; //...\n      POP \t\t\terToken * hectares * 10000; //...\n      SWAP2 \t\t\t\\n    uint256 public constant ...\n      SWAP1 \t\t\t\\n    uint256 public constant ...\n      POP \t\t\t\\n    uint256 public constant ...\n      JUMP \t\t\t\\n    uint256 public constant ...\n    tag 141\t\t\t to square meters\\n\\n    // Ow...\n      JUMPDEST \t\t\t to square meters\\n\\n    // Ow...\n      PUSH 0\t\t\tppi\n      PUSH [tag] 176\t\t\tapping(address => uint256) pub...\n      DUP3 \t\t\t bala\n      PUSH [tag] 137\t\t\tapping(address => uint256) pub...\n      JUMP \t\t\tapping(address => uint256) pub...\n    tag 176\t\t\tapping(address => uint256) pub...\n      JUMPDEST \t\t\tapping(address => uint256) pub...\n      PUSH [tag] 177\t\t\tping to hold allowances\\n    m...\n      DUP2 \t\t\t> uint\n      DUP6 \t\t\tess\n      PUSH [tag] 138\t\t\tping to hold allowances\\n    m...\n      JUMP \t\t\tping to hold allowances\\n    m...\n    tag 177\t\t\tping to hold allowances\\n    m...\n      JUMPDEST \t\t\tping to hold allowances\\n    m...\n      SWAP4 \t\t\t // Mapping to hold allowances...\n      POP \t\t\t // Mapping to hold allowances...\n      PUSH [tag] 178\t\t\tic allowance;\\n\\n    // Events...\n      DUP2 \t\t\tdexed \n      DUP6 \t\t\tss \n      PUSH 20\t\t\tr(ad\n      DUP7 \t\t\tTrans\n      ADD \t\t\tent Transfer(add\n      PUSH [tag] 139\t\t\tic allowance;\\n\\n    // Events...\n      JUMP \t\t\tic allowance;\\n\\n    // Events...\n    tag 178\t\t\tic allowance;\\n\\n    // Events...\n      JUMPDEST \t\t\tic allowance;\\n\\n    // Events...\n      PUSH [tag] 179\t\t\tuint256 value);\\n    event App\n      DUP2 \t\t\tent Ap\n      PUSH [tag] 140\t\t\tuint256 value);\\n    event App\n      JUMP \t\t\tuint256 value);\\n    event App\n    tag 179\t\t\tuint256 value);\\n    event App\n      JUMPDEST \t\t\tuint256 value);\\n    event App\n      DUP5 \t\t\t to\n      ADD \t\t\texed to, uint256 value);\\n    ...\n      SWAP2 \t\t\tess indexed to, uint256 value)...\n      POP \t\t\tess indexed to, uint256 value)...\n      POP \t\t\tg to hold balances\\n    mappin...\n      SWAP3 \t\t\t to square meters\\n\\n    // Ow...\n      SWAP2 \t\t\t to square meters\\n\\n    // Ow...\n      POP \t\t\t to square meters\\n\\n    // Ow...\n      POP \t\t\t to square meters\\n\\n    // Ow...\n      JUMP \t\t\t to square meters\\n\\n    // Ow...\n    tag 24\t\t\t indexed owner, address indexe...\n      JUMPDEST \t\t\t indexed owner, address indexe...\n      PUSH 0\t\t\twner\n      PUSH 20\t\t\t//\n      DUP3 \t\t\tner);\\n\\n  \n      ADD \t\t\tewOwner);\\n\\n    // \n      SWAP1 \t\t\tndexed newOwner);\\n\\n    // \n      POP \t\t\tndexed newOwner);\\n\\n    // \n      DUP2 \t\t\tupply = i\n      DUP2 \t\t\ttota\n      SUB \t\t\t    totalSupply = in\n      PUSH 0\t\t\t \n      DUP4 \t\t\tructor() \n      ADD \t\t\tonstructor() {\\n  \n      MSTORE \t\t\tr\\n    constructor() {\\n      ...\n      PUSH [tag] 181\t\t\t   balanceOf[msg.sender] = ini...\n      DUP2 \t\t\t    \n      DUP5 \t\t\tnder;\\n\n      PUSH [tag] 141\t\t\t   balanceOf[msg.sender] = ini...\n      JUMP \t\t\t   balanceOf[msg.sender] = ini...\n    tag 181\t\t\t   balanceOf[msg.sender] = ini...\n      JUMPDEST \t\t\t   balanceOf[msg.sender] = ini...\n      SWAP1 \t\t\ty;\\n        balanceOf[msg.send...\n      POP \t\t\ty;\\n        balanceOf[msg.send...\n      SWAP3 \t\t\t indexed owner, address indexe...\n      SWAP2 \t\t\t indexed owner, address indexe...\n      POP \t\t\t indexed owner, address indexe...\n      POP \t\t\t indexed owner, address indexe...\n      JUMP \t\t\t indexed owner, address indexe...\n    tag 143\t\t\taller is the owner\\n    modifi...\n      JUMPDEST \t\t\taller is the owner\\n    modifi...\n      PUSH 0\t\t\ti\n      DUP1 \t\t\t \n      REVERT \t\t\tperform this\n    tag 145\t\t\t{\\n        require(_to != addr...\n      JUMPDEST \t\t\t{\\n        require(_to != addr...\n      PUSH 0\t\t\t\"Invali\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnceOf[msg.sender] >= _value, \"...\n      DUP3 \t\t\tre(ba\n      AND \t\t\tequire(balanceOf[msg.sender] >...\n      SWAP1 \t\t\t;\\n        require(balanceOf[m...\n      POP \t\t\t;\\n        require(balanceOf[m...\n      SWAP2 \t\t\t{\\n        require(_to != addr...\n      SWAP1 \t\t\t{\\n        require(_to != addr...\n      POP \t\t\t{\\n        require(_to != addr...\n      JUMP \t\t\t{\\n        require(_to != addr...\n    tag 146\t\t\t       \\n        balanceOf[msg...\n      JUMPDEST \t\t\t       \\n        balanceOf[msg...\n      PUSH 0\t\t\t -= _va\n      PUSH [tag] 187\t\t\t[_to] += _value;\\n       \n      DUP3 \t\t\t     \n      PUSH [tag] 145\t\t\t[_to] += _value;\\n       \n      JUMP \t\t\t[_to] += _value;\\n       \n    tag 187\t\t\t[_to] += _value;\\n       \n      JUMPDEST \t\t\t[_to] += _value;\\n       \n      SWAP1 \t\t\t  balanceOf[_to] += _value;\\n ...\n      POP \t\t\t  balanceOf[_to] += _value;\\n ...\n      SWAP2 \t\t\t       \\n        balanceOf[msg...\n      SWAP1 \t\t\t       \\n        balanceOf[msg...\n      POP \t\t\t       \\n        balanceOf[msg...\n      JUMP \t\t\t       \\n        balanceOf[msg...\n    tag 147\t\t\tit Transfer(msg.sender, _to, _...\n      JUMPDEST \t\t\tit Transfer(msg.sender, _to, _...\n      PUSH [tag] 189\t\t\tApprove function\\n    fun\n      DUP2 \t\t\t   fu\n      PUSH [tag] 146\t\t\tApprove function\\n    fun\n      JUMP \t\t\tApprove function\\n    fun\n    tag 189\t\t\tApprove function\\n    fun\n      JUMPDEST \t\t\tApprove function\\n    fun\n      DUP2 \t\t\t    /\n      EQ \t\t\t}\\n\\n    // Approve function\\n...\n      PUSH [tag] 190\t\t\ttrue;\\n    }\\n\\n    // Approve...\n      JUMPI \t\t\ttrue;\\n    }\\n\\n    // Approve...\n      PUSH 0\t\t\td\n      DUP1 \t\t\te\n      REVERT \t\t\t approve(add\n    tag 190\t\t\ttrue;\\n    }\\n\\n    // Approve...\n      JUMPDEST \t\t\ttrue;\\n    }\\n\\n    // Approve...\n      POP \t\t\tit Transfer(msg.sender, _to, _...\n      JUMP \t\t\tit Transfer(msg.sender, _to, _...\n    tag 148\t\t\t uint256 _value) public return...\n      JUMPDEST \t\t\t uint256 _value) public return...\n      PUSH 0\t\t\t {\\n  \n      DUP2 \t\t\tder] =\n      CALLDATALOAD \t\t\tsender][_spender] = \n      SWAP1 \t\t\tance[msg.sender][_spender] = \n      POP \t\t\tance[msg.sender][_spender] = \n      PUSH [tag] 192\t\t\t       emit Approval(msg.sende...\n      DUP2 \t\t\tnder,\n      PUSH [tag] 147\t\t\t       emit Approval(msg.sende...\n      JUMP \t\t\t       emit Approval(msg.sende...\n    tag 192\t\t\t       emit Approval(msg.sende...\n      JUMPDEST \t\t\t       emit Approval(msg.sende...\n      SWAP3 \t\t\t uint256 _value) public return...\n      SWAP2 \t\t\t uint256 _value) public return...\n      POP \t\t\t uint256 _value) public return...\n      POP \t\t\t uint256 _value) public return...\n      JUMP \t\t\t uint256 _value) public return...\n    tag 149\t\t\talue);\\n        return true;\\n...\n      JUMPDEST \t\t\talue);\\n        return true;\\n...\n      PUSH 0\t\t\t  // Tr\n      DUP2 \t\t\t   fu\n      SWAP1 \t\t\t function\\n    fu\n      POP \t\t\t function\\n    fu\n      SWAP2 \t\t\talue);\\n        return true;\\n...\n      SWAP1 \t\t\talue);\\n        return true;\\n...\n      POP \t\t\talue);\\n        return true;\\n...\n      JUMP \t\t\talue);\\n        return true;\\n...\n    tag 150\t\t\tferFrom(address _from, address...\n      JUMPDEST \t\t\tferFrom(address _from, address...\n      PUSH [tag] 195\t\t\tsuccess) {\\n        requi\n      DUP2 \t\t\t requ\n      PUSH [tag] 149\t\t\tsuccess) {\\n        requi\n      JUMP \t\t\tsuccess) {\\n        requi\n    tag 195\t\t\tsuccess) {\\n        requi\n      JUMPDEST \t\t\tsuccess) {\\n        requi\n      DUP2 \t\t\t (boo\n      EQ \t\t\trns (bool success) {\\n        ...\n      PUSH [tag] 196\t\t\tublic returns (bool success) {...\n      JUMPI \t\t\tublic returns (bool success) {...\n      PUSH 0\t\t\tr\n      DUP1 \t\t\ta\n      REVERT \t\t\trom != addre\n    tag 196\t\t\tublic returns (bool success) {...\n      JUMPDEST \t\t\tublic returns (bool success) {...\n      POP \t\t\tferFrom(address _from, address...\n      JUMP \t\t\tferFrom(address _from, address...\n    tag 151\t\t\t= address(0), \"Invalid address...\n      JUMPDEST \t\t\t= address(0), \"Invalid address...\n      PUSH 0\t\t\tire(b\n      DUP2 \t\t\tficien\n      CALLDATALOAD \t\t\tvalue, \"Insufficient\n      SWAP1 \t\t\trom] >= _value, \"Insufficient\n      POP \t\t\trom] >= _value, \"Insufficient\n      PUSH [tag] 198\t\t\t);\\n        require(allowance[...\n      DUP2 \t\t\te[_fr\n      PUSH [tag] 150\t\t\t);\\n        require(allowance[...\n      JUMP \t\t\t);\\n        require(allowance[...\n    tag 198\t\t\t);\\n        require(allowance[...\n      JUMPDEST \t\t\t);\\n        require(allowance[...\n      SWAP3 \t\t\t= address(0), \"Invalid address...\n      SWAP2 \t\t\t= address(0), \"Invalid address...\n      POP \t\t\t= address(0), \"Invalid address...\n      POP \t\t\t= address(0), \"Invalid address...\n      JUMP \t\t\t= address(0), \"Invalid address...\n    tag 27\t\t\tr] >= _value, \"Allowance excee...\n      JUMPDEST \t\t\tr] >= _value, \"Allowance excee...\n      PUSH 0\t\t\talue;\\n\n      DUP1 \t\t\t      \n      PUSH 40\t\t\t[_\n      DUP4 \t\t\t   allowa\n      DUP6 \t\t\tue;\\n   \n      SUB \t\t\t_value;\\n        allowan\n      SLT \t\t\t += _value;\\n        allowance...\n      ISZERO \t\t\tto] += _value;\\n        allowa...\n      PUSH [tag] 200\t\t\tto] += _value;\\n        allowa...\n      JUMPI \t\t\tto] += _value;\\n        allowa...\n      PUSH [tag] 201\t\t\t][msg.sender] -= _value;\\n\\n  ...\n      PUSH [tag] 143\t\t\t][msg.sender] -= _value;\\n\\n  ...\n      JUMP \t\t\t][msg.sender] -= _value;\\n\\n  ...\n    tag 201\t\t\t][msg.sender] -= _value;\\n\\n  ...\n      JUMPDEST \t\t\t][msg.sender] -= _value;\\n\\n  ...\n    tag 200\t\t\tto] += _value;\\n        allowa...\n      JUMPDEST \t\t\tto] += _value;\\n        allowa...\n      PUSH 0\t\t\t \n      PUSH [tag] 202\t\t\tamount) public onlyOwner {\\n  ...\n      DUP6 \t\t\ty += _a\n      DUP3 \t\t\totalSu\n      DUP7 \t\t\t{\\n       \n      ADD \t\t\tner {\\n        totalSup\n      PUSH [tag] 148\t\t\tamount) public onlyOwner {\\n  ...\n      JUMP \t\t\tamount) public onlyOwner {\\n  ...\n    tag 202\t\t\tamount) public onlyOwner {\\n  ...\n      JUMPDEST \t\t\tamount) public onlyOwner {\\n  ...\n      SWAP3 \t\t\t(uint256 _amount) public onlyO...\n      POP \t\t\t(uint256 _amount) public onlyO...\n      POP \t\t\t   }\\n\\n    // Mint function\\n...\n      PUSH 20\t\t\t  \n      PUSH [tag] 203\t\t\t, owner, _amount);\\n    }\\n\\n ...\n      DUP6 \t\t\ttransfe\n      DUP3 \t\t\tction \n      DUP7 \t\t\t\\n    // F\n      ADD \t\t\t  }\\n\\n    // Function t\n      PUSH [tag] 151\t\t\t, owner, _amount);\\n    }\\n\\n ...\n      JUMP \t\t\t, owner, _amount);\\n    }\\n\\n ...\n    tag 203\t\t\t, owner, _amount);\\n    }\\n\\n ...\n      JUMPDEST \t\t\t, owner, _amount);\\n    }\\n\\n ...\n      SWAP2 \t\t\taddress(0), owner, _amount);\\n...\n      POP \t\t\taddress(0), owner, _amount);\\n...\n      POP \t\t\teOf[owner] += _amount;\\n      ...\n      SWAP3 \t\t\tr] >= _value, \"Allowance excee...\n      POP \t\t\tr] >= _value, \"Allowance excee...\n      SWAP3 \t\t\tr] >= _value, \"Allowance excee...\n      SWAP1 \t\t\tr] >= _value, \"Allowance excee...\n      POP \t\t\tr] >= _value, \"Allowance excee...\n      JUMP \t\t\tr] >= _value, \"Allowance excee...\n    tag 152\t\t\tress\\n    function transferOwn...\n      JUMPDEST \t\t\tress\\n    function transferOwn...\n      PUSH 0\t\t\tp(addre\n      DUP2 \t\t\t    r\n      ISZERO \t\t\t {\\n        re\n      ISZERO \t\t\tlyOwner {\\n        req\n      SWAP1 \t\t\t) public onlyOwner {\\n        ...\n      POP \t\t\t) public onlyOwner {\\n        ...\n      SWAP2 \t\t\tress\\n    function transferOwn...\n      SWAP1 \t\t\tress\\n    function transferOwn...\n      POP \t\t\tress\\n    function transferOwn...\n      JUMP \t\t\tress\\n    function transferOwn...\n    tag 153\t\t\tr != address(0), \"New owner is...\n      JUMPDEST \t\t\tr != address(0), \"New owner is...\n      PUSH [tag] 206\t\t\tred(owner, newOwner);\n      DUP2 \t\t\twner)\n      PUSH [tag] 152\t\t\tred(owner, newOwner);\n      JUMP \t\t\tred(owner, newOwner);\n    tag 206\t\t\tred(owner, newOwner);\n      JUMPDEST \t\t\tred(owner, newOwner);\n      DUP3 \t\t\tnsf\n      MSTORE \t\t\tshipTransferred(owner, newOwne...\n      POP \t\t\tr != address(0), \"New owner is...\n      POP \t\t\tr != address(0), \"New owner is...\n      JUMP \t\t\tr != address(0), \"New owner is...\n    tag 30\t\t\tr = newOwner;\\n    }\\n}\n      JUMPDEST \t\t\tr = newOwner;\\n    }\\n}\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 208\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 153\t\t\t\n      JUMP \t\t\t\n    tag 208\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\tr = newOwner;\\n    }\\n}\n      SWAP2 \t\t\tr = newOwner;\\n    }\\n}\n      POP \t\t\tr = newOwner;\\n    }\\n}\n      POP \t\t\tr = newOwner;\\n    }\\n}\n      JUMP \t\t\tr = newOwner;\\n    }\\n}\n    tag 154\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 210\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 210\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 34\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 212\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 154\t\t\t\n      JUMP \t\t\t\n    tag 212\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 37\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP5 \t\t\t\n      DUP7 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 214\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 215\t\t\t\n      PUSH [tag] 143\t\t\t\n      JUMP \t\t\t\n    tag 215\t\t\t\n      JUMPDEST \t\t\t\n    tag 214\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 216\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 148\t\t\t\n      JUMP \t\t\t\n    tag 216\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 217\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 148\t\t\t\n      JUMP \t\t\t\n    tag 217\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      PUSH [tag] 218\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 151\t\t\t\n      JUMP \t\t\t\n    tag 218\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      JUMP \t\t\t\n    tag 155\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FF\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 156\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 221\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 155\t\t\t\n      JUMP \t\t\t\n    tag 221\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 43\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 223\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 156\t\t\t\n      JUMP \t\t\t\n    tag 223\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 49\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 225\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 226\t\t\t\n      PUSH [tag] 143\t\t\t\n      JUMP \t\t\t\n    tag 226\t\t\t\n      JUMPDEST \t\t\t\n    tag 225\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 227\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 148\t\t\t\n      JUMP \t\t\t\n    tag 227\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 157\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 229\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 146\t\t\t\n      JUMP \t\t\t\n    tag 229\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 55\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 231\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 231\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 61\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 233\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 234\t\t\t\n      PUSH [tag] 143\t\t\t\n      JUMP \t\t\t\n    tag 234\t\t\t\n      JUMPDEST \t\t\t\n    tag 233\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 235\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 151\t\t\t\n      JUMP \t\t\t\n    tag 235\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 69\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 237\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 238\t\t\t\n      PUSH [tag] 143\t\t\t\n      JUMP \t\t\t\n    tag 238\t\t\t\n      JUMPDEST \t\t\t\n    tag 237\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 239\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 148\t\t\t\n      JUMP \t\t\t\n    tag 239\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 240\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 148\t\t\t\n      JUMP \t\t\t\n    tag 240\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 158\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 82\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 2\t\t\t\n      DUP3 \t\t\t\n      DIV \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 243\t\t\t\n      JUMPI \t\t\t\n      PUSH 7F\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 243\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 244\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 245\t\t\t\n      PUSH [tag] 158\t\t\t\n      JUMP \t\t\t\n    tag 245\t\t\t\n      JUMPDEST \t\t\t\n    tag 244\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 159\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 496E76616C696420616464726573730000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 160\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 248\t\t\t\n      PUSH F\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 138\t\t\t\n      JUMP \t\t\t\n    tag 248\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 249\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 159\t\t\t\n      JUMP \t\t\t\n    tag 249\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 93\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 251\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 160\t\t\t\n      JUMP \t\t\t\n    tag 251\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 161\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 496E73756666696369656E742062616C616E6365000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 162\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 254\t\t\t\n      PUSH 14\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 138\t\t\t\n      JUMP \t\t\t\n    tag 254\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 255\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 161\t\t\t\n      JUMP \t\t\t\n    tag 255\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 96\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 257\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 162\t\t\t\n      JUMP \t\t\t\n    tag 257\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 163\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 416C6C6F77616E63652065786365656465640000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 164\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 260\t\t\t\n      PUSH 12\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 138\t\t\t\n      JUMP \t\t\t\n    tag 260\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 261\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 163\t\t\t\n      JUMP \t\t\t\n    tag 261\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 99\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 263\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMP \t\t\t\n    tag 263\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 165\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 101\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 266\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 266\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 267\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 267\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 268\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 269\t\t\t\n      PUSH [tag] 165\t\t\t\n      JUMP \t\t\t\n    tag 269\t\t\t\n      JUMPDEST \t\t\t\n    tag 268\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 103\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 271\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 271\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 272\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 272\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 273\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 274\t\t\t\n      PUSH [tag] 165\t\t\t\n      JUMP \t\t\t\n    tag 274\t\t\t\n      JUMPDEST \t\t\t\n    tag 273\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 107\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 276\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 276\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 277\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 277\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      MUL \t\t\t\n      PUSH [tag] 278\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 278\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      DIV \t\t\t\n      DUP5 \t\t\t\n      EQ \t\t\t\n      DUP4 \t\t\t\n      ISZERO \t\t\t\n      OR \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 280\t\t\t\n      PUSH [tag] 165\t\t\t\n      JUMP \t\t\t\n    tag 280\t\t\t\n      JUMPDEST \t\t\t\n    tag 279\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 166\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4F6E6C79206F776E65722063616E20706572666F726D20746869732061637469\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6F6E000000000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 167\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 283\t\t\t\n      PUSH 22\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 138\t\t\t\n      JUMP \t\t\t\n    tag 283\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 284\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 166\t\t\t\n      JUMP \t\t\t\n    tag 284\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 117\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 286\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 167\t\t\t\n      JUMP \t\t\t\n    tag 286\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 168\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E6577206F776E657220697320746865207A65726F2061646472657373000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 169\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 289\t\t\t\n      PUSH 1D\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 138\t\t\t\n      JUMP \t\t\t\n    tag 289\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 290\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 168\t\t\t\n      JUMP \t\t\t\n    tag 290\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 136\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 292\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 169\t\t\t\n      JUMP \t\t\t\n    tag 292\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}